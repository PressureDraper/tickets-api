generator client {
  provider = "prisma-client-js"
  output   = "./generated/client2"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_SICA3_URL")
}

model adm_tutoriales {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  titulo               String
  liga                 String
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  adm_tutoriales_roles adm_tutoriales_roles[]
}

model adm_tutoriales_roles {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  id_tutorial    Int?            @db.UnsignedInt
  id_roles       Int?            @db.UnsignedInt
  created_at     DateTime?       @db.Timestamp(0)
  updated_at     DateTime?       @db.Timestamp(0)
  roles          roles?          @relation(fields: [id_roles], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "adm_tutoriales_roles_id_roles_foreign")
  adm_tutoriales adm_tutoriales? @relation(fields: [id_tutorial], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "adm_tutoriales_roles_id_tutorial_foreign")

  @@index([id_roles], map: "adm_tutoriales_roles_id_roles_foreign")
  @@index([id_tutorial], map: "adm_tutoriales_roles_id_tutorial_foreign")
}

model bitacora {
  id                Int       @id @default(autoincrement()) @db.UnsignedInt
  idUsuario         Int
  idConfirmo        Int
  nick              String
  modulo            String
  accion            String
  datos             String    @db.Text
  datos_adicionales String?   @db.Text
  ubicacion         String?   @db.Text
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model cat_areas {
  id             Int         @id @default(autoincrement()) @db.UnsignedInt
  clave          String?
  nombre         String
  nombre_corto   String?     @db.VarChar(250)
  id_via_ingreso String?
  zona           String?
  estatus        Boolean     @default(true)
  created_at     DateTime?   @db.Timestamp(0)
  updated_at     DateTime?   @db.Timestamp(0)
  deleted_at     DateTime?   @db.Timestamp(0)
  cat_camas      cat_camas[]
}

model cat_asentamientos {
  id               Int              @id @default(autoincrement()) @db.UnsignedInt
  d_codigo         String?          @db.Char(10)
  d_asenta         String?          @db.VarChar(250)
  d_tipo_asenta    String?          @db.VarChar(250)
  d_mnpio          String?          @db.VarChar(250)
  d_estado         String?          @db.VarChar(250)
  d_ciudad         String?          @db.VarChar(250)
  d_cp             String?          @db.VarChar(250)
  c_estado         Int?
  c_oficina        String?          @db.VarChar(250)
  c_cp             String?          @db.VarChar(250)
  c_tipo_asenta    String?          @db.VarChar(250)
  c_mnpio          Int?
  id_asenta_cpcons String?          @db.VarChar(250)
  d_zona           String?          @db.VarChar(250)
  c_cve_ciudad     String?          @db.VarChar(250)
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  deleted_at       DateTime?        @db.Timestamp(0)
  cmp_domicilios   cmp_domicilios[]
  cmp_familiares   cmp_familiares[]
}

model cat_asignaciones {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  nombre                     String
  deleted_at                 DateTime?                    @db.Timestamp(0)
  created_at                 DateTime?                    @db.Timestamp(0)
  updated_at                 DateTime?                    @db.Timestamp(0)
  rch_empleados_asignaciones rch_empleados_asignaciones[]
}

model cat_bancos {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  clave         String          @db.Char(4)
  nombre        String
  razon_social  String
  activo        Boolean         @default(true)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_camas {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  nombre                   String                     @db.VarChar(20)
  estatus                  String                     @default("L") @db.Char(1)
  tipo                     String                     @db.Char(1)
  activa                   String                     @db.Char(1)
  id_area                  Int                        @db.UnsignedInt
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  deleted_at               DateTime?                  @db.Timestamp(0)
  cat_areas                cat_areas                  @relation(fields: [id_area], references: [id], onUpdate: Restrict, map: "cat_camas_id_area_foreign")
  cat_consulta_horarios    cat_consulta_horarios[]
  hpz_cama_historial       hpz_cama_historial[]
  hpz_ingreso_consulta     hpz_ingreso_consulta[]
  hpz_ingreso_hospitalario hpz_ingreso_hospitalario[]

  @@index([id_area], map: "cat_camas_id_area_foreign")
}

model cat_categorias {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  codigo        String          @db.VarChar(10)
  nombre        String          @db.VarChar(250)
  activo        Boolean         @default(true)
  sueldo_base   Decimal         @db.Decimal(10, 2)
  sueldo_diario Decimal         @db.Decimal(10, 2)
  area          String?         @db.VarChar(10)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_cateter_sitio_anatomico {
  id                      Int                       @id @default(autoincrement()) @db.UnsignedInt
  nombre                  String
  activo                  Boolean
  created_at              DateTime?                 @db.Timestamp(0)
  updated_at              DateTime?                 @db.Timestamp(0)
  hpz_cateter_instalacion hpz_cateter_instalacion[]
}

model cat_cateter_tipo {
  id                      Int                       @id @default(autoincrement()) @db.UnsignedInt
  nombre                  String
  activo                  Boolean
  created_at              DateTime?                 @db.Timestamp(0)
  updated_at              DateTime?                 @db.Timestamp(0)
  hpz_cateter_instalacion hpz_cateter_instalacion[]
}

model cat_checklist_preguntas {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String    @db.VarChar(250)
  formato    String    @db.VarChar(10)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model cat_checklist_respuestas {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String    @db.VarChar(250)
  categoria  String    @db.VarChar(250)
  formato    String    @db.VarChar(10)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model cat_cie10 {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  letra                    String?                    @db.Char(1)
  catalog_key              String?                    @db.VarChar(10)
  asterisco                String?                    @db.VarChar(10)
  nombre                   String?                    @db.VarChar(500)
  lsex                     String?                    @db.VarChar(6)
  linf                     String?                    @db.VarChar(6)
  lsup                     String?                    @db.VarChar(6)
  trivial                  String?                    @db.Char(2)
  erradicado               String?                    @db.Char(2)
  n_inter                  String?                    @db.Char(2)
  nin                      String?                    @db.Char(2)
  ninmtobs                 String?                    @db.Char(2)
  no_cbd                   String?                    @db.Char(2)
  no_aph                   String?                    @db.Char(2)
  fetal                    String?                    @db.Char(2)
  clave_capitulo_type      String?                    @db.Char(2)
  capitulo_type            String?                    @db.VarChar(500)
  rubrica_type             String?                    @db.Char(3)
  year_modifi              String?                    @db.VarChar(500)
  year_aplicacion          String?                    @db.VarChar(4)
  notdiaria                String?                    @db.Char(2)
  notsemanal               String?                    @db.Char(2)
  sistema_especial         String?                    @db.Char(2)
  birmm                    String?                    @db.Char(2)
  cve_causa_type           String?                    @db.Char(1)
  causa_type               String?                    @db.VarChar(500)
  epi_morta                String?                    @db.Char(2)
  epi_morta_m5             String?                    @db.Char(2)
  edas_e_iras_en_m5        String?                    @db.Char(2)
  lista1                   String?                    @db.Char(3)
  lista5                   String?                    @db.Char(3)
  prinmorta5               String?                    @db.Char(5)
  prinmorbi                String?                    @db.Char(5)
  lm_morbi                 String?                    @db.Char(5)
  lm_morta                 String?                    @db.Char(5)
  lgbd165                  String?                    @db.Char(5)
  lomsbeck                 String?                    @db.Char(5)
  lgbd190                  String?                    @db.Char(5)
  es_causes                String?                    @db.Char(2)
  num_causes               String?                    @db.Char(2)
  es_suive_morta           String?                    @db.Char(2)
  daga                     String?                    @db.Char(1)
  epi_clave                String?                    @db.VarChar(10)
  epi_clave_desc           String?                    @db.VarChar(500)
  es_suive_morb            String?                    @db.Char(2)
  es_suive_notin           String?                    @db.Char(2)
  es_suive_est_epi         String?                    @db.Char(2)
  es_suive_est_brote       String?                    @db.Char(2)
  sinac                    String?                    @db.Char(2)
  codigox                  String?                    @db.Char(2)
  cod_sit_lesion           String?                    @db.Char(2)
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  deleted_at               DateTime?                  @db.Timestamp(0)
  hpz_cama_historial       hpz_cama_historial[]
  hpz_dx_historial         hpz_dx_historial[]
  hpz_ingreso_consulta     hpz_ingreso_consulta[]
  hpz_ingreso_hospitalario hpz_ingreso_hospitalario[]
  hpz_patologia_estudios   hpz_patologia_estudios[]
}

model cat_clues {
  id                                                                                    Int                        @id @default(autoincrement()) @db.UnsignedInt
  clues                                                                                 String                     @db.VarChar(50)
  inst                                                                                  String?                    @db.VarChar(5)
  cve_ent                                                                               String?                    @db.VarChar(2)
  cve_jur                                                                               String?                    @db.VarChar(2)
  cve_mun                                                                               String?                    @db.VarChar(3)
  cve_loc                                                                               String?                    @db.VarChar(4)
  tipo1                                                                                 String?                    @db.VarChar(5)
  tipo2                                                                                 String?                    @db.VarChar(5)
  nom_uni                                                                               String?                    @db.VarChar(110)
  domicil                                                                               String?                    @db.VarChar(110)
  cp                                                                                    String?                    @db.VarChar(5)
  respon_unidad                                                                         String?
  estatus                                                                               Boolean                    @default(true)
  numtel                                                                                String?                    @db.VarChar(30)
  email                                                                                 String?                    @db.VarChar(30)
  created_at                                                                            DateTime?                  @db.Timestamp(0)
  updated_at                                                                            DateTime?                  @db.Timestamp(0)
  deleted_at                                                                            DateTime?                  @db.Timestamp(0)
  hpz_clue_historial                                                                    hpz_clue_historial[]
  hpz_ingreso_consulta_hpz_ingreso_consulta_id_clue_atencionTocat_clues                 hpz_ingreso_consulta[]     @relation("hpz_ingreso_consulta_id_clue_atencionTocat_clues")
  hpz_ingreso_consulta_hpz_ingreso_consulta_id_clue_contrareferenciaTocat_clues         hpz_ingreso_consulta[]     @relation("hpz_ingreso_consulta_id_clue_contrareferenciaTocat_clues")
  hpz_ingreso_consulta_hpz_ingreso_consulta_id_clue_referenciaTocat_clues               hpz_ingreso_consulta[]     @relation("hpz_ingreso_consulta_id_clue_referenciaTocat_clues")
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_clue_atencionTocat_clues         hpz_ingreso_hospitalario[] @relation("hpz_ingreso_hospitalario_id_clue_atencionTocat_clues")
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_clue_contrareferenciaTocat_clues hpz_ingreso_hospitalario[] @relation("hpz_ingreso_hospitalario_id_clue_contrareferenciaTocat_clues")
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_clue_referenciaTocat_clues       hpz_ingreso_hospitalario[] @relation("hpz_ingreso_hospitalario_id_clue_referenciaTocat_clues")
}

model cat_codigos_postales {
  id             Int            @id @default(autoincrement()) @db.UnsignedInt
  clave          String         @db.VarChar(2)
  nombre         String         @db.VarChar(50)
  abrev          String         @db.VarChar(4)
  id_municipio   Int            @db.UnsignedInt
  created_at     DateTime?      @db.Timestamp(0)
  updated_at     DateTime?      @db.Timestamp(0)
  deleted_at     DateTime?      @db.Timestamp(0)
  cat_municipios cat_municipios @relation(fields: [id_municipio], references: [id], onUpdate: Restrict, map: "cat_codigos_postales_id_municipio_foreign")

  @@index([id_municipio], map: "cat_codigos_postales_id_municipio_foreign")
}

model cat_codigos_urgencias {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  nombre                   String
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  deleted_at               DateTime?                  @db.Timestamp(0)
  hpz_ingreso_hospitalario hpz_ingreso_hospitalario[]
}

model cat_colonias {
  id             Int            @id @default(autoincrement()) @db.UnsignedInt
  clave          String         @db.VarChar(2)
  nombre         String         @db.VarChar(50)
  abrev          String         @db.VarChar(4)
  id_municipio   Int            @db.UnsignedInt
  created_at     DateTime?      @db.Timestamp(0)
  updated_at     DateTime?      @db.Timestamp(0)
  deleted_at     DateTime?      @db.Timestamp(0)
  cat_municipios cat_municipios @relation(fields: [id_municipio], references: [id], onUpdate: Restrict, map: "cat_colonias_id_municipio_foreign")

  @@index([id_municipio], map: "cat_colonias_id_municipio_foreign")
}

model cat_consulta_horarios {
  id                 BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  tipo               String
  day                Int
  fecha_inicio       DateTime            @db.Date
  fecha_fin          DateTime            @db.Date
  hora_inicio        DateTime            @db.Time(0)
  hora_fin           DateTime            @db.Time(0)
  intervalo          String?             @db.Char(3)
  cita               String              @db.VarChar(10)
  iniciar            String?             @db.VarChar(1)
  vacaciones         Int?                @default(1) @db.TinyInt
  id_medico          Int?                @db.UnsignedInt
  id_especialidad    Int?                @db.UnsignedInt
  id_consultorio     Int?                @db.UnsignedInt
  created_at         DateTime?           @db.Timestamp(0)
  updated_at         DateTime?           @db.Timestamp(0)
  deleted_at         DateTime?           @db.Timestamp(0)
  isFestivos         Boolean             @default(false)
  cat_camas          cat_camas?          @relation(fields: [id_consultorio], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cat_consulta_horarios_id_consultorio_foreign")
  cat_especialidades cat_especialidades? @relation(fields: [id_especialidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cat_consulta_horarios_id_especialidad_foreign")
  rch_empleados      rch_empleados?      @relation(fields: [id_medico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cat_consulta_horarios_id_medico_foreign")

  @@index([id_consultorio], map: "cat_consulta_horarios_id_consultorio_foreign")
  @@index([id_especialidad], map: "cat_consulta_horarios_id_especialidad_foreign")
  @@index([id_medico], map: "cat_consulta_horarios_id_medico_foreign")
}

model cat_departamento_empleado {
  id                BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  id_departamento   Int?               @db.UnsignedInt
  id_empleado       Int?               @db.UnsignedInt
  deleted_at        DateTime?          @db.Timestamp(0)
  created_at        DateTime?          @db.Timestamp(0)
  updated_at        DateTime?          @db.Timestamp(0)
  cat_departamentos cat_departamentos? @relation(fields: [id_departamento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cat_departamento_empleado_id_departamento_foreign")
  rch_empleados     rch_empleados?     @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cat_departamento_empleado_id_empleado_foreign")

  @@index([id_departamento], map: "cat_departamento_empleado_id_departamento_foreign")
  @@index([id_empleado], map: "cat_departamento_empleado_id_empleado_foreign")
}

model cat_departamentos {
  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt
  codigo                    String                      @db.VarChar(10)
  nombre                    String                      @db.VarChar(250)
  created_at                DateTime?                   @db.Timestamp(0)
  updated_at                DateTime?                   @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  cat_departamento_empleado cat_departamento_empleado[]
  cat_ubicaciones           cat_ubicaciones[]
  rch_empleados             rch_empleados[]
  rch_empleados_externos    rch_empleados_externos[]
}

model cat_documentos {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  nombre            String
  created_at        DateTime?           @db.Timestamp(0)
  updated_at        DateTime?           @db.Timestamp(0)
  deleted_at        DateTime?           @db.Timestamp(0)
  cmp_documentacion cmp_documentacion[]
}

model cat_enfermeria {
  id                                                                             BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  tabla                                                                          String                  @db.VarChar(250)
  tipo                                                                           String                  @db.VarChar(250)
  nombre                                                                         String                  @db.VarChar(250)
  puntos                                                                         String                  @db.VarChar(2)
  icon                                                                           String                  @db.VarChar(100)
  created_at                                                                     DateTime?               @db.Timestamp(0)
  updated_at                                                                     DateTime?               @db.Timestamp(0)
  deleted_at                                                                     DateTime?               @db.Timestamp(0)
  enf_escala_valoracion_enf_escala_valoracion_id_actividadTocat_enfermeria       enf_escala_valoracion[] @relation("enf_escala_valoracion_id_actividadTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_criterio_motoraTocat_enfermeria enf_escala_valoracion[] @relation("enf_escala_valoracion_id_criterio_motoraTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_criterio_ocularTocat_enfermeria enf_escala_valoracion[] @relation("enf_escala_valoracion_id_criterio_ocularTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_criterio_verbalTocat_enfermeria enf_escala_valoracion[] @relation("enf_escala_valoracion_id_criterio_verbalTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_evaTocat_enfermeria             enf_escala_valoracion[] @relation("enf_escala_valoracion_id_evaTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_humedadTocat_enfermeria         enf_escala_valoracion[] @relation("enf_escala_valoracion_id_humedadTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_movilidadTocat_enfermeria       enf_escala_valoracion[] @relation("enf_escala_valoracion_id_movilidadTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_nutricionTocat_enfermeria       enf_escala_valoracion[] @relation("enf_escala_valoracion_id_nutricionTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_percepcionTocat_enfermeria      enf_escala_valoracion[] @relation("enf_escala_valoracion_id_percepcionTocat_enfermeria")
  enf_escala_valoracion_enf_escala_valoracion_id_roce_lesionesTocat_enfermeria   enf_escala_valoracion[] @relation("enf_escala_valoracion_id_roce_lesionesTocat_enfermeria")
  enf_oxigenoterapia_enf_oxigenoterapia_id_administracionTocat_enfermeria        enf_oxigenoterapia[]    @relation("enf_oxigenoterapia_id_administracionTocat_enfermeria")
  enf_oxigenoterapia_enf_oxigenoterapia_id_sedaccionTocat_enfermeria             enf_oxigenoterapia[]    @relation("enf_oxigenoterapia_id_sedaccionTocat_enfermeria")
  enf_oxigenoterapia_enf_oxigenoterapia_id_signosTocat_enfermeria                enf_oxigenoterapia[]    @relation("enf_oxigenoterapia_id_signosTocat_enfermeria")
  enf_ulceras_presion_enf_ulceras_presion_id_cuerpoTocat_enfermeria              enf_ulceras_presion[]   @relation("enf_ulceras_presion_id_cuerpoTocat_enfermeria")
  enf_ulceras_presion_enf_ulceras_presion_id_exudadoTocat_enfermeria             enf_ulceras_presion[]   @relation("enf_ulceras_presion_id_exudadoTocat_enfermeria")
  enf_ulceras_presion_enf_ulceras_presion_id_longitudTocat_enfermeria            enf_ulceras_presion[]   @relation("enf_ulceras_presion_id_longitudTocat_enfermeria")
  enf_ulceras_presion_enf_ulceras_presion_id_tejidoTocat_enfermeria              enf_ulceras_presion[]   @relation("enf_ulceras_presion_id_tejidoTocat_enfermeria")
}

model cat_equipos {
  id                   Int                              @id @default(autoincrement()) @db.UnsignedInt
  nombre               String
  estado_situacional   String?
  clasificacion_equipo cat_equipos_clasificacion_equipo
  marca                String
  modelo               String
  serie                String
  no_inventario        String
  condicion_equipo     String?
  no_factura           String?
  instructivo_trabajo  String?                          @db.Text
  observaciones        String?                          @db.Text
  ficha_tecnica        String?
  placa                String?
  foto                 String?
  manual               String?
  estatus              cat_equipos_estatus              @default(ACTIVO)
  id_ubicacion         Int?                             @db.UnsignedInt
  id_piso              Int?                             @db.UnsignedInt
  created_at           DateTime?                        @db.Timestamp(0)
  updated_at           DateTime?                        @db.Timestamp(0)
  deleted_at           DateTime?                        @db.Timestamp(0)
  cat_pisos            cat_pisos?                       @relation(fields: [id_piso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cat_equipos_id_piso_foreign")
  cat_ubicaciones      cat_ubicaciones?                 @relation(fields: [id_ubicacion], references: [id_ubicacion], onDelete: Restrict, onUpdate: Restrict, map: "cat_equipos_id_ubicacion_foreign")
  rcf_kardex           rcf_kardex[]
  rcf_resguardo        rcf_resguardo[]
  tic_equipos_computo  tic_equipos_computo[]

  @@index([id_piso], map: "cat_equipos_id_piso_foreign")
  @@index([id_ubicacion], map: "cat_equipos_id_ubicacion_foreign")
}

model cat_escolaridades {
  id                              Int                               @id @default(autoincrement()) @db.UnsignedInt
  nombre                          String
  created_at                      DateTime?                         @db.Timestamp(0)
  updated_at                      DateTime?                         @db.Timestamp(0)
  deleted_at                      DateTime?                         @db.Timestamp(0)
  cmp_educacion                   cmp_educacion[]
  cmp_persona                     cmp_persona[]
  hpz_paciente_est_socioeconomico hpz_paciente_est_socioeconomico[]
}

model cat_escuelas {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  cct                String
  id_turno           String?
  turno              String?
  nombre             String
  tipo_educativo     String?
  nivel_educativo    String?
  servicio_educativo String?
  nombre_control     String?
  tipo_sostenimiento String?
  cve_entidad        String?
  entidad            String?
  cve_municipio      String?
  municipio          String?
  cve_localidad      String?
  localidad          String?
  domicilio          String?
  no_exterior        String?
  entre_calle        String?
  y_calle            String?
  calle_posterior    String?
  cve_colonia        String?
  colonia            String?
  cp                 String?
  lada               String?
  telefono           String?
  ext                String?
  sitio_web          String?
  created_at         DateTime? @db.Timestamp(0)
  updated_at         DateTime? @db.Timestamp(0)
  deleted_at         DateTime? @db.Timestamp(0)
}

model cat_especialidades {
  id                                  Int                                   @id @default(autoincrement()) @db.UnsignedInt
  nombre                              String
  estatus                             Boolean
  tipo                                String?                               @db.VarChar(100)
  cve_sinba                           String?                               @db.VarChar(100)
  esp_sinba                           String?                               @db.VarChar(100)
  id_servicio                         Int                                   @db.UnsignedInt
  created_at                          DateTime?                             @db.Timestamp(0)
  updated_at                          DateTime?                             @db.Timestamp(0)
  deleted_at                          DateTime?                             @db.Timestamp(0)
  cat_consulta_horarios               cat_consulta_horarios[]
  cat_servicios                       cat_servicios                         @relation(fields: [id_servicio], references: [id], onUpdate: Restrict, map: "cat_especialidades_id_servicio_foreign")
  hpz_cama_historial                  hpz_cama_historial[]
  hpz_citas_historial                 hpz_citas_historial[]                 @ignore
  hpz_ingreso_consulta                hpz_ingreso_consulta[]
  hpz_ingreso_hospitalario            hpz_ingreso_hospitalario[]
  hpz_paciente_auxiliares_diagnostico hpz_paciente_auxiliares_diagnostico[]
  rch_empleado_especialidad           rch_empleado_especialidad[]

  @@index([id_servicio], map: "cat_especialidades_id_servicio_foreign")
}

model cat_estado_civil {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  nombre      String
  created_at  DateTime?     @db.Timestamp(0)
  updated_at  DateTime?     @db.Timestamp(0)
  deleted_at  DateTime?     @db.Timestamp(0)
  cmp_persona cmp_persona[]
}

model cat_estados {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  clave          String           @db.Char(2)
  abreviatura    String           @unique(map: "cat_estados_abreviatura_unique") @db.VarChar(10)
  nombre         String
  renapo         String           @db.Char(3)
  created_at     DateTime?        @db.Timestamp(0)
  updated_at     DateTime?        @db.Timestamp(0)
  deleted_at     DateTime?        @db.Timestamp(0)
  cmp_domicilios cmp_domicilios[]
  cmp_familiares cmp_familiares[]
}

model cat_evento_adverso_factores_incidente {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model cat_evento_adverso_tipo_incidente {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String
  tipo       String
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model cat_extensiones {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  extension    Int
  nombre       String
  piso         String?        @db.VarChar(50)
  jefe         String?
  secretarias  String?
  created_at   DateTime?      @db.Timestamp(0)
  updated_at   DateTime?      @db.Timestamp(0)
  deleted_at   DateTime?      @db.Timestamp(0)
  rch_permisos rch_permisos[]
  sgl_tarjeton sgl_tarjeton[]
}

model cat_festivos {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  descripcion String
  fecha       DateTime  @db.Date
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
}

model cat_formato_preguntas {
  id                   BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  nombre               String                 @db.VarChar(250)
  slug                 String                 @db.VarChar(250)
  orden                Int                    @default(0)
  relacion             Int                    @default(0)
  formato              String                 @db.VarChar(50)
  tipo                 String                 @db.VarChar(50)
  respuestas           String?                @db.VarChar(50)
  categoria            String?                @db.VarChar(50)
  default              Int?
  validation           String                 @db.VarChar(250)
  mask                 String                 @db.VarChar(250)
  sexo                 String                 @default("") @db.Char(1)
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  deleted_at           DateTime?              @db.Timestamp(0)
  hpz_formatos_medicos hpz_formatos_medicos[]
}

model cat_formato_respuestas {
  id                   BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  nombre               String                 @db.VarChar(250)
  categoria            String                 @db.VarChar(250)
  formato              String                 @db.VarChar(10)
  selected             Int                    @default(0) @db.TinyInt
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  deleted_at           DateTime?              @db.Timestamp(0)
  hpz_formatos_medicos hpz_formatos_medicos[]
}

model cat_fuentes_financiamiento {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  nombre        String
  deleted_at    DateTime?       @db.Timestamp(0)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_guardias {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  posicion   Int
  nombre     String
  activo     Boolean   @default(true)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model cat_historia_clinica {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String    @db.VarChar(250)
  seccion    String    @db.VarChar(100)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model cat_iaas_germenes {
  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt
  clave                     String                      @db.Char(4)
  nombre                    String
  created_at                DateTime?                   @db.Timestamp(0)
  updated_at                DateTime?                   @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  hpz_ingreso_epidemio_iaas hpz_ingreso_epidemio_iaas[]
}

model cat_iaas_sitios_infeccion {
  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt
  clave                     String                      @db.Char(4)
  nombre                    String
  created_at                DateTime?                   @db.Timestamp(0)
  updated_at                DateTime?                   @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  hpz_ingreso_epidemio_iaas hpz_ingreso_epidemio_iaas[]
}

model cat_localidades {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  clave          String           @db.Char(4)
  nombre         String           @db.VarChar(150)
  id_estado      String           @db.Char(2)
  id_municipio   String           @db.Char(5)
  created_at     DateTime?        @db.Timestamp(0)
  updated_at     DateTime?        @db.Timestamp(0)
  deleted_at     DateTime?        @db.Timestamp(0)
  cmp_domicilios cmp_domicilios[]
  cmp_familiares cmp_familiares[]
}

model cat_marcas {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  nombre     String
  estatus    Boolean   @default(true)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model cat_medicamento_dosis {
  id                            BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  clave                         String                          @db.VarChar(15)
  nombre                        String                          @db.VarChar(250)
  created_at                    DateTime?                       @db.Timestamp(0)
  updated_at                    DateTime?                       @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.Timestamp(0)
  hpz_indicacion_medicamentos   hpz_indicacion_medicamentos[]
  hpz_indicaciones_medicamentos hpz_indicaciones_medicamentos[] @ignore
}

model cat_medicamento_horarios {
  id                            BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  clave                         String                          @db.VarChar(15)
  nombre                        String                          @db.VarChar(250)
  created_at                    DateTime?                       @db.Timestamp(0)
  updated_at                    DateTime?                       @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.Timestamp(0)
  hpz_indicacion_medicamentos   hpz_indicacion_medicamentos[]
  hpz_indicaciones_medicamentos hpz_indicaciones_medicamentos[] @ignore
}

model cat_medicamento_intervalos {
  id                            BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  clave                         String                          @db.VarChar(15)
  nombre                        String                          @db.VarChar(250)
  created_at                    DateTime?                       @db.Timestamp(0)
  updated_at                    DateTime?                       @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.Timestamp(0)
  hpz_indicacion_medicamentos   hpz_indicacion_medicamentos[]
  hpz_indicaciones_medicamentos hpz_indicaciones_medicamentos[] @ignore
}

model cat_medicamento_vias {
  id                            BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  clave                         String                          @db.VarChar(15)
  nombre                        String                          @db.VarChar(250)
  created_at                    DateTime?                       @db.Timestamp(0)
  updated_at                    DateTime?                       @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.Timestamp(0)
  hpz_indicacion_medicamentos   hpz_indicacion_medicamentos[]
  hpz_indicaciones_medicamentos hpz_indicaciones_medicamentos[] @ignore
}

model cat_modelos {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  nombre     String
  estatus    Boolean   @default(true)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model cat_motivos_baja {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  nombre        String
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_municipios {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  clave                String                 @db.Char(3)
  nombre               String                 @db.VarChar(100)
  id_estado            String                 @db.Char(2)
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  deleted_at           DateTime?              @db.Timestamp(0)
  cat_codigos_postales cat_codigos_postales[]
  cat_colonias         cat_colonias[]
  cmp_domicilios       cmp_domicilios[]
  cmp_familiares       cmp_familiares[]
}

model cat_nacionalidades {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  nombre      String
  codigo      String
  clave       String
  created_at  DateTime?     @db.Timestamp(0)
  updated_at  DateTime?     @db.Timestamp(0)
  deleted_at  DateTime?     @db.Timestamp(0)
  cmp_persona cmp_persona[]
}

model cat_nanda {
  id                                                                  BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  cve_dominio                                                         BigInt
  dominio                                                             String                   @db.VarChar(250)
  cve_clase                                                           BigInt
  clase                                                               String?                  @db.VarChar(250)
  clase_descripcion                                                   String?                  @db.VarChar(250)
  codigo                                                              String                   @db.VarChar(5)
  diagnostico                                                         String?                  @db.VarChar(250)
  tipo                                                                String?                  @db.VarChar(250)
  tipo_cae                                                            String?                  @db.VarChar(250)
  rango                                                               String?                  @db.VarChar(250)
  nombre                                                              String?                  @db.Text
  created_at                                                          DateTime?                @db.Timestamp(0)
  updated_at                                                          DateTime?                @db.Timestamp(0)
  deleted_at                                                          DateTime?                @db.Timestamp(0)
  hpz_enf_intervenciones_hpz_enf_intervenciones_id_factorTocat_nanda  hpz_enf_intervenciones[] @relation("hpz_enf_intervenciones_id_factorTocat_nanda")
  hpz_enf_intervenciones_hpz_enf_intervenciones_id_sintomaTocat_nanda hpz_enf_intervenciones[] @relation("hpz_enf_intervenciones_id_sintomaTocat_nanda")
}

model cat_niveles {
  id                              Int                               @id @default(autoincrement()) @db.UnsignedInt
  clave                           String
  nombre                          String
  estatus                         Boolean                           @default(true)
  created_at                      DateTime?                         @db.Timestamp(0)
  updated_at                      DateTime?                         @db.Timestamp(0)
  deleted_at                      DateTime?                         @db.Timestamp(0)
  cfg_config_system               cfg_config_system[]
  cja_sersub                      cja_sersub[]                      @ignore
  hpz_ingreso_hospitalario        hpz_ingreso_hospitalario[]
  hpz_nivel_historial             hpz_nivel_historial[]
  hpz_paciente                    hpz_paciente[]
  hpz_paciente_est_socioeconomico hpz_paciente_est_socioeconomico[]
}

model cat_ocupaciones {
  id                              Int                               @id @default(autoincrement()) @db.UnsignedInt
  nombre                          String
  created_at                      DateTime?                         @db.Timestamp(0)
  updated_at                      DateTime?                         @db.Timestamp(0)
  deleted_at                      DateTime?                         @db.Timestamp(0)
  cmp_persona                     cmp_persona[]
  hpz_paciente_est_socioeconomico hpz_paciente_est_socioeconomico[]
}

model cat_parentescos {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  nombre         String
  created_at     DateTime?        @db.Timestamp(0)
  updated_at     DateTime?        @db.Timestamp(0)
  deleted_at     DateTime?        @db.Timestamp(0)
  cmp_familiares cmp_familiares[]
}

model cat_patologia_procedimientos {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  nombre                 String
  created_at             DateTime?                @db.Timestamp(0)
  updated_at             DateTime?                @db.Timestamp(0)
  deleted_at             DateTime?                @db.Timestamp(0)
  hpz_patologia_estudios hpz_patologia_estudios[]
}

model cat_patologia_tipo_estudio {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  nombre                 String
  clave                  String                   @db.VarChar(2)
  tipo                   String
  created_at             DateTime?                @db.Timestamp(0)
  updated_at             DateTime?                @db.Timestamp(0)
  deleted_at             DateTime?                @db.Timestamp(0)
  hpz_patologia_estudios hpz_patologia_estudios[]
}

model cat_pensiones {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  nombre        String
  deleted_at    DateTime?       @db.Timestamp(0)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_permisos {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  nombre                     String
  created_at                 DateTime?                    @db.Timestamp(0)
  updated_at                 DateTime?                    @db.Timestamp(0)
  deleted_at                 DateTime?                    @db.Timestamp(0)
  rch_permisos               rch_permisos[]
  rch_tipo_empleado_permisos rch_tipo_empleado_permisos[]
}

model cat_pisos {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  nombre      String        @db.VarChar(100)
  created_at  DateTime?     @db.Timestamp(0)
  updated_at  DateTime?     @db.Timestamp(0)
  deleted_at  DateTime?     @db.Timestamp(0)
  cat_equipos cat_equipos[]
}

model cat_plazas {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  nombre        String
  clave         String?         @db.VarChar(5)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_procedimientos_invasivos {
  id                                                                                                  BigInt                                 @id @default(autoincrement()) @db.UnsignedBigInt
  tabla                                                                                               String                                 @db.VarChar(250)
  tipo                                                                                                String                                 @db.VarChar(250)
  nombre                                                                                              String                                 @db.VarChar(250)
  clave                                                                                               String                                 @db.VarChar(5)
  puntos                                                                                              String                                 @db.VarChar(2)
  reglas                                                                                              String                                 @db.VarChar(20)
  cvp                                                                                                 String                                 @db.VarChar(4)
  picc                                                                                                String                                 @db.VarChar(4)
  cvc                                                                                                 String                                 @db.VarChar(4)
  created_at                                                                                          DateTime?                              @db.Timestamp(0)
  updated_at                                                                                          DateTime?                              @db.Timestamp(0)
  deleted_at                                                                                          DateTime?                              @db.Timestamp(0)
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_flebitisTocat_procedimientos_invasivos enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_flebitisTocat_procedimientos_invasivos")
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_instaloTocat_procedimientos_invasivos  enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_instaloTocat_procedimientos_invasivos")
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_retiroTocat_procedimientos_invasivos   enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_retiroTocat_procedimientos_invasivos")
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_sitioTocat_procedimientos_invasivos    enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_sitioTocat_procedimientos_invasivos")
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_subtipoTocat_procedimientos_invasivos  enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_subtipoTocat_procedimientos_invasivos")
  enf_procedimientos_invasivos_detalle                                                                enf_procedimientos_invasivos_detalle[]
}

model cat_productos {
  id                          BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  clave                       String                        @db.VarChar(15)
  nombre                      String                        @db.VarChar(900)
  nombre_lasa                 String?                       @default("NULL") @db.VarChar(900)
  nombre_comercial            String                        @db.VarChar(900)
  presentacion                String                        @db.VarChar(500)
  cv                          String                        @db.VarChar(50)
  antibioticos                String                        @db.VarChar(50)
  laboratorio                 String                        @db.VarChar(250)
  familia                     String                        @db.VarChar(250)
  cbn                         Boolean
  created_at                  DateTime?                     @db.Timestamp(0)
  updated_at                  DateTime?                     @db.Timestamp(0)
  deleted_at                  DateTime?                     @db.Timestamp(0)
  hpz_indicacion_medicamentos hpz_indicacion_medicamentos[]
}

model cat_programas {
  id               Int                @id @default(autoincrement()) @db.UnsignedInt
  nombre           String             @db.VarChar(100)
  clave            String             @db.VarChar(10)
  created_at       DateTime?          @db.Timestamp(0)
  updated_at       DateTime?          @db.Timestamp(0)
  deleted_at       DateTime?          @db.Timestamp(0)
  inv_bienes       inv_bienes[]
  inv_bienes_corte inv_bienes_corte[]
}

model cat_proveedores {
  id         Int                     @id @default(autoincrement()) @db.UnsignedInt
  rfc        String
  nombre     String
  domicilio  String?
  noexterior String?
  nointerior String?
  colonia    String?
  ciudad     String?
  estado     String?
  pais       String?
  cp         String?
  localidad  String?
  condpago   String?
  telefono   String?
  cuentad    String?
  cuentah    String?
  ivad       String?
  ivah       String?
  estatus    cat_proveedores_estatus @default(Activo)
  curp       String?
  created_at DateTime?               @db.Timestamp(0)
  updated_at DateTime?               @db.Timestamp(0)
  deleted_at DateTime?               @db.Timestamp(0)
  rcf_kardex rcf_kardex[]
}

model cat_puestos {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  codigo             String               @db.VarChar(10)
  nombre             String               @db.VarChar(250)
  tipo               String               @db.VarChar(250)
  jefatura           Boolean              @default(false)
  sueldo             Decimal              @db.Decimal(10, 2)
  sueldo_diario      Decimal              @db.Decimal(10, 2)
  created_at         DateTime?            @db.Timestamp(0)
  updated_at         DateTime?            @db.Timestamp(0)
  deleted_at         DateTime?            @db.Timestamp(0)
  inv_corte_empleado inv_corte_empleado[]
  rch_empleados      rch_empleados[]
}

model cat_religiones {
  id           Int           @id @default(autoincrement()) @db.UnsignedInt
  nombre       String
  codigo       String
  idgrupo      String
  grupo        String
  idsubgrupo   String
  subgrupo     String
  nombre_credo String
  created_at   DateTime?     @db.Timestamp(0)
  updated_at   DateTime?     @db.Timestamp(0)
  deleted_at   DateTime?     @db.Timestamp(0)
  cmp_persona  cmp_persona[]
}

model cat_servicios {
  id                 Int                       @id @default(autoincrement()) @db.UnsignedInt
  nombre             String
  estatus            Boolean
  created_at         DateTime?                 @db.Timestamp(0)
  updated_at         DateTime?                 @db.Timestamp(0)
  deleted_at         DateTime?                 @db.Timestamp(0)
  tipoAgenda         cat_servicios_tipoAgenda?
  cat_especialidades cat_especialidades[]
}

model cat_sindicatos {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  nombre        String
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_subrogados {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  nombre        String
  clave         String          @db.VarChar(2)
  rfc           String          @db.VarChar(13)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  hpz_paciente  hpz_paciente[]
  rfn_convenios rfn_convenios[]
}

model cat_tipo_sangre {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  nombre      String
  created_at  DateTime?     @db.Timestamp(0)
  updated_at  DateTime?     @db.Timestamp(0)
  deleted_at  DateTime?     @db.Timestamp(0)
  cmp_persona cmp_persona[]
}

model cat_tipos_empleado {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  nombre                     String
  clave                      String                       @db.VarChar(2)
  created_at                 DateTime?                    @db.Timestamp(0)
  updated_at                 DateTime?                    @db.Timestamp(0)
  deleted_at                 DateTime?                    @db.Timestamp(0)
  rch_empleados              rch_empleados[]
  rch_tipo_empleado_permisos rch_tipo_empleado_permisos[]
}

model cat_tipos_persona {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  modelo     String
  nombre     String    @db.VarChar(50)
  inactivo   Boolean
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  users      users[]
}

model cat_tipos_recurso {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  nombre        String
  clave         String          @db.VarChar(2)
  created_at    DateTime?       @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.Timestamp(0)
  rch_empleados rch_empleados[]
}

model cat_turnos {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  nombre          String
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  rcf_incidencias rcf_incidencias[]
  rcf_kardex      rcf_kardex[]
  rch_empleados   rch_empleados[]
}

model cat_ubicaciones {
  id_ubicacion         Int                    @id @default(autoincrement()) @db.UnsignedInt
  nombre               String
  estatus              Boolean                @default(true)
  id_piso              Int
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  deleted_at           DateTime?              @db.Timestamp(0)
  id_departamento      Int?                   @db.UnsignedInt
  cat_equipos          cat_equipos[]
  cat_departamentos    cat_departamentos?     @relation(fields: [id_departamento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cat_ubicaciones_id_departamento_foreign")
  inv_elementos_bienes inv_elementos_bienes[]
  rcf_bienes           rcf_bienes[]

  @@index([id_departamento], map: "cat_ubicaciones_id_departamento_foreign")
}

model cat_vehiculo_marca {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  nombre                String                  @db.VarChar(50)
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  deleted_at            DateTime?               @db.Timestamp(0)
  sgl_tarjeton_vehiculo sgl_tarjeton_vehiculo[]
}

model cat_vehiculo_submarca {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  nombre                String                  @db.VarChar(50)
  id_marca              BigInt?                 @db.UnsignedBigInt
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  deleted_at            DateTime?               @db.Timestamp(0)
  sgl_tarjeton_vehiculo sgl_tarjeton_vehiculo[]
}

model cat_vias_ingreso {
  id                                                                                 Int                        @id @default(autoincrement()) @db.UnsignedInt
  nombre                                                                             String
  icon                                                                               String                     @db.VarChar(50)
  created_at                                                                         DateTime?                  @db.Timestamp(0)
  updated_at                                                                         DateTime?                  @db.Timestamp(0)
  deleted_at                                                                         DateTime?                  @db.Timestamp(0)
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_programaTocat_vias_ingreso    hpz_ingreso_hospitalario[] @relation("hpz_ingreso_hospitalario_id_programaTocat_vias_ingreso")
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_via_ingresoTocat_vias_ingreso hpz_ingreso_hospitalario[] @relation("hpz_ingreso_hospitalario_id_via_ingresoTocat_vias_ingreso")
}

model cfg_config_system {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  id_nivel    Int         @db.UnsignedInt
  created_at  DateTime?   @db.Timestamp(0)
  updated_at  DateTime?   @db.Timestamp(0)
  cat_niveles cat_niveles @relation(fields: [id_nivel], references: [id], onUpdate: Restrict, map: "cfg_config_system_id_nivel_foreign")

  @@index([id_nivel], map: "cfg_config_system_id_nivel_foreign")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cja_avales {
  AvalNom      String
  AvalDom      String
  AvalIdent    String
  DeudorNom    String
  DeudorDom    String
  Id_Estado    String
  Id_municipio String
  Id_Localidad String
  DeudorCol    String
  DeudorIdent  String
  DeudorFchCom String

  @@ignore
}

model cja_programas {
  IdPrograma Int    @id @default(autoincrement())
  ProgCve    String @db.Char(3)
  ProgDesc   String @db.Char(40)
  ProgSiglas String @db.Char(8)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cja_sersub {
  ClaveServ   String      @db.Char(6)
  PrecioSub   Decimal     @db.Decimal(10, 2)
  id_nivel    Int         @db.UnsignedInt
  cat_niveles cat_niveles @relation(fields: [id_nivel], references: [id], onUpdate: Restrict, map: "cja_sersub_id_nivel_foreign")

  @@index([id_nivel], map: "cja_sersub_id_nivel_foreign")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cja_servicios {
  ClaveServ    String  @db.Char(6)
  DescServicio String  @db.Char(50)
  CveGpoServ   String  @db.Char(50)
  Subsidiado   String  @db.Char(1)
  TipoServicio String  @db.Char(1)
  PrecioBase   Decimal @db.Decimal(10, 2)
  CtaContable  String  @db.Char(12)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cja_servpaq {
  ClaveServ String @db.Char(6)
  Paquete   String @db.Char(6)

  @@ignore
}

model cmp_contactos {
  id            Int         @id @default(autoincrement()) @db.UnsignedInt
  tipo          String
  descripcion   String
  observaciones String?     @db.Text
  id_persona    Int         @db.UnsignedInt
  created_at    DateTime?   @db.Timestamp(0)
  updated_at    DateTime?   @db.Timestamp(0)
  deleted_at    DateTime?   @db.Timestamp(0)
  cmp_persona   cmp_persona @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "cmp_contactos_id_persona_foreign")

  @@index([id_persona], map: "cmp_contactos_id_persona_foreign")
}

model cmp_documentacion {
  id             Int            @id @default(autoincrement()) @db.UnsignedInt
  modelo         String
  id_modelo      Int            @db.UnsignedInt
  id_documento   Int            @db.UnsignedInt
  path_documento String
  idUser         Int?
  created_at     DateTime?      @db.Timestamp(0)
  updated_at     DateTime?      @db.Timestamp(0)
  deleted_at     DateTime?      @db.Timestamp(0)
  cat_documentos cat_documentos @relation(fields: [id_documento], references: [id], onUpdate: Restrict, map: "cmp_documentacion_id_documento_foreign")

  @@index([id_documento], map: "cmp_documentacion_id_documento_foreign")
}

model cmp_domicilios {
  id                    Int                @id @default(autoincrement()) @db.UnsignedInt
  tipo                  String             @db.VarChar(20)
  calle                 String?
  num_interior          String?
  num_exterior          String?
  telefono              String?
  cp                    String?
  entre_calle           String?
  y_calle               String?
  calle_posterior       String?
  descripcion_ubicacion String?            @db.Text
  id_estado             Int?               @db.UnsignedInt
  id_municipio          Int?               @db.UnsignedInt
  id_localidad          Int?               @db.UnsignedInt
  id_asentamiento       Int?               @db.UnsignedInt
  id_persona            Int?               @db.UnsignedInt
  idUser                Int?
  created_at            DateTime?          @db.Timestamp(0)
  updated_at            DateTime?          @db.Timestamp(0)
  deleted_at            DateTime?          @db.Timestamp(0)
  cat_asentamientos     cat_asentamientos? @relation(fields: [id_asentamiento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_domicilios_id_asentamiento_foreign")
  cat_estados           cat_estados?       @relation(fields: [id_estado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_domicilios_id_estado_foreign")
  cat_localidades       cat_localidades?   @relation(fields: [id_localidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_domicilios_id_localidad_foreign")
  cat_municipios        cat_municipios?    @relation(fields: [id_municipio], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_domicilios_id_municipio_foreign")
  cmp_persona           cmp_persona?       @relation(fields: [id_persona], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_domicilios_id_persona_foreign")

  @@index([id_asentamiento], map: "cmp_domicilios_id_asentamiento_foreign")
  @@index([id_estado], map: "cmp_domicilios_id_estado_foreign")
  @@index([id_localidad], map: "cmp_domicilios_id_localidad_foreign")
  @@index([id_municipio], map: "cmp_domicilios_id_municipio_foreign")
  @@index([id_persona], map: "cmp_domicilios_id_persona_foreign")
}

model cmp_educacion {
  id                Int               @id @default(autoincrement()) @db.UnsignedInt
  id_persona        Int               @db.UnsignedInt
  id_escolaridad    Int               @db.UnsignedInt
  escuela           String?
  carrera           String?
  periodo_inicio    String?           @db.Char(191)
  periodo_fin       String?           @db.Char(191)
  cedula            String?
  idUser            Int?
  created_at        DateTime?         @db.Timestamp(0)
  updated_at        DateTime?         @db.Timestamp(0)
  deleted_at        DateTime?         @db.Timestamp(0)
  cat_escolaridades cat_escolaridades @relation(fields: [id_escolaridad], references: [id], onUpdate: Restrict, map: "cmp_educacion_id_escolaridad_foreign")
  cmp_persona       cmp_persona       @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "cmp_educacion_id_persona_foreign")

  @@index([id_escolaridad], map: "cmp_educacion_id_escolaridad_foreign")
  @@index([id_persona], map: "cmp_educacion_id_persona_foreign")
}

model cmp_familiares {
  id                    Int                @id @default(autoincrement()) @db.UnsignedInt
  tipo_familiar         String
  primer_apellido       String
  segundo_apellido      String?
  nombres               String
  id_parentesco         Int?               @db.UnsignedInt
  calle                 String?
  num_interior          String?
  num_exterior          String?
  telefono              String?
  cp                    String?
  entre_calle           String?
  y_calle               String?
  calle_posterior       String?
  descripcion_ubicacion String?            @db.Text
  id_estado             Int?               @db.UnsignedInt
  id_municipio          Int?               @db.UnsignedInt
  id_localidad          Int?               @db.UnsignedInt
  id_asentamiento       Int?               @db.UnsignedInt
  id_persona            Int                @db.UnsignedInt
  idUser                Int?
  created_at            DateTime?          @db.Timestamp(0)
  updated_at            DateTime?          @db.Timestamp(0)
  deleted_at            DateTime?          @db.Timestamp(0)
  cat_asentamientos     cat_asentamientos? @relation(fields: [id_asentamiento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_familiares_id_asentamiento_foreign")
  cat_estados           cat_estados?       @relation(fields: [id_estado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_familiares_id_estado_foreign")
  cat_localidades       cat_localidades?   @relation(fields: [id_localidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_familiares_id_localidad_foreign")
  cat_municipios        cat_municipios?    @relation(fields: [id_municipio], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_familiares_id_municipio_foreign")
  cat_parentescos       cat_parentescos?   @relation(fields: [id_parentesco], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_familiares_id_parentesco_foreign")
  cmp_persona           cmp_persona        @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "cmp_familiares_id_persona_foreign")

  @@index([id_asentamiento], map: "cmp_familiares_id_asentamiento_foreign")
  @@index([id_estado], map: "cmp_familiares_id_estado_foreign")
  @@index([id_localidad], map: "cmp_familiares_id_localidad_foreign")
  @@index([id_municipio], map: "cmp_familiares_id_municipio_foreign")
  @@index([id_parentesco], map: "cmp_familiares_id_parentesco_foreign")
  @@index([id_persona], map: "cmp_familiares_id_persona_foreign")
}

model cmp_firmas {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  modelo_firma String
  image        String    @db.Text
  id_modelo    Int       @db.UnsignedInt
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)
}

model cmp_persona {
  id                       Int                      @id @default(autoincrement()) @db.UnsignedInt
  primer_apellido          String?
  segundo_apellido         String?
  nombres                  String?
  fecha_nacimiento         DateTime?                @db.Date
  curp                     String?                  @db.Char(50)
  rfc                      String?                  @db.Char(50)
  sexo                     cmp_persona_sexo
  estado_nacimiento        String                   @default("XX") @db.Char(2)
  medios_comunicacion      String?                  @db.Text
  fecha_defuncion          DateTime?                @db.Date
  defuncion_observaciones  String?                  @db.Text
  id_ocupacion             Int                      @default(1) @db.UnsignedInt
  id_estadocivil           Int                      @default(1) @db.UnsignedInt
  id_tiposangre            Int?                     @db.UnsignedInt
  id_escolaridad           Int?                     @db.UnsignedInt
  id_religion              Int?                     @db.UnsignedInt
  id_nacionalidad          Int?                     @db.UnsignedInt
  curp_verificada          Boolean                  @default(false)
  motivo_verificacion_curp String?
  created_user             String?
  created_at               DateTime?                @db.Timestamp(0)
  updated_at               DateTime?                @db.Timestamp(0)
  deleted_at               DateTime?                @db.Timestamp(0)
  cmp_contactos            cmp_contactos[]
  cmp_domicilios           cmp_domicilios[]
  cmp_educacion            cmp_educacion[]
  cmp_familiares           cmp_familiares[]
  cat_escolaridades        cat_escolaridades?       @relation(fields: [id_escolaridad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_persona_id_escolaridad_foreign")
  cat_estado_civil         cat_estado_civil         @relation(fields: [id_estadocivil], references: [id], onUpdate: Restrict, map: "cmp_persona_id_estadocivil_foreign")
  cat_nacionalidades       cat_nacionalidades?      @relation(fields: [id_nacionalidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_persona_id_nacionalidad_foreign")
  cat_ocupaciones          cat_ocupaciones          @relation(fields: [id_ocupacion], references: [id], onUpdate: Restrict, map: "cmp_persona_id_ocupacion_foreign")
  cat_religiones           cat_religiones?          @relation(fields: [id_religion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_persona_id_religion_foreign")
  cat_tipo_sangre          cat_tipo_sangre?         @relation(fields: [id_tiposangre], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cmp_persona_id_tiposangre_foreign")
  hpz_paciente             hpz_paciente[]
  hpz_patologia_estudios   hpz_patologia_estudios[]
  rch_empleados            rch_empleados[]
  rch_empleados_externos   rch_empleados_externos[]
  users                    users[]

  @@index([id_escolaridad], map: "cmp_persona_id_escolaridad_foreign")
  @@index([id_estadocivil], map: "cmp_persona_id_estadocivil_foreign")
  @@index([id_nacionalidad], map: "cmp_persona_id_nacionalidad_foreign")
  @@index([id_ocupacion], map: "cmp_persona_id_ocupacion_foreign")
  @@index([id_religion], map: "cmp_persona_id_religion_foreign")
  @@index([id_tiposangre], map: "cmp_persona_id_tiposangre_foreign")
}

model enf_escala_valoracion {
  id                                                                      BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  id_eva                                                                  BigInt?                  @db.UnsignedBigInt
  puntos_eva                                                              Int?                     @db.UnsignedInt
  id_criterio_ocular                                                      BigInt?                  @db.UnsignedBigInt
  puntos_criterio_ocular                                                  Int?                     @db.UnsignedInt
  id_criterio_verbal                                                      BigInt?                  @db.UnsignedBigInt
  puntos_criterio_verbal                                                  Int?                     @db.UnsignedInt
  id_criterio_motora                                                      BigInt?                  @db.UnsignedBigInt
  puntos_criterio_motora                                                  Int?                     @db.UnsignedInt
  riesgo_caidas                                                           String?                  @db.Text
  puntos_riesgo_caidas                                                    Int?                     @db.UnsignedInt
  id_percepcion                                                           BigInt?                  @db.UnsignedBigInt
  puntos_percepcion                                                       Int?                     @db.UnsignedInt
  id_humedad                                                              BigInt?                  @db.UnsignedBigInt
  puntos_humedad                                                          Int?                     @db.UnsignedInt
  id_actividad                                                            BigInt?                  @db.UnsignedBigInt
  puntos_actividad                                                        Int?                     @db.UnsignedInt
  id_movilidad                                                            BigInt?                  @db.UnsignedBigInt
  puntos_movilidad                                                        Int?                     @db.UnsignedInt
  id_nutricion                                                            BigInt?                  @db.UnsignedBigInt
  puntos_nutricion                                                        Int?                     @db.UnsignedInt
  id_roce_lesiones                                                        BigInt?                  @db.UnsignedBigInt
  puntos_lesiones                                                         Int?                     @db.UnsignedInt
  id_ingreso                                                              Int                      @db.UnsignedInt
  id_user                                                                 Int?                     @db.UnsignedInt
  id_autorizo                                                             Int?                     @db.UnsignedInt
  id_cancelo                                                              Int?                     @db.UnsignedInt
  created_at                                                              DateTime?                @db.Timestamp(0)
  updated_at                                                              DateTime?                @db.Timestamp(0)
  deleted_at                                                              DateTime?                @db.Timestamp(0)
  cat_enfermeria_enf_escala_valoracion_id_actividadTocat_enfermeria       cat_enfermeria?          @relation("enf_escala_valoracion_id_actividadTocat_enfermeria", fields: [id_actividad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_actividad_foreign")
  users_enf_escala_valoracion_id_autorizoTousers                          users?                   @relation("enf_escala_valoracion_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_autorizo_foreign")
  users_enf_escala_valoracion_id_canceloTousers                           users?                   @relation("enf_escala_valoracion_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_cancelo_foreign")
  cat_enfermeria_enf_escala_valoracion_id_criterio_motoraTocat_enfermeria cat_enfermeria?          @relation("enf_escala_valoracion_id_criterio_motoraTocat_enfermeria", fields: [id_criterio_motora], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_criterio_motora_foreign")
  cat_enfermeria_enf_escala_valoracion_id_criterio_ocularTocat_enfermeria cat_enfermeria?          @relation("enf_escala_valoracion_id_criterio_ocularTocat_enfermeria", fields: [id_criterio_ocular], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_criterio_ocular_foreign")
  cat_enfermeria_enf_escala_valoracion_id_criterio_verbalTocat_enfermeria cat_enfermeria?          @relation("enf_escala_valoracion_id_criterio_verbalTocat_enfermeria", fields: [id_criterio_verbal], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_criterio_verbal_foreign")
  cat_enfermeria_enf_escala_valoracion_id_evaTocat_enfermeria             cat_enfermeria?          @relation("enf_escala_valoracion_id_evaTocat_enfermeria", fields: [id_eva], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_eva_foreign")
  cat_enfermeria_enf_escala_valoracion_id_humedadTocat_enfermeria         cat_enfermeria?          @relation("enf_escala_valoracion_id_humedadTocat_enfermeria", fields: [id_humedad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_humedad_foreign")
  hpz_ingreso_hospitalario                                                hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "enf_escala_valoracion_id_ingreso_foreign")
  cat_enfermeria_enf_escala_valoracion_id_movilidadTocat_enfermeria       cat_enfermeria?          @relation("enf_escala_valoracion_id_movilidadTocat_enfermeria", fields: [id_movilidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_movilidad_foreign")
  cat_enfermeria_enf_escala_valoracion_id_nutricionTocat_enfermeria       cat_enfermeria?          @relation("enf_escala_valoracion_id_nutricionTocat_enfermeria", fields: [id_nutricion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_nutricion_foreign")
  cat_enfermeria_enf_escala_valoracion_id_percepcionTocat_enfermeria      cat_enfermeria?          @relation("enf_escala_valoracion_id_percepcionTocat_enfermeria", fields: [id_percepcion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_percepcion_foreign")
  cat_enfermeria_enf_escala_valoracion_id_roce_lesionesTocat_enfermeria   cat_enfermeria?          @relation("enf_escala_valoracion_id_roce_lesionesTocat_enfermeria", fields: [id_roce_lesiones], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_roce_lesiones_foreign")
  users_enf_escala_valoracion_id_userTousers                              users?                   @relation("enf_escala_valoracion_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_escala_valoracion_id_user_foreign")

  @@index([id_actividad], map: "enf_escala_valoracion_id_actividad_foreign")
  @@index([id_autorizo], map: "enf_escala_valoracion_id_autorizo_foreign")
  @@index([id_cancelo], map: "enf_escala_valoracion_id_cancelo_foreign")
  @@index([id_criterio_motora], map: "enf_escala_valoracion_id_criterio_motora_foreign")
  @@index([id_criterio_ocular], map: "enf_escala_valoracion_id_criterio_ocular_foreign")
  @@index([id_criterio_verbal], map: "enf_escala_valoracion_id_criterio_verbal_foreign")
  @@index([id_eva], map: "enf_escala_valoracion_id_eva_foreign")
  @@index([id_humedad], map: "enf_escala_valoracion_id_humedad_foreign")
  @@index([id_ingreso], map: "enf_escala_valoracion_id_ingreso_foreign")
  @@index([id_movilidad], map: "enf_escala_valoracion_id_movilidad_foreign")
  @@index([id_nutricion], map: "enf_escala_valoracion_id_nutricion_foreign")
  @@index([id_percepcion], map: "enf_escala_valoracion_id_percepcion_foreign")
  @@index([id_roce_lesiones], map: "enf_escala_valoracion_id_roce_lesiones_foreign")
  @@index([id_user], map: "enf_escala_valoracion_id_user_foreign")
}

model enf_medidas_antropometricas {
  id                                                   BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  peso                                                 Int
  talla                                                Decimal?                 @db.Decimal(4, 2)
  id_ingreso                                           Int                      @db.UnsignedInt
  id_user                                              Int?                     @db.UnsignedInt
  id_autorizo                                          Int?                     @db.UnsignedInt
  id_cancelo                                           Int?                     @db.UnsignedInt
  created_at                                           DateTime?                @db.Timestamp(0)
  updated_at                                           DateTime?                @db.Timestamp(0)
  deleted_at                                           DateTime?                @db.Timestamp(0)
  users_enf_medidas_antropometricas_id_autorizoTousers users?                   @relation("enf_medidas_antropometricas_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_medidas_antropometricas_id_autorizo_foreign")
  users_enf_medidas_antropometricas_id_canceloTousers  users?                   @relation("enf_medidas_antropometricas_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_medidas_antropometricas_id_cancelo_foreign")
  hpz_ingreso_hospitalario                             hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "enf_medidas_antropometricas_id_ingreso_foreign")
  users_enf_medidas_antropometricas_id_userTousers     users?                   @relation("enf_medidas_antropometricas_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_medidas_antropometricas_id_user_foreign")

  @@index([id_autorizo], map: "enf_medidas_antropometricas_id_autorizo_foreign")
  @@index([id_cancelo], map: "enf_medidas_antropometricas_id_cancelo_foreign")
  @@index([id_ingreso], map: "enf_medidas_antropometricas_id_ingreso_foreign")
  @@index([id_user], map: "enf_medidas_antropometricas_id_user_foreign")
}

model enf_oxigenoterapia {
  id                                                                  BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  id_administracion                                                   BigInt                   @db.UnsignedBigInt
  fraccion_inspirada                                                  Int
  presion_positiva                                                    Int?
  id_sedaccion                                                        BigInt?                  @db.UnsignedBigInt
  id_signos                                                           BigInt?                  @db.UnsignedBigInt
  id_ingreso                                                          Int                      @db.UnsignedInt
  id_user                                                             Int?                     @db.UnsignedInt
  id_autorizo                                                         Int?                     @db.UnsignedInt
  id_cancelo                                                          Int?                     @db.UnsignedInt
  created_at                                                          DateTime?                @db.Timestamp(0)
  updated_at                                                          DateTime?                @db.Timestamp(0)
  deleted_at                                                          DateTime?                @db.Timestamp(0)
  cat_enfermeria_enf_oxigenoterapia_id_administracionTocat_enfermeria cat_enfermeria           @relation("enf_oxigenoterapia_id_administracionTocat_enfermeria", fields: [id_administracion], references: [id], onUpdate: Restrict, map: "enf_oxigenoterapia_id_administracion_foreign")
  users_enf_oxigenoterapia_id_autorizoTousers                         users?                   @relation("enf_oxigenoterapia_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_oxigenoterapia_id_autorizo_foreign")
  users_enf_oxigenoterapia_id_canceloTousers                          users?                   @relation("enf_oxigenoterapia_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_oxigenoterapia_id_cancelo_foreign")
  hpz_ingreso_hospitalario                                            hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "enf_oxigenoterapia_id_ingreso_foreign")
  cat_enfermeria_enf_oxigenoterapia_id_sedaccionTocat_enfermeria      cat_enfermeria?          @relation("enf_oxigenoterapia_id_sedaccionTocat_enfermeria", fields: [id_sedaccion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_oxigenoterapia_id_sedaccion_foreign")
  cat_enfermeria_enf_oxigenoterapia_id_signosTocat_enfermeria         cat_enfermeria?          @relation("enf_oxigenoterapia_id_signosTocat_enfermeria", fields: [id_signos], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_oxigenoterapia_id_signos_foreign")
  users_enf_oxigenoterapia_id_userTousers                             users?                   @relation("enf_oxigenoterapia_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_oxigenoterapia_id_user_foreign")

  @@index([id_administracion], map: "enf_oxigenoterapia_id_administracion_foreign")
  @@index([id_autorizo], map: "enf_oxigenoterapia_id_autorizo_foreign")
  @@index([id_cancelo], map: "enf_oxigenoterapia_id_cancelo_foreign")
  @@index([id_ingreso], map: "enf_oxigenoterapia_id_ingreso_foreign")
  @@index([id_sedaccion], map: "enf_oxigenoterapia_id_sedaccion_foreign")
  @@index([id_signos], map: "enf_oxigenoterapia_id_signos_foreign")
  @@index([id_user], map: "enf_oxigenoterapia_id_user_foreign")
}

model enf_procedimientos_invasivos {
  id                                                                                                  BigInt                                 @id @default(autoincrement()) @db.UnsignedBigInt
  fecha_instalacion                                                                                   DateTime                               @db.DateTime(0)
  calibre                                                                                             String                                 @db.VarChar(250)
  lumenes                                                                                             String?                                @db.VarChar(250)
  centimetros_introducidos                                                                            String?                                @db.VarChar(250)
  fecha_retiro                                                                                        DateTime?                              @db.Date
  id_subtipo                                                                                          BigInt?                                @db.UnsignedBigInt
  id_instalo                                                                                          BigInt?                                @db.UnsignedBigInt
  id_flebitis                                                                                         BigInt?                                @db.UnsignedBigInt
  id_sitio                                                                                            BigInt?                                @db.UnsignedBigInt
  id_retiro                                                                                           BigInt?                                @db.UnsignedBigInt
  id_ubicacion                                                                                        Int                                    @db.UnsignedInt
  id_ingreso                                                                                          Int                                    @db.UnsignedInt
  id_user                                                                                             Int?                                   @db.UnsignedInt
  id_autorizo                                                                                         Int?                                   @db.UnsignedInt
  id_cancelo                                                                                          Int?                                   @db.UnsignedInt
  created_at                                                                                          DateTime?                              @db.Timestamp(0)
  updated_at                                                                                          DateTime?                              @db.Timestamp(0)
  deleted_at                                                                                          DateTime?                              @db.Timestamp(0)
  users_enf_procedimientos_invasivos_id_autorizoTousers                                               users?                                 @relation("enf_procedimientos_invasivos_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_autorizo_foreign")
  users_enf_procedimientos_invasivos_id_canceloTousers                                                users?                                 @relation("enf_procedimientos_invasivos_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_cancelo_foreign")
  cat_procedimientos_invasivos_enf_procedimientos_invasivos_id_flebitisTocat_procedimientos_invasivos cat_procedimientos_invasivos?          @relation("enf_procedimientos_invasivos_id_flebitisTocat_procedimientos_invasivos", fields: [id_flebitis], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_flebitis_foreign")
  hpz_ingreso_hospitalario                                                                            hpz_ingreso_hospitalario               @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_ingreso_foreign")
  cat_procedimientos_invasivos_enf_procedimientos_invasivos_id_instaloTocat_procedimientos_invasivos  cat_procedimientos_invasivos?          @relation("enf_procedimientos_invasivos_id_instaloTocat_procedimientos_invasivos", fields: [id_instalo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_instalo_foreign")
  cat_procedimientos_invasivos_enf_procedimientos_invasivos_id_retiroTocat_procedimientos_invasivos   cat_procedimientos_invasivos?          @relation("enf_procedimientos_invasivos_id_retiroTocat_procedimientos_invasivos", fields: [id_retiro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_retiro_foreign")
  cat_procedimientos_invasivos_enf_procedimientos_invasivos_id_sitioTocat_procedimientos_invasivos    cat_procedimientos_invasivos?          @relation("enf_procedimientos_invasivos_id_sitioTocat_procedimientos_invasivos", fields: [id_sitio], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_sitio_foreign")
  cat_procedimientos_invasivos_enf_procedimientos_invasivos_id_subtipoTocat_procedimientos_invasivos  cat_procedimientos_invasivos?          @relation("enf_procedimientos_invasivos_id_subtipoTocat_procedimientos_invasivos", fields: [id_subtipo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_subtipo_foreign")
  hpz_cama_historial                                                                                  hpz_cama_historial                     @relation(fields: [id_ubicacion], references: [id], onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_ubicacion_foreign")
  users_enf_procedimientos_invasivos_id_userTousers                                                   users?                                 @relation("enf_procedimientos_invasivos_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_id_user_foreign")
  enf_procedimientos_invasivos_detalle                                                                enf_procedimientos_invasivos_detalle[]

  @@index([id_autorizo], map: "enf_procedimientos_invasivos_id_autorizo_foreign")
  @@index([id_cancelo], map: "enf_procedimientos_invasivos_id_cancelo_foreign")
  @@index([id_flebitis], map: "enf_procedimientos_invasivos_id_flebitis_foreign")
  @@index([id_ingreso], map: "enf_procedimientos_invasivos_id_ingreso_foreign")
  @@index([id_instalo], map: "enf_procedimientos_invasivos_id_instalo_foreign")
  @@index([id_retiro], map: "enf_procedimientos_invasivos_id_retiro_foreign")
  @@index([id_sitio], map: "enf_procedimientos_invasivos_id_sitio_foreign")
  @@index([id_subtipo], map: "enf_procedimientos_invasivos_id_subtipo_foreign")
  @@index([id_ubicacion], map: "enf_procedimientos_invasivos_id_ubicacion_foreign")
  @@index([id_user], map: "enf_procedimientos_invasivos_id_user_foreign")
}

model enf_procedimientos_invasivos_detalle {
  id                                                            BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  tipo                                                          String                        @db.VarChar(50)
  fecha                                                         DateTime                      @db.DateTime(0)
  observaciones                                                 String                        @db.Text
  id_retiro                                                     BigInt?                       @db.UnsignedBigInt
  id_procedimiento                                              BigInt?                       @db.UnsignedBigInt
  id_ubicacion                                                  Int                           @db.UnsignedInt
  id_user                                                       Int?                          @db.UnsignedInt
  id_autorizo                                                   Int?                          @db.UnsignedInt
  id_cancelo                                                    Int?                          @db.UnsignedInt
  created_at                                                    DateTime?                     @db.Timestamp(0)
  updated_at                                                    DateTime?                     @db.Timestamp(0)
  deleted_at                                                    DateTime?                     @db.Timestamp(0)
  users_enf_procedimientos_invasivos_detalle_id_autorizoTousers users?                        @relation("enf_procedimientos_invasivos_detalle_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_detalle_id_autorizo_foreign")
  users_enf_procedimientos_invasivos_detalle_id_canceloTousers  users?                        @relation("enf_procedimientos_invasivos_detalle_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_detalle_id_cancelo_foreign")
  enf_procedimientos_invasivos                                  enf_procedimientos_invasivos? @relation(fields: [id_procedimiento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_detalle_id_procedimiento_foreign")
  cat_procedimientos_invasivos                                  cat_procedimientos_invasivos? @relation(fields: [id_retiro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_detalle_id_retiro_foreign")
  hpz_cama_historial                                            hpz_cama_historial            @relation(fields: [id_ubicacion], references: [id], onUpdate: Restrict, map: "enf_procedimientos_invasivos_detalle_id_ubicacion_foreign")
  users_enf_procedimientos_invasivos_detalle_id_userTousers     users?                        @relation("enf_procedimientos_invasivos_detalle_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_procedimientos_invasivos_detalle_id_user_foreign")

  @@index([id_autorizo], map: "enf_procedimientos_invasivos_detalle_id_autorizo_foreign")
  @@index([id_cancelo], map: "enf_procedimientos_invasivos_detalle_id_cancelo_foreign")
  @@index([id_procedimiento], map: "enf_procedimientos_invasivos_detalle_id_procedimiento_foreign")
  @@index([id_retiro], map: "enf_procedimientos_invasivos_detalle_id_retiro_foreign")
  @@index([id_ubicacion], map: "enf_procedimientos_invasivos_detalle_id_ubicacion_foreign")
  @@index([id_user], map: "enf_procedimientos_invasivos_detalle_id_user_foreign")
}

model enf_ulceras_presion {
  id                                                             BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  id_cuerpo                                                      BigInt                   @db.UnsignedBigInt
  id_longitud                                                    BigInt                   @db.UnsignedBigInt
  id_exudado                                                     BigInt                   @db.UnsignedBigInt
  id_tejido                                                      BigInt                   @db.UnsignedBigInt
  id_ingreso                                                     Int                      @db.UnsignedInt
  id_user                                                        Int?                     @db.UnsignedInt
  id_autorizo                                                    Int?                     @db.UnsignedInt
  id_cancelo                                                     Int?                     @db.UnsignedInt
  created_at                                                     DateTime?                @db.Timestamp(0)
  updated_at                                                     DateTime?                @db.Timestamp(0)
  deleted_at                                                     DateTime?                @db.Timestamp(0)
  users_enf_ulceras_presion_id_autorizoTousers                   users?                   @relation("enf_ulceras_presion_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_ulceras_presion_id_autorizo_foreign")
  users_enf_ulceras_presion_id_canceloTousers                    users?                   @relation("enf_ulceras_presion_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_ulceras_presion_id_cancelo_foreign")
  cat_enfermeria_enf_ulceras_presion_id_cuerpoTocat_enfermeria   cat_enfermeria           @relation("enf_ulceras_presion_id_cuerpoTocat_enfermeria", fields: [id_cuerpo], references: [id], onUpdate: Restrict, map: "enf_ulceras_presion_id_cuerpo_foreign")
  cat_enfermeria_enf_ulceras_presion_id_exudadoTocat_enfermeria  cat_enfermeria           @relation("enf_ulceras_presion_id_exudadoTocat_enfermeria", fields: [id_exudado], references: [id], onUpdate: Restrict, map: "enf_ulceras_presion_id_exudado_foreign")
  hpz_ingreso_hospitalario                                       hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "enf_ulceras_presion_id_ingreso_foreign")
  cat_enfermeria_enf_ulceras_presion_id_longitudTocat_enfermeria cat_enfermeria           @relation("enf_ulceras_presion_id_longitudTocat_enfermeria", fields: [id_longitud], references: [id], onUpdate: Restrict, map: "enf_ulceras_presion_id_longitud_foreign")
  cat_enfermeria_enf_ulceras_presion_id_tejidoTocat_enfermeria   cat_enfermeria           @relation("enf_ulceras_presion_id_tejidoTocat_enfermeria", fields: [id_tejido], references: [id], onUpdate: Restrict, map: "enf_ulceras_presion_id_tejido_foreign")
  users_enf_ulceras_presion_id_userTousers                       users?                   @relation("enf_ulceras_presion_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "enf_ulceras_presion_id_user_foreign")

  @@index([id_autorizo], map: "enf_ulceras_presion_id_autorizo_foreign")
  @@index([id_cancelo], map: "enf_ulceras_presion_id_cancelo_foreign")
  @@index([id_cuerpo], map: "enf_ulceras_presion_id_cuerpo_foreign")
  @@index([id_exudado], map: "enf_ulceras_presion_id_exudado_foreign")
  @@index([id_ingreso], map: "enf_ulceras_presion_id_ingreso_foreign")
  @@index([id_longitud], map: "enf_ulceras_presion_id_longitud_foreign")
  @@index([id_tejido], map: "enf_ulceras_presion_id_tejido_foreign")
  @@index([id_user], map: "enf_ulceras_presion_id_user_foreign")
}

model hcl_antecedentes_familiares {
  id                   BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  linea                String               @db.VarChar(250)
  enfermedad           String               @db.VarChar(250)
  observaciones        String?              @db.VarChar(250)
  id_historia          BigInt               @db.UnsignedBigInt
  created_at           DateTime?            @db.Timestamp(0)
  updated_at           DateTime?            @db.Timestamp(0)
  deleted_at           DateTime?            @db.Timestamp(0)
  hcl_historia_clinica hcl_historia_clinica @relation(fields: [id_historia], references: [id], onUpdate: Restrict, map: "hcl_antecedentes_familiares_id_historia_foreign")

  @@index([id_historia], map: "hcl_antecedentes_familiares_id_historia_foreign")
}

model hcl_historia_clinica {
  id                                            BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  alimentacion                                  Boolean                       @default(false)
  higiene                                       Boolean                       @default(false)
  habitacion                                    Boolean                       @default(false)
  hacinamiento                                  Boolean                       @default(false)
  zoonosis                                      Boolean                       @default(false)
  toximanias                                    Boolean                       @default(false)
  tabaquismo                                    Boolean                       @default(false)
  tabaquismo_tiempo                             String                        @db.VarChar(100)
  tabaquismo_cigarros                           String?                       @db.VarChar(10)
  ingesta_bebidas_embriagantes                  Boolean                       @default(false)
  llega_embriagez                               Boolean                       @default(false)
  frecuencia_embriaguez                         String?                       @db.VarChar(250)
  alergias                                      Boolean                       @default(false)
  quirurgicos                                   Boolean                       @default(false)
  transfucionales                               Boolean                       @default(false)
  traumaticos                                   Boolean                       @default(false)
  epilepsia                                     Boolean                       @default(false)
  obesidad                                      Boolean                       @default(false)
  respiratorios                                 Boolean                       @default(false)
  cardiopatias                                  Boolean                       @default(false)
  infecciones                                   Boolean                       @default(false)
  fiebre_reumatica                              Boolean                       @default(false)
  hospitalizacion                               Boolean                       @default(false)
  antecedentes_patologicos_otros                String?                       @db.Text
  menarca                                       String?                       @db.VarChar(250)
  ritmo                                         String?                       @db.VarChar(250)
  vida_sexual                                   String?                       @db.VarChar(250)
  ultima_mestruacion                            String?                       @db.VarChar(250)
  control_prenatal                              String?                       @db.VarChar(250)
  gesta                                         Boolean                       @default(false)
  partos                                        String?                       @db.VarChar(250)
  abortos                                       String?                       @db.VarChar(250)
  cesareas                                      String?                       @db.VarChar(250)
  obitos                                        String?                       @db.VarChar(250)
  planificacion_familiar                        Boolean                       @default(false)
  planificacion_tipo                            String?                       @db.VarChar(250)
  enfermedad_embarazo                           Boolean                       @default(false)
  climaterio                                    Boolean                       @default(false)
  climaterio_inicio                             String?                       @db.VarChar(250)
  aparato_digestivo                             Boolean                       @default(false)
  aparato_digestivo_observaciones               String?                       @db.Text
  aparato_respiratorio                          Boolean                       @default(false)
  aparato_respiratorio_observaciones            String?                       @db.Text
  aparato_cardiovascular                        Boolean                       @default(false)
  aparato_cardiovascular_observaciones          String?                       @db.Text
  sistema_musculo_esqueletico                   Boolean                       @default(false)
  sistema_musculo_esqueletico_observaciones     String?                       @db.Text
  aparato_genito_urinario                       Boolean                       @default(false)
  aparato_genito_urinario_observaciones         String?                       @db.Text
  sistema_endocrino                             Boolean                       @default(false)
  sistema_endocrino_observaciones               String?                       @db.Text
  sistema_nervioso_central                      Boolean                       @default(false)
  sistema_nervioso_central_observaciones        String?                       @db.Text
  sistema_tegumentario                          Boolean?                      @default(false)
  sistema_tegumentario_observaciones            String?                       @db.Text
  organos_sentidos                              Boolean                       @default(false)
  organos_sentidos_observaciones                String?                       @db.Text
  procedimiento_actual                          String?                       @db.Text
  exploracion_fisica                            String?                       @db.Text
  radiografia                                   Boolean                       @default(false)
  radiografia_observaciones                     String?                       @db.Text
  electrocardiograma                            Boolean                       @default(false)
  electrocardiograma_observaciones              String?                       @db.Text
  tomografia                                    Boolean?                      @default(false)
  tomografia_observaciones                      String?                       @db.Text
  laboratorio                                   Boolean                       @default(false)
  laboratorio_observaciones                     String?                       @db.Text
  gases_arteriales                              Boolean                       @default(false)
  gases_arteriales_observaciones                String?                       @db.Text
  cirugia_mayor                                 String?
  cabeza                                        String?
  cuello                                        String?
  torax                                         String?
  abdomen                                       String?
  extremidades                                  String?
  genitales                                     String?
  resultados_previos                            String?                       @db.Text
  terapia_empleada                              String?                       @db.Text
  diagnosticos                                  String?                       @db.Text
  plan                                          String?                       @db.Text
  id_paciente                                   Int?                          @db.UnsignedInt
  id_ingreso                                    Int?                          @db.UnsignedInt
  id_user                                       Int                           @db.UnsignedInt
  id_autorizo                                   Int                           @db.UnsignedInt
  created_at                                    DateTime?                     @db.Timestamp(0)
  updated_at                                    DateTime?                     @db.Timestamp(0)
  deleted_at                                    DateTime?                     @db.Timestamp(0)
  hcl_antecedentes_familiares                   hcl_antecedentes_familiares[]
  users_hcl_historia_clinica_id_autorizoTousers users                         @relation("hcl_historia_clinica_id_autorizoTousers", fields: [id_autorizo], references: [id], onUpdate: Restrict, map: "hcl_historia_clinica_id_autorizo_foreign")
  hpz_ingreso_hospitalario                      hpz_ingreso_hospitalario?     @relation(fields: [id_ingreso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hcl_historia_clinica_id_ingreso_foreign")
  hpz_paciente                                  hpz_paciente?                 @relation(fields: [id_paciente], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hcl_historia_clinica_id_paciente_foreign")
  users_hcl_historia_clinica_id_userTousers     users                         @relation("hcl_historia_clinica_id_userTousers", fields: [id_user], references: [id], onUpdate: Restrict, map: "hcl_historia_clinica_id_user_foreign")

  @@index([id_autorizo], map: "hcl_historia_clinica_id_autorizo_foreign")
  @@index([id_ingreso], map: "hcl_historia_clinica_id_ingreso_foreign")
  @@index([id_paciente], map: "hcl_historia_clinica_id_paciente_foreign")
  @@index([id_user], map: "hcl_historia_clinica_id_user_foreign")
}

model hpz_auxiliares_dx_comentarios {
  id                                                     BigInt                               @id @default(autoincrement()) @db.UnsignedBigInt
  comentario                                             String?                              @db.Text
  id_auxiliar                                            BigInt?                              @db.UnsignedBigInt
  id_user                                                Int                                  @db.UnsignedInt
  id_autorizo                                            Int                                  @db.UnsignedInt
  created_at                                             DateTime?                            @db.Timestamp(0)
  updated_at                                             DateTime?                            @db.Timestamp(0)
  deleted_at                                             DateTime?                            @db.Timestamp(0)
  users_hpz_auxiliares_dx_comentarios_id_autorizoTousers users                                @relation("hpz_auxiliares_dx_comentarios_id_autorizoTousers", fields: [id_autorizo], references: [id], onUpdate: Restrict, map: "hpz_auxiliares_dx_comentarios_id_autorizo_foreign")
  hpz_paciente_auxiliares_diagnostico                    hpz_paciente_auxiliares_diagnostico? @relation(fields: [id_auxiliar], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_auxiliares_dx_comentarios_id_auxiliar_foreign")
  users_hpz_auxiliares_dx_comentarios_id_userTousers     users                                @relation("hpz_auxiliares_dx_comentarios_id_userTousers", fields: [id_user], references: [id], onUpdate: Restrict, map: "hpz_auxiliares_dx_comentarios_id_user_foreign")

  @@index([id_autorizo], map: "hpz_auxiliares_dx_comentarios_id_autorizo_foreign")
  @@index([id_auxiliar], map: "hpz_auxiliares_dx_comentarios_id_auxiliar_foreign")
  @@index([id_user], map: "hpz_auxiliares_dx_comentarios_id_user_foreign")
}

model hpz_cama_historial {
  id                                   Int                                    @id @default(autoincrement()) @db.UnsignedInt
  id_servicio                          Int?                                   @db.UnsignedInt
  id_especialidad                      Int?                                   @db.UnsignedInt
  id_area                              Int?                                   @db.UnsignedInt
  id_cama                              Int?                                   @db.UnsignedInt
  id_ingreso                           Int                                    @db.UnsignedInt
  id_medico                            Int?                                   @db.UnsignedInt
  id_diagnostico                       Int?                                   @db.UnsignedInt
  created_at                           DateTime?                              @db.Timestamp(0)
  updated_at                           DateTime?                              @db.Timestamp(0)
  enf_procedimientos_invasivos         enf_procedimientos_invasivos[]
  enf_procedimientos_invasivos_detalle enf_procedimientos_invasivos_detalle[]
  cat_camas                            cat_camas?                             @relation(fields: [id_cama], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_cama_historial_id_cama_foreign")
  cat_cie10                            cat_cie10?                             @relation(fields: [id_diagnostico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_cama_historial_id_diagnostico_foreign")
  cat_especialidades                   cat_especialidades?                    @relation(fields: [id_especialidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_cama_historial_id_especialidad_foreign")
  hpz_ingreso_hospitalario             hpz_ingreso_hospitalario               @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_cama_historial_id_ingreso_foreign")
  rch_empleados                        rch_empleados?                         @relation(fields: [id_medico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_cama_historial_id_medico_foreign")
  hpz_cateter_instalacion              hpz_cateter_instalacion[]
  hpz_dx_historial                     hpz_dx_historial[]
  hpz_ingreso_epidemio_iaas            hpz_ingreso_epidemio_iaas[]
  hpz_paciente_auxiliares_diagnostico  hpz_paciente_auxiliares_diagnostico[]
  hpz_paciente_nota_medica             hpz_paciente_nota_medica[]

  @@index([id_cama], map: "hpz_cama_historial_id_cama_foreign")
  @@index([id_diagnostico], map: "hpz_cama_historial_id_diagnostico_foreign")
  @@index([id_especialidad], map: "hpz_cama_historial_id_especialidad_foreign")
  @@index([id_ingreso], map: "hpz_cama_historial_id_ingreso_foreign")
  @@index([id_medico], map: "hpz_cama_historial_id_medico_foreign")
}

model hpz_cateter_complicaciones_instalacion {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String
  activo     Boolean
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model hpz_cateter_instalacion {
  id                                                              Int                         @id @default(autoincrement()) @db.UnsignedInt
  fecha_instalacion                                               DateTime                    @db.Date
  fecha_retiro                                                    DateTime?                   @db.Date
  id_tipo                                                         Int                         @db.UnsignedInt
  id_sitio                                                        Int                         @db.UnsignedInt
  id_instalo                                                      Int?                        @db.UnsignedInt
  id_ingreso                                                      Int                         @db.UnsignedInt
  id_ubicacion                                                    Int                         @db.UnsignedInt
  id_retiro                                                       Int?                        @db.UnsignedInt
  created_at                                                      DateTime?                   @db.Timestamp(0)
  updated_at                                                      DateTime?                   @db.Timestamp(0)
  deleted_at                                                      DateTime?                   @db.Timestamp(0)
  hpz_ingreso_hospitalario                                        hpz_ingreso_hospitalario    @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_cateter_instalacion_id_ingreso_foreign")
  rch_empleados_hpz_cateter_instalacion_id_instaloTorch_empleados rch_empleados?              @relation("hpz_cateter_instalacion_id_instaloTorch_empleados", fields: [id_instalo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_cateter_instalacion_id_instalo_foreign")
  rch_empleados_hpz_cateter_instalacion_id_retiroTorch_empleados  rch_empleados?              @relation("hpz_cateter_instalacion_id_retiroTorch_empleados", fields: [id_retiro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_cateter_instalacion_id_retiro_foreign")
  cat_cateter_sitio_anatomico                                     cat_cateter_sitio_anatomico @relation(fields: [id_sitio], references: [id], onUpdate: Restrict, map: "hpz_cateter_instalacion_id_sitio_foreign")
  cat_cateter_tipo                                                cat_cateter_tipo            @relation(fields: [id_tipo], references: [id], onUpdate: Restrict, map: "hpz_cateter_instalacion_id_tipo_foreign")
  hpz_cama_historial                                              hpz_cama_historial          @relation(fields: [id_ubicacion], references: [id], onUpdate: Restrict, map: "hpz_cateter_instalacion_id_ubicacion_foreign")

  @@index([id_ingreso], map: "hpz_cateter_instalacion_id_ingreso_foreign")
  @@index([id_instalo], map: "hpz_cateter_instalacion_id_instalo_foreign")
  @@index([id_retiro], map: "hpz_cateter_instalacion_id_retiro_foreign")
  @@index([id_sitio], map: "hpz_cateter_instalacion_id_sitio_foreign")
  @@index([id_tipo], map: "hpz_cateter_instalacion_id_tipo_foreign")
  @@index([id_ubicacion], map: "hpz_cateter_instalacion_id_ubicacion_foreign")
}

model hpz_cateter_problemas_manejo {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String
  activo     Boolean
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model hpz_cateter_tipos_insercion {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  nombre     String
  activo     Boolean
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hpz_citas_historial {
  tipo_cita            String               @db.VarChar(100)
  estatus              String
  fecha_cita_inicio    DateTime?            @db.DateTime(0)
  id_cita              Int                  @db.UnsignedInt
  id_especialidad      Int?                 @db.UnsignedInt
  id_medico            Int?                 @db.UnsignedInt
  user                 String?
  id_user              String?
  autorizo             String?
  id_autorizo          String?
  created_at           DateTime?            @db.Timestamp(0)
  updated_at           DateTime?            @db.Timestamp(0)
  deleted_at           DateTime?            @db.Timestamp(0)
  hpz_ingreso_consulta hpz_ingreso_consulta @relation(fields: [id_cita], references: [id], onUpdate: Restrict, map: "hpz_citas_historial_id_cita_foreign")
  cat_especialidades   cat_especialidades?  @relation(fields: [id_especialidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_citas_historial_id_especialidad_foreign")
  rch_empleados        rch_empleados?       @relation(fields: [id_medico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_citas_historial_id_medico_foreign")

  @@index([id_cita], map: "hpz_citas_historial_id_cita_foreign")
  @@index([id_especialidad], map: "hpz_citas_historial_id_especialidad_foreign")
  @@index([id_medico], map: "hpz_citas_historial_id_medico_foreign")
  @@ignore
}

model hpz_clue_historial {
  id                       Int                      @id @default(autoincrement()) @db.UnsignedInt
  id_ingreso               Int                      @db.UnsignedInt
  id_clue                  Int                      @db.UnsignedInt
  created_at               DateTime?                @db.Timestamp(0)
  updated_at               DateTime?                @db.Timestamp(0)
  cat_clues                cat_clues                @relation(fields: [id_clue], references: [id], onUpdate: Restrict, map: "hpz_clue_historial_id_clue_foreign")
  hpz_ingreso_hospitalario hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_clue_historial_id_ingreso_foreign")

  @@index([id_clue], map: "hpz_clue_historial_id_clue_foreign")
  @@index([id_ingreso], map: "hpz_clue_historial_id_ingreso_foreign")
}

model hpz_dx_historial {
  id                       Int                      @id @default(autoincrement()) @db.UnsignedInt
  dx_informal              String                   @db.Text
  activo                   Boolean                  @default(true)
  ingreso                  Boolean                  @default(false)
  egreso                   Boolean                  @default(false)
  id_diagnostico           Int?                     @db.UnsignedInt
  id_ingreso               Int                      @db.UnsignedInt
  id_medico                Int?                     @db.UnsignedInt
  id_ubicacion             Int                      @db.UnsignedInt
  created_at               DateTime?                @db.Timestamp(0)
  updated_at               DateTime?                @db.Timestamp(0)
  cat_cie10                cat_cie10?               @relation(fields: [id_diagnostico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_dx_historial_id_diagnostico_foreign")
  hpz_ingreso_hospitalario hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_dx_historial_id_ingreso_foreign")
  rch_empleados            rch_empleados?           @relation(fields: [id_medico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_dx_historial_id_medico_foreign")
  hpz_cama_historial       hpz_cama_historial       @relation(fields: [id_ubicacion], references: [id], onUpdate: Restrict, map: "hpz_dx_historial_id_ubicacion_foreign")
  hpz_notas_diagnosticos   hpz_notas_diagnosticos[]

  @@index([id_diagnostico], map: "hpz_dx_historial_id_diagnostico_foreign")
  @@index([id_ingreso], map: "hpz_dx_historial_id_ingreso_foreign")
  @@index([id_medico], map: "hpz_dx_historial_id_medico_foreign")
  @@index([id_ubicacion], map: "hpz_dx_historial_id_ubicacion_foreign")
}

model hpz_enf_intervenciones {
  id                                                     BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  codigo_nanda                                           String                   @db.VarChar(5)
  intervencion                                           String?                  @db.Text
  motivo_cancelacion                                     String?                  @db.Text
  fecha_elaboracion                                      DateTime                 @db.DateTime(0)
  id_factor                                              BigInt?                  @db.UnsignedBigInt
  id_sintoma                                             BigInt?                  @db.UnsignedBigInt
  id_ingreso                                             Int                      @db.UnsignedInt
  id_user                                                Int                      @db.UnsignedInt
  id_autorizo                                            Int                      @db.UnsignedInt
  id_cancelo                                             Int?                     @db.UnsignedInt
  created_at                                             DateTime?                @db.Timestamp(0)
  updated_at                                             DateTime?                @db.Timestamp(0)
  deleted_at                                             DateTime?                @db.Timestamp(0)
  users_hpz_enf_intervenciones_id_autorizoTousers        users                    @relation("hpz_enf_intervenciones_id_autorizoTousers", fields: [id_autorizo], references: [id], onUpdate: Restrict, map: "hpz_enf_intervenciones_id_autorizo_foreign")
  users_hpz_enf_intervenciones_id_canceloTousers         users?                   @relation("hpz_enf_intervenciones_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_enf_intervenciones_id_cancelo_foreign")
  cat_nanda_hpz_enf_intervenciones_id_factorTocat_nanda  cat_nanda?               @relation("hpz_enf_intervenciones_id_factorTocat_nanda", fields: [id_factor], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_enf_intervenciones_id_factor_foreign")
  hpz_ingreso_hospitalario                               hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_enf_intervenciones_id_ingreso_foreign")
  cat_nanda_hpz_enf_intervenciones_id_sintomaTocat_nanda cat_nanda?               @relation("hpz_enf_intervenciones_id_sintomaTocat_nanda", fields: [id_sintoma], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_enf_intervenciones_id_sintoma_foreign")
  users_hpz_enf_intervenciones_id_userTousers            users                    @relation("hpz_enf_intervenciones_id_userTousers", fields: [id_user], references: [id], onUpdate: Restrict, map: "hpz_enf_intervenciones_id_user_foreign")

  @@index([id_autorizo], map: "hpz_enf_intervenciones_id_autorizo_foreign")
  @@index([id_cancelo], map: "hpz_enf_intervenciones_id_cancelo_foreign")
  @@index([id_factor], map: "hpz_enf_intervenciones_id_factor_foreign")
  @@index([id_ingreso], map: "hpz_enf_intervenciones_id_ingreso_foreign")
  @@index([id_sintoma], map: "hpz_enf_intervenciones_id_sintoma_foreign")
  @@index([id_user], map: "hpz_enf_intervenciones_id_user_foreign")
}

model hpz_formatos_medicos {
  id                     BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  id_pregunta            BigInt                  @db.UnsignedBigInt
  id_respuesta           BigInt?                 @db.UnsignedBigInt
  id_nota                BigInt?                 @db.UnsignedBigInt
  observaciones          String?                 @db.Text
  id_user                BigInt?                 @db.UnsignedBigInt
  id_autorizo            BigInt?                 @db.UnsignedBigInt
  created_at             DateTime?               @db.Timestamp(0)
  updated_at             DateTime?               @db.Timestamp(0)
  deleted_at             DateTime?               @db.Timestamp(0)
  cat_formato_preguntas  cat_formato_preguntas   @relation(fields: [id_pregunta], references: [id], onUpdate: Restrict, map: "hpz_formatos_medicos_id_pregunta_foreign")
  cat_formato_respuestas cat_formato_respuestas? @relation(fields: [id_respuesta], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_formatos_medicos_id_respuesta_foreign")

  @@index([id_pregunta], map: "hpz_formatos_medicos_id_pregunta_foreign")
  @@index([id_respuesta], map: "hpz_formatos_medicos_id_respuesta_foreign")
}

model hpz_indicacion_medicamentos {
  id                                                    BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  cantidad                                              String                          @db.VarChar(10)
  estatus                                               String                          @db.VarChar(10)
  observaciones                                         String?                         @db.Text
  id_clave                                              BigInt?                         @db.UnsignedBigInt
  id_dosis                                              BigInt?                         @db.UnsignedBigInt
  id_via                                                BigInt?                         @db.UnsignedBigInt
  id_intervalo                                          BigInt?                         @db.UnsignedBigInt
  id_hora                                               BigInt?                         @db.UnsignedBigInt
  id_ingreso                                            Int                             @db.UnsignedInt
  id_user                                               Int?                            @db.UnsignedInt
  id_autorizo                                           Int?                            @db.UnsignedInt
  id_suspendio                                          Int?                            @db.UnsignedInt
  suspended_at                                          DateTime?                       @db.DateTime(0)
  created_at                                            DateTime?                       @db.Timestamp(0)
  updated_at                                            DateTime?                       @db.Timestamp(0)
  deleted_at                                            DateTime?                       @db.Timestamp(0)
  users_hpz_indicacion_medicamentos_id_autorizoTousers  users?                          @relation("hpz_indicacion_medicamentos_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_autorizo_foreign")
  cat_productos                                         cat_productos?                  @relation(fields: [id_clave], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_clave_foreign")
  cat_medicamento_dosis                                 cat_medicamento_dosis?          @relation(fields: [id_dosis], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_dosis_foreign")
  cat_medicamento_horarios                              cat_medicamento_horarios?       @relation(fields: [id_hora], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_hora_foreign")
  hpz_ingreso_hospitalario                              hpz_ingreso_hospitalario        @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_ingreso_foreign")
  cat_medicamento_intervalos                            cat_medicamento_intervalos?     @relation(fields: [id_intervalo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_intervalo_foreign")
  users_hpz_indicacion_medicamentos_id_suspendioTousers users?                          @relation("hpz_indicacion_medicamentos_id_suspendioTousers", fields: [id_suspendio], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_suspendio_foreign")
  users_hpz_indicacion_medicamentos_id_userTousers      users?                          @relation("hpz_indicacion_medicamentos_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_user_foreign")
  cat_medicamento_vias                                  cat_medicamento_vias?           @relation(fields: [id_via], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicacion_medicamentos_id_via_foreign")
  hpz_indicaciones_medicamentos                         hpz_indicaciones_medicamentos[] @ignore
  hpz_medicamento_ministracion                          hpz_medicamento_ministracion[]

  @@index([id_autorizo], map: "hpz_indicacion_medicamentos_id_autorizo_foreign")
  @@index([id_clave], map: "hpz_indicacion_medicamentos_id_clave_foreign")
  @@index([id_dosis], map: "hpz_indicacion_medicamentos_id_dosis_foreign")
  @@index([id_hora], map: "hpz_indicacion_medicamentos_id_hora_foreign")
  @@index([id_ingreso], map: "hpz_indicacion_medicamentos_id_ingreso_foreign")
  @@index([id_intervalo], map: "hpz_indicacion_medicamentos_id_intervalo_foreign")
  @@index([id_suspendio], map: "hpz_indicacion_medicamentos_id_suspendio_foreign")
  @@index([id_user], map: "hpz_indicacion_medicamentos_id_user_foreign")
  @@index([id_via], map: "hpz_indicacion_medicamentos_id_via_foreign")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hpz_indicaciones_medicamentos {
  id_indicacion               BigInt?                      @db.UnsignedBigInt
  id_medicamento              BigInt?                      @db.UnsignedBigInt
  id_via                      BigInt?                      @db.UnsignedBigInt
  id_intervalo                BigInt?                      @db.UnsignedBigInt
  cantidad                    String                       @db.VarChar(10)
  id_dosis                    BigInt?                      @db.UnsignedBigInt
  id_hora                     BigInt?                      @db.UnsignedBigInt
  observaciones               String?                      @db.Text
  created_at                  DateTime?                    @db.Timestamp(0)
  updated_at                  DateTime?                    @db.Timestamp(0)
  deleted_at                  DateTime?                    @db.Timestamp(0)
  cat_medicamento_dosis       cat_medicamento_dosis?       @relation(fields: [id_dosis], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicamentos_id_dosis_foreign")
  cat_medicamento_horarios    cat_medicamento_horarios?    @relation(fields: [id_hora], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicamentos_id_hora_foreign")
  hpz_indicaciones_medicas    hpz_indicaciones_medicas?    @relation(fields: [id_indicacion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicamentos_id_indicacion_foreign")
  cat_medicamento_intervalos  cat_medicamento_intervalos?  @relation(fields: [id_intervalo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicamentos_id_intervalo_foreign")
  hpz_indicacion_medicamentos hpz_indicacion_medicamentos? @relation(fields: [id_medicamento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicamentos_id_medicamento_foreign")
  cat_medicamento_vias        cat_medicamento_vias?        @relation(fields: [id_via], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicamentos_id_via_foreign")

  @@index([id_dosis], map: "hpz_indicaciones_medicamentos_id_dosis_foreign")
  @@index([id_hora], map: "hpz_indicaciones_medicamentos_id_hora_foreign")
  @@index([id_indicacion], map: "hpz_indicaciones_medicamentos_id_indicacion_foreign")
  @@index([id_intervalo], map: "hpz_indicaciones_medicamentos_id_intervalo_foreign")
  @@index([id_medicamento], map: "hpz_indicaciones_medicamentos_id_medicamento_foreign")
  @@index([id_via], map: "hpz_indicaciones_medicamentos_id_via_foreign")
  @@ignore
}

model hpz_indicaciones_medicas {
  id                                                                 BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  dieta                                                              String?                         @db.Text
  posicion                                                           String?
  deambulacion                                                       String?
  bano                                                               String?
  curacion                                                           String?
  signos_vitales                                                     String?
  medidas_antitromboticas                                            String?
  fisio_pulmonar                                                     String?
  ulceras_presion                                                    String?
  proteccion_caidas                                                  String?
  otras_medidas                                                      String?                         @db.Text
  apoyo_ventilatorio                                                 String?                         @db.Text
  soluciones                                                         String?                         @db.Text
  saturometria                                                       String?
  pvc                                                                String?
  diuresis                                                           String?
  balance_hidrico                                                    String?
  glucometria                                                        String?                         @db.VarChar(500)
  eva                                                                String?
  glasglow                                                           String?
  perimetro_abdominal                                                String?
  examenes_laboratorio                                               String?                         @db.Text
  interconsultas                                                     String?                         @db.Text
  infusiones                                                         String?                         @db.Text
  id_ingreso                                                         Int                             @db.UnsignedInt
  id_adscrito                                                        Int?                            @db.UnsignedInt
  id_residente                                                       Int?                            @db.UnsignedInt
  id_user                                                            Int?                            @db.UnsignedInt
  id_autorizo                                                        Int?                            @db.UnsignedInt
  id_cancelo                                                         Int?                            @db.UnsignedInt
  created_at                                                         DateTime?                       @db.Timestamp(0)
  updated_at                                                         DateTime?                       @db.Timestamp(0)
  deleted_at                                                         DateTime?                       @db.Timestamp(0)
  hpz_indicaciones_medicamentos                                      hpz_indicaciones_medicamentos[] @ignore
  rch_empleados_hpz_indicaciones_medicas_id_adscritoTorch_empleados  rch_empleados?                  @relation("hpz_indicaciones_medicas_id_adscritoTorch_empleados", fields: [id_adscrito], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicas_id_adscrito_foreign")
  users_hpz_indicaciones_medicas_id_autorizoTousers                  users?                          @relation("hpz_indicaciones_medicas_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicas_id_autorizo_foreign")
  users_hpz_indicaciones_medicas_id_canceloTousers                   users?                          @relation("hpz_indicaciones_medicas_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicas_id_cancelo_foreign")
  hpz_ingreso_hospitalario                                           hpz_ingreso_hospitalario        @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_indicaciones_medicas_id_ingreso_foreign")
  rch_empleados_hpz_indicaciones_medicas_id_residenteTorch_empleados rch_empleados?                  @relation("hpz_indicaciones_medicas_id_residenteTorch_empleados", fields: [id_residente], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicas_id_residente_foreign")
  users_hpz_indicaciones_medicas_id_userTousers                      users?                          @relation("hpz_indicaciones_medicas_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_indicaciones_medicas_id_user_foreign")

  @@index([id_adscrito], map: "hpz_indicaciones_medicas_id_adscrito_foreign")
  @@index([id_autorizo], map: "hpz_indicaciones_medicas_id_autorizo_foreign")
  @@index([id_cancelo], map: "hpz_indicaciones_medicas_id_cancelo_foreign")
  @@index([id_ingreso], map: "hpz_indicaciones_medicas_id_ingreso_foreign")
  @@index([id_residente], map: "hpz_indicaciones_medicas_id_residente_foreign")
  @@index([id_user], map: "hpz_indicaciones_medicas_id_user_foreign")
}

model hpz_ingreso_consulta {
  id                                                                 Int                       @id @default(autoincrement()) @db.UnsignedInt
  fecha_cita                                                         DateTime?                 @db.DateTime(0)
  fecha_ingreso                                                      DateTime?                 @db.DateTime(0)
  via_ingreso                                                        String                    @db.VarChar(100)
  dx_informal                                                        String                    @db.Text
  observaciones                                                      String?                   @db.Text
  caso_medico_legal                                                  Boolean                   @default(false)
  fecha_egreso                                                       DateTime?                 @db.DateTime(0)
  tipo_cita                                                          String                    @db.VarChar(100)
  fecha_cita_inicio                                                  DateTime?                 @db.DateTime(0)
  fecha_cita_fin                                                     DateTime?                 @db.DateTime(0)
  estatus                                                            String                    @db.Text
  id_servicio                                                        Int?                      @db.UnsignedInt
  id_especialidad                                                    Int                       @db.UnsignedInt
  id_clue_referencia                                                 Int                       @db.UnsignedInt
  id_clue_contrareferencia                                           Int?                      @db.UnsignedInt
  id_clue_atencion                                                   Int?                      @db.UnsignedInt
  id_medico                                                          Int?                      @db.UnsignedInt
  id_diagnostico                                                     Int?                      @db.UnsignedInt
  id_paciente                                                        Int                       @db.UnsignedInt
  id_user                                                            String?
  created_user                                                       String?
  id_consultorio                                                     Int?                      @db.UnsignedInt
  id_ingreso                                                         Int?                      @db.UnsignedInt
  created_at                                                         DateTime?                 @db.Timestamp(0)
  updated_at                                                         DateTime?                 @db.Timestamp(0)
  deleted_at                                                         DateTime?                 @db.Timestamp(0)
  hpz_citas_historial                                                hpz_citas_historial[]     @ignore
  cat_clues_hpz_ingreso_consulta_id_clue_atencionTocat_clues         cat_clues?                @relation("hpz_ingreso_consulta_id_clue_atencionTocat_clues", fields: [id_clue_atencion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_consulta_id_clue_atencion_foreign")
  cat_clues_hpz_ingreso_consulta_id_clue_contrareferenciaTocat_clues cat_clues?                @relation("hpz_ingreso_consulta_id_clue_contrareferenciaTocat_clues", fields: [id_clue_contrareferencia], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_consulta_id_clue_contrareferencia_foreign")
  cat_clues_hpz_ingreso_consulta_id_clue_referenciaTocat_clues       cat_clues                 @relation("hpz_ingreso_consulta_id_clue_referenciaTocat_clues", fields: [id_clue_referencia], references: [id], onUpdate: Restrict, map: "hpz_ingreso_consulta_id_clue_referencia_foreign")
  cat_camas                                                          cat_camas?                @relation(fields: [id_consultorio], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_consulta_id_consultorio_foreign")
  cat_cie10                                                          cat_cie10?                @relation(fields: [id_diagnostico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_consulta_id_diagnostico_foreign")
  cat_especialidades                                                 cat_especialidades        @relation(fields: [id_especialidad], references: [id], onUpdate: Restrict, map: "hpz_ingreso_consulta_id_especialidad_foreign")
  hpz_ingreso_hospitalario                                           hpz_ingreso_hospitalario? @relation(fields: [id_ingreso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_consulta_id_ingreso_foreign")
  rch_empleados                                                      rch_empleados?            @relation(fields: [id_medico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_consulta_id_medico_foreign")
  hpz_paciente                                                       hpz_paciente              @relation(fields: [id_paciente], references: [id], onUpdate: Restrict, map: "hpz_ingreso_consulta_id_paciente_foreign")

  @@index([id_clue_atencion], map: "hpz_ingreso_consulta_id_clue_atencion_foreign")
  @@index([id_clue_contrareferencia], map: "hpz_ingreso_consulta_id_clue_contrareferencia_foreign")
  @@index([id_clue_referencia], map: "hpz_ingreso_consulta_id_clue_referencia_foreign")
  @@index([id_consultorio], map: "hpz_ingreso_consulta_id_consultorio_foreign")
  @@index([id_diagnostico], map: "hpz_ingreso_consulta_id_diagnostico_foreign")
  @@index([id_especialidad], map: "hpz_ingreso_consulta_id_especialidad_foreign")
  @@index([id_ingreso], map: "hpz_ingreso_consulta_id_ingreso_foreign")
  @@index([id_medico], map: "hpz_ingreso_consulta_id_medico_foreign")
  @@index([id_paciente], map: "hpz_ingreso_consulta_id_paciente_foreign")
}

model hpz_ingreso_epidemio_iaas {
  id                        BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  fecha_deteccion           DateTime                   @db.Date
  fecha_resolucion          DateTime?                  @db.Date
  observaciones             String?
  id_ingreso                Int                        @db.UnsignedInt
  id_germen                 Int?                       @db.UnsignedInt
  id_sitio                  Int?                       @db.UnsignedInt
  id_ubicacion              Int                        @db.UnsignedInt
  created_at                DateTime?                  @db.Timestamp(0)
  updated_at                DateTime?                  @db.Timestamp(0)
  deleted_at                DateTime?                  @db.Timestamp(0)
  cat_iaas_germenes         cat_iaas_germenes?         @relation(fields: [id_germen], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_epidemio_iaas_id_germen_foreign")
  hpz_ingreso_hospitalario  hpz_ingreso_hospitalario   @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_ingreso_epidemio_iaas_id_ingreso_foreign")
  cat_iaas_sitios_infeccion cat_iaas_sitios_infeccion? @relation(fields: [id_sitio], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_epidemio_iaas_id_sitio_foreign")
  hpz_cama_historial        hpz_cama_historial         @relation(fields: [id_ubicacion], references: [id], onUpdate: Restrict, map: "hpz_ingreso_epidemio_iaas_id_ubicacion_foreign")

  @@index([id_germen], map: "hpz_ingreso_epidemio_iaas_id_germen_foreign")
  @@index([id_ingreso], map: "hpz_ingreso_epidemio_iaas_id_ingreso_foreign")
  @@index([id_sitio], map: "hpz_ingreso_epidemio_iaas_id_sitio_foreign")
  @@index([id_ubicacion], map: "hpz_ingreso_epidemio_iaas_id_ubicacion_foreign")
}

model hpz_ingreso_hospitalario {
  id                                                                            Int                                     @id @default(autoincrement()) @db.UnsignedInt
  tipo                                                                          String?                                 @db.VarChar(15)
  fecha_ingreso                                                                 DateTime                                @db.DateTime(0)
  medico_referencia                                                             String?
  folio_referencia                                                              String?
  estado_salud                                                                  hpz_ingreso_hospitalario_estado_salud
  estado_ingreso                                                                hpz_ingreso_hospitalario_estado_ingreso
  codigo_atencion                                                               String?                                 @db.Text
  observaciones                                                                 String?                                 @db.Text
  contigencia                                                                   String?                                 @db.Text
  caso_medico_legal                                                             Boolean                                 @default(false)
  dx_ingreso                                                                    String?                                 @db.Text
  dx_informal                                                                   String?                                 @db.Text
  alta_medica_motivo                                                            String?                                 @db.VarChar(100)
  alta_medica_otro_motivo                                                       String?                                 @db.Text
  alta_medica_fecha                                                             DateTime?                               @db.DateTime(0)
  fecha_egreso                                                                  DateTime?                               @db.DateTime(0)
  remision                                                                      String?
  defuncion_fecha                                                               DateTime?                               @db.Date
  id_via_ingreso                                                                Int?                                    @db.UnsignedInt
  id_programa                                                                   Int?                                    @db.UnsignedInt
  id_clue_referencia                                                            Int                                     @db.UnsignedInt
  id_medico_contrarefiere                                                       Int?                                    @db.UnsignedInt
  id_clue_contrareferencia                                                      Int?                                    @db.UnsignedInt
  id_medico                                                                     Int?                                    @db.UnsignedInt
  id_nivel                                                                      Int?                                    @db.UnsignedInt
  id_diagnostico                                                                Int?                                    @db.UnsignedInt
  id_servicio                                                                   Int?                                    @db.UnsignedInt
  id_especialidad                                                               Int?                                    @db.UnsignedInt
  id_area                                                                       Int?                                    @db.UnsignedInt
  id_cama                                                                       Int?                                    @db.UnsignedInt
  id_paciente                                                                   Int                                     @db.UnsignedInt
  id_clue_atencion                                                              Int?                                    @db.UnsignedInt
  id_codigo_urgencia                                                            Int?                                    @db.UnsignedInt
  id_user                                                                       Int?                                    @db.UnsignedInt
  id_user_confirmacion                                                          Int?                                    @db.UnsignedInt
  created_user                                                                  String?
  created_at                                                                    DateTime?                               @db.Timestamp(0)
  updated_at                                                                    DateTime?                               @db.Timestamp(0)
  deleted_at                                                                    DateTime?                               @db.Timestamp(0)
  enf_escala_valoracion                                                         enf_escala_valoracion[]
  enf_medidas_antropometricas                                                   enf_medidas_antropometricas[]
  enf_oxigenoterapia                                                            enf_oxigenoterapia[]
  enf_procedimientos_invasivos                                                  enf_procedimientos_invasivos[]
  enf_ulceras_presion                                                           enf_ulceras_presion[]
  hcl_historia_clinica                                                          hcl_historia_clinica[]
  hpz_cama_historial                                                            hpz_cama_historial[]
  hpz_cateter_instalacion                                                       hpz_cateter_instalacion[]
  hpz_clue_historial                                                            hpz_clue_historial[]
  hpz_dx_historial                                                              hpz_dx_historial[]
  hpz_enf_intervenciones                                                        hpz_enf_intervenciones[]
  hpz_indicacion_medicamentos                                                   hpz_indicacion_medicamentos[]
  hpz_indicaciones_medicas                                                      hpz_indicaciones_medicas[]
  hpz_ingreso_consulta                                                          hpz_ingreso_consulta[]
  hpz_ingreso_epidemio_iaas                                                     hpz_ingreso_epidemio_iaas[]
  cat_camas                                                                     cat_camas?                              @relation(fields: [id_cama], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_cama_foreign")
  cat_clues_hpz_ingreso_hospitalario_id_clue_atencionTocat_clues                cat_clues?                              @relation("hpz_ingreso_hospitalario_id_clue_atencionTocat_clues", fields: [id_clue_atencion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_clue_atencion_foreign")
  cat_clues_hpz_ingreso_hospitalario_id_clue_contrareferenciaTocat_clues        cat_clues?                              @relation("hpz_ingreso_hospitalario_id_clue_contrareferenciaTocat_clues", fields: [id_clue_contrareferencia], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_clue_contrareferencia_foreign")
  cat_clues_hpz_ingreso_hospitalario_id_clue_referenciaTocat_clues              cat_clues                               @relation("hpz_ingreso_hospitalario_id_clue_referenciaTocat_clues", fields: [id_clue_referencia], references: [id], onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_clue_referencia_foreign")
  cat_codigos_urgencias                                                         cat_codigos_urgencias?                  @relation(fields: [id_codigo_urgencia], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_codigo_urgencia_foreign")
  cat_cie10                                                                     cat_cie10?                              @relation(fields: [id_diagnostico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_diagnostico_foreign")
  cat_especialidades                                                            cat_especialidades?                     @relation(fields: [id_especialidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_especialidad_foreign")
  rch_empleados_hpz_ingreso_hospitalario_id_medico_contrarefiereTorch_empleados rch_empleados?                          @relation("hpz_ingreso_hospitalario_id_medico_contrarefiereTorch_empleados", fields: [id_medico_contrarefiere], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_medico_contrarefiere_foreign")
  rch_empleados_hpz_ingreso_hospitalario_id_medicoTorch_empleados               rch_empleados?                          @relation("hpz_ingreso_hospitalario_id_medicoTorch_empleados", fields: [id_medico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_medico_foreign")
  cat_niveles                                                                   cat_niveles?                            @relation(fields: [id_nivel], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_nivel_foreign")
  hpz_paciente                                                                  hpz_paciente                            @relation(fields: [id_paciente], references: [id], onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_paciente_foreign")
  cat_vias_ingreso_hpz_ingreso_hospitalario_id_programaTocat_vias_ingreso       cat_vias_ingreso?                       @relation("hpz_ingreso_hospitalario_id_programaTocat_vias_ingreso", fields: [id_programa], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_programa_foreign")
  users_hpz_ingreso_hospitalario_id_user_confirmacionTousers                    users?                                  @relation("hpz_ingreso_hospitalario_id_user_confirmacionTousers", fields: [id_user_confirmacion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_user_confirmacion_foreign")
  users_hpz_ingreso_hospitalario_id_userTousers                                 users?                                  @relation("hpz_ingreso_hospitalario_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_user_foreign")
  cat_vias_ingreso_hpz_ingreso_hospitalario_id_via_ingresoTocat_vias_ingreso    cat_vias_ingreso?                       @relation("hpz_ingreso_hospitalario_id_via_ingresoTocat_vias_ingreso", fields: [id_via_ingreso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_hospitalario_id_via_ingreso_foreign")
  hpz_ingreso_nom046                                                            hpz_ingreso_nom046[]
  hpz_ingreso_signos_vitales                                                    hpz_ingreso_signos_vitales[]
  hpz_paciente_auxiliares_diagnostico                                           hpz_paciente_auxiliares_diagnostico[]
  hpz_paciente_nota_medica                                                      hpz_paciente_nota_medica[]
  hpz_paciente_nota_trabajo_social                                              hpz_paciente_nota_trabajo_social[]
  hpz_patologia_estudios                                                        hpz_patologia_estudios[]

  @@index([id_cama], map: "hpz_ingreso_hospitalario_id_cama_foreign")
  @@index([id_clue_atencion], map: "hpz_ingreso_hospitalario_id_clue_atencion_foreign")
  @@index([id_clue_contrareferencia], map: "hpz_ingreso_hospitalario_id_clue_contrareferencia_foreign")
  @@index([id_clue_referencia], map: "hpz_ingreso_hospitalario_id_clue_referencia_foreign")
  @@index([id_codigo_urgencia], map: "hpz_ingreso_hospitalario_id_codigo_urgencia_foreign")
  @@index([id_diagnostico], map: "hpz_ingreso_hospitalario_id_diagnostico_foreign")
  @@index([id_especialidad], map: "hpz_ingreso_hospitalario_id_especialidad_foreign")
  @@index([id_medico_contrarefiere], map: "hpz_ingreso_hospitalario_id_medico_contrarefiere_foreign")
  @@index([id_medico], map: "hpz_ingreso_hospitalario_id_medico_foreign")
  @@index([id_nivel], map: "hpz_ingreso_hospitalario_id_nivel_foreign")
  @@index([id_paciente], map: "hpz_ingreso_hospitalario_id_paciente_foreign")
  @@index([id_programa], map: "hpz_ingreso_hospitalario_id_programa_foreign")
  @@index([id_user_confirmacion], map: "hpz_ingreso_hospitalario_id_user_confirmacion_foreign")
  @@index([id_user], map: "hpz_ingreso_hospitalario_id_user_foreign")
  @@index([id_via_ingreso], map: "hpz_ingreso_hospitalario_id_via_ingreso_foreign")
}

model hpz_ingreso_nom046 {
  id                       Int                      @id @default(autoincrement()) @db.UnsignedInt
  folio_oficio             String?
  numero_carpeta           String?
  observaciones            String?                  @db.Text
  id_ingreso               Int                      @db.UnsignedInt
  created_at               DateTime?                @db.Timestamp(0)
  updated_at               DateTime?                @db.Timestamp(0)
  deleted_at               DateTime?                @db.Timestamp(0)
  hpz_ingreso_hospitalario hpz_ingreso_hospitalario @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_ingreso_nom046_id_ingreso_foreign")

  @@index([id_ingreso], map: "hpz_ingreso_nom046_id_ingreso_foreign")
}

model hpz_ingreso_signos_vitales {
  id                                                  BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  tension_arterial_sistolica                          Int?
  tension_arterial_diastolica                         Int?
  frecuencia_cardiaca                                 Int?
  frecuencia_respiratoria                             Int?
  peso                                                Int?
  talla                                               Int?
  temperatura                                         Decimal?                   @db.Decimal(10, 2)
  uresis                                              Decimal?                   @db.Decimal(10, 2)
  glucemia_capilar                                    Int?
  saturacion_parcial_oxigeno                          Int?
  cancelacion                                         String?                    @db.Text
  id_ingreso                                          Int                        @db.UnsignedInt
  id_user                                             Int?                       @db.UnsignedInt
  id_autorizo                                         Int?                       @db.UnsignedInt
  id_cancelo                                          Int?                       @db.UnsignedInt
  created_at                                          DateTime?                  @db.Timestamp(0)
  updated_at                                          DateTime?                  @db.Timestamp(0)
  users_hpz_ingreso_signos_vitales_id_autorizoTousers users?                     @relation("hpz_ingreso_signos_vitales_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_signos_vitales_id_autorizo_foreign")
  users_hpz_ingreso_signos_vitales_id_canceloTousers  users?                     @relation("hpz_ingreso_signos_vitales_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_signos_vitales_id_cancelo_foreign")
  hpz_ingreso_hospitalario                            hpz_ingreso_hospitalario   @relation(fields: [id_ingreso], references: [id], onUpdate: Restrict, map: "hpz_ingreso_signos_vitales_id_ingreso_foreign")
  users_hpz_ingreso_signos_vitales_id_userTousers     users?                     @relation("hpz_ingreso_signos_vitales_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_ingreso_signos_vitales_id_user_foreign")
  hpz_paciente_nota_medica                            hpz_paciente_nota_medica[]

  @@index([id_autorizo], map: "hpz_ingreso_signos_vitales_id_autorizo_foreign")
  @@index([id_cancelo], map: "hpz_ingreso_signos_vitales_id_cancelo_foreign")
  @@index([id_ingreso], map: "hpz_ingreso_signos_vitales_id_ingreso_foreign")
  @@index([id_user], map: "hpz_ingreso_signos_vitales_id_user_foreign")
}

model hpz_medicamento_ministracion {
  id                                                    BigInt                       @id @default(autoincrement()) @db.UnsignedBigInt
  id_medicamento                                        BigInt?                      @db.UnsignedBigInt
  fecha_suministracion                                  DateTime                     @db.DateTime(0)
  observaciones                                         String?                      @db.Text
  id_user                                               Int?                         @db.UnsignedInt
  id_autorizo                                           Int?                         @db.UnsignedInt
  id_cancelo                                            Int?                         @db.UnsignedInt
  created_at                                            DateTime?                    @db.Timestamp(0)
  updated_at                                            DateTime?                    @db.Timestamp(0)
  deleted_at                                            DateTime?                    @db.Timestamp(0)
  users_hpz_medicamento_ministracion_id_autorizoTousers users?                       @relation("hpz_medicamento_ministracion_id_autorizoTousers", fields: [id_autorizo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_medicamento_ministracion_id_autorizo_foreign")
  users_hpz_medicamento_ministracion_id_canceloTousers  users?                       @relation("hpz_medicamento_ministracion_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_medicamento_ministracion_id_cancelo_foreign")
  hpz_indicacion_medicamentos                           hpz_indicacion_medicamentos? @relation(fields: [id_medicamento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_medicamento_ministracion_id_medicamento_foreign")
  users_hpz_medicamento_ministracion_id_userTousers     users?                       @relation("hpz_medicamento_ministracion_id_userTousers", fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_medicamento_ministracion_id_user_foreign")

  @@index([id_autorizo], map: "hpz_medicamento_ministracion_id_autorizo_foreign")
  @@index([id_cancelo], map: "hpz_medicamento_ministracion_id_cancelo_foreign")
  @@index([id_medicamento], map: "hpz_medicamento_ministracion_id_medicamento_foreign")
  @@index([id_user], map: "hpz_medicamento_ministracion_id_user_foreign")
}

model hpz_nivel_historial {
  id            Int          @id @default(autoincrement()) @db.UnsignedInt
  id_paciente   Int          @db.UnsignedInt
  id_nivel      Int          @db.UnsignedInt
  caso          Int          @default(1)
  observaciones String?      @db.Text
  created_at    DateTime?    @db.Timestamp(0)
  updated_at    DateTime?    @db.Timestamp(0)
  cat_niveles   cat_niveles  @relation(fields: [id_nivel], references: [id], onUpdate: Restrict, map: "hpz_nivel_historial_id_nivel_foreign")
  hpz_paciente  hpz_paciente @relation(fields: [id_paciente], references: [id], onUpdate: Restrict, map: "hpz_nivel_historial_id_paciente_foreign")

  @@index([id_nivel], map: "hpz_nivel_historial_id_nivel_foreign")
  @@index([id_paciente], map: "hpz_nivel_historial_id_paciente_foreign")
}

model hpz_nota_alta_medica {
  id                          BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  motivo                      String?                  @db.VarChar(100)
  otro_motivo                 String?                  @db.Text
  cirugias                    String?                  @db.Text
  estudios_realizados         String?                  @db.Text
  tratamiento_global          String?                  @db.Text
  tratamiento_egreso          String?                  @db.Text
  problemas_clinicos_resolver String?                  @db.Text
  atencion_factores_riesgo    String?                  @db.Text
  pronostico_egreso           String?                  @db.Text
  proximas_citas              String?                  @db.Text
  alta_medica_fecha           DateTime?                @db.DateTime(0)
  id_nota                     BigInt                   @db.UnsignedBigInt
  created_at                  DateTime?                @db.Timestamp(0)
  updated_at                  DateTime?                @db.Timestamp(0)
  deleted_at                  DateTime?                @db.Timestamp(0)
  hpz_paciente_nota_medica    hpz_paciente_nota_medica @relation(fields: [id_nota], references: [id], onUpdate: Restrict, map: "hpz_nota_alta_medica_id_nota_foreign")

  @@index([id_nota], map: "hpz_nota_alta_medica_id_nota_foreign")
}

model hpz_notas_diagnosticos {
  id                       BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  id_nota                  BigInt                   @db.UnsignedBigInt
  id_diagnostico           Int                      @db.UnsignedInt
  created_at               DateTime?                @db.Timestamp(0)
  updated_at               DateTime?                @db.Timestamp(0)
  hpz_dx_historial         hpz_dx_historial         @relation(fields: [id_diagnostico], references: [id], onUpdate: Restrict, map: "hpz_notas_diagnosticos_id_diagnostico_foreign")
  hpz_paciente_nota_medica hpz_paciente_nota_medica @relation(fields: [id_nota], references: [id], onUpdate: Restrict, map: "hpz_notas_diagnosticos_id_nota_foreign")

  @@index([id_diagnostico], map: "hpz_notas_diagnosticos_id_diagnostico_foreign")
  @@index([id_nota], map: "hpz_notas_diagnosticos_id_nota_foreign")
}

model hpz_paciente {
  id                               Int                                @id @default(autoincrement()) @db.UnsignedInt
  expediente                       String                             @db.Char(10)
  num_seguridad_social             String?
  tipo_paciente                    Boolean                            @default(false)
  estatus                          Boolean                            @default(true)
  capasits                         Boolean                            @default(false)
  expediente_fisico                Boolean                            @default(false)
  expediente_fisico_elaboro        String?
  expediente_fisico_fecha          DateTime?                          @db.DateTime(0)
  atencion_prioritaria             hpz_paciente_atencion_prioritaria
  migrado                          Boolean?
  id_nivel                         Int                                @db.UnsignedInt
  id_persona                       Int                                @db.UnsignedInt
  id_subrogado                     Int?                               @db.UnsignedInt
  created_user                     String?
  created_at                       DateTime?                          @db.Timestamp(0)
  updated_at                       DateTime?                          @db.Timestamp(0)
  deleted_at                       DateTime?                          @db.Timestamp(0)
  hcl_historia_clinica             hcl_historia_clinica[]
  hpz_ingreso_consulta             hpz_ingreso_consulta[]
  hpz_ingreso_hospitalario         hpz_ingreso_hospitalario[]
  hpz_nivel_historial              hpz_nivel_historial[]
  cat_niveles                      cat_niveles                        @relation(fields: [id_nivel], references: [id], onUpdate: Restrict, map: "hpz_paciente_id_nivel_foreign")
  cmp_persona                      cmp_persona                        @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "hpz_paciente_id_persona_foreign")
  cat_subrogados                   cat_subrogados?                    @relation(fields: [id_subrogado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_id_subrogado_foreign")
  hpz_paciente_est_socioeconomico  hpz_paciente_est_socioeconomico[]
  hpz_paciente_nota_medica         hpz_paciente_nota_medica[]
  hpz_paciente_nota_trabajo_social hpz_paciente_nota_trabajo_social[]
  hpz_patologia_estudios           hpz_patologia_estudios[]
  inc_eventos_adversos             inc_eventos_adversos[]

  @@index([id_nivel], map: "hpz_paciente_id_nivel_foreign")
  @@index([id_persona], map: "hpz_paciente_id_persona_foreign")
  @@index([id_subrogado], map: "hpz_paciente_id_subrogado_foreign")
}

model hpz_paciente_auxiliares_diagnostico {
  id                                                                    BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  tipo                                                                  String                          @db.VarChar(100)
  atencion                                                              String                          @db.VarChar(100)
  prioridad                                                             String                          @db.VarChar(100)
  observaciones                                                         String?                         @db.Text
  observaciones_laboratorio                                             String?                         @db.Text
  estatus                                                               String                          @db.VarChar(100)
  estatus_caja                                                          String                          @db.VarChar(100)
  motivo                                                                String?                         @db.Text
  fecha_atencion                                                        DateTime?                       @db.DateTime(0)
  id_ingreso                                                            Int?                            @db.UnsignedInt
  id_ubicacion                                                          Int?                            @db.UnsignedInt
  id_especialidad                                                       Int?                            @db.UnsignedInt
  id_user                                                               Int                             @db.UnsignedInt
  id_user_confirmacion                                                  Int                             @db.UnsignedInt
  created_at                                                            DateTime?                       @db.Timestamp(0)
  updated_at                                                            DateTime?                       @db.Timestamp(0)
  deleted_at                                                            DateTime?                       @db.Timestamp(0)
  hpz_auxiliares_dx_comentarios                                         hpz_auxiliares_dx_comentarios[]
  cat_especialidades                                                    cat_especialidades?             @relation(fields: [id_especialidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_auxiliares_diagnostico_id_especialidad_foreign")
  hpz_ingreso_hospitalario                                              hpz_ingreso_hospitalario?       @relation(fields: [id_ingreso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_auxiliares_diagnostico_id_ingreso_foreign")
  hpz_cama_historial                                                    hpz_cama_historial?             @relation(fields: [id_ubicacion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_auxiliares_diagnostico_id_ubicacion_foreign")
  users_hpz_paciente_auxiliares_diagnostico_id_user_confirmacionTousers users                           @relation("hpz_paciente_auxiliares_diagnostico_id_user_confirmacionTousers", fields: [id_user_confirmacion], references: [id], onUpdate: Restrict, map: "hpz_paciente_auxiliares_diagnostico_id_user_confirmacion_foreign")
  users_hpz_paciente_auxiliares_diagnostico_id_userTousers              users                           @relation("hpz_paciente_auxiliares_diagnostico_id_userTousers", fields: [id_user], references: [id], onUpdate: Restrict, map: "hpz_paciente_auxiliares_diagnostico_id_user_foreign")

  @@index([id_especialidad], map: "hpz_paciente_auxiliares_diagnostico_id_especialidad_foreign")
  @@index([id_ingreso], map: "hpz_paciente_auxiliares_diagnostico_id_ingreso_foreign")
  @@index([id_ubicacion], map: "hpz_paciente_auxiliares_diagnostico_id_ubicacion_foreign")
  @@index([id_user_confirmacion], map: "hpz_paciente_auxiliares_diagnostico_id_user_confirmacion_foreign")
  @@index([id_user], map: "hpz_paciente_auxiliares_diagnostico_id_user_foreign")
}

model hpz_paciente_est_socioeconomico {
  id                           Int                @id @default(autoincrement()) @db.UnsignedInt
  ingreso                      Decimal            @default(0.00) @db.Decimal(10, 2)
  num_dependientes             Int                @default(0)
  alimentacion                 Decimal            @default(0.00) @db.Decimal(10, 2)
  renta                        Decimal            @default(0.00) @db.Decimal(10, 2)
  agua                         Decimal            @default(0.00) @db.Decimal(10, 2)
  luz                          Decimal            @default(0.00) @db.Decimal(10, 2)
  telefono                     Decimal            @default(0.00) @db.Decimal(10, 2)
  combustible                  Decimal            @default(0.00) @db.Decimal(10, 2)
  transporte                   Decimal            @default(0.00) @db.Decimal(10, 2)
  educacion                    Decimal            @default(0.00) @db.Decimal(10, 2)
  consumos                     Decimal            @default(0.00) @db.Decimal(10, 2)
  otros                        Decimal            @default(0.00) @db.Decimal(10, 2)
  derechos_reales              Int                @default(0)
  tipo_vivienda                Int                @default(0)
  servicios_publicos           Int                @default(0)
  servicios_intradomiciliarios Int                @default(0)
  material_construccion        Int                @default(0)
  num_dormitorios              Int                @default(0)
  num_personas_dormitorio      Int                @default(0)
  ocupacion_est                Int                @default(0)
  tiempo_tratamiento           Int                @default(0)
  problemas_salud              Int                @default(0)
  estado_salud                 Int                @default(0)
  c_ingresos                   Boolean            @default(false)
  c_domicilio                  Boolean            @default(false)
  c_elector                    Boolean            @default(false)
  c_no_derechohabiencia        Boolean            @default(false)
  c_defuncion                  Boolean            @default(false)
  observaciones                String?            @db.Text
  puntaje_ingreso              Decimal            @default(0.00) @db.Decimal(10, 2)
  puntaje_egreso               Decimal            @default(0.00) @db.Decimal(10, 2)
  puntaje_vivienda             Decimal            @default(0.00) @db.Decimal(10, 2)
  puntaje_ocupacion            Decimal            @default(0.00) @db.Decimal(10, 2)
  puntaje_salud                Decimal            @default(0.00) @db.Decimal(10, 2)
  puntaje_total                Decimal            @default(0.00) @db.Decimal(10, 2)
  id_domicilio_permanente      Int?
  id_domicilio_temporal        Int?
  id_familiar_reponsable       Int?
  modelo_ingreso               String?
  id_ingreso                   Int?
  id_nivel                     Int?               @db.UnsignedInt
  id_paciente                  Int?               @db.UnsignedInt
  id_ocupacion                 Int                @default(1) @db.UnsignedInt
  id_escolaridad               Int?               @db.UnsignedInt
  escolaridad_completa         Boolean            @default(false)
  atencion_prioritaria         String?
  id_elaboro                   Int?               @db.UnsignedInt
  created_at                   DateTime?          @db.Timestamp(0)
  updated_at                   DateTime?          @db.Timestamp(0)
  deleted_at                   DateTime?          @db.Timestamp(0)
  rch_empleados                rch_empleados?     @relation(fields: [id_elaboro], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_est_socioeconomico_id_elaboro_foreign")
  cat_escolaridades            cat_escolaridades? @relation(fields: [id_escolaridad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_est_socioeconomico_id_escolaridad_foreign")
  cat_niveles                  cat_niveles?       @relation(fields: [id_nivel], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_est_socioeconomico_id_nivel_foreign")
  cat_ocupaciones              cat_ocupaciones    @relation(fields: [id_ocupacion], references: [id], onUpdate: Restrict, map: "hpz_paciente_est_socioeconomico_id_ocupacion_foreign")
  hpz_paciente                 hpz_paciente?      @relation(fields: [id_paciente], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_est_socioeconomico_id_paciente_foreign")

  @@index([id_elaboro], map: "hpz_paciente_est_socioeconomico_id_elaboro_foreign")
  @@index([id_escolaridad], map: "hpz_paciente_est_socioeconomico_id_escolaridad_foreign")
  @@index([id_nivel], map: "hpz_paciente_est_socioeconomico_id_nivel_foreign")
  @@index([id_ocupacion], map: "hpz_paciente_est_socioeconomico_id_ocupacion_foreign")
  @@index([id_paciente], map: "hpz_paciente_est_socioeconomico_id_paciente_foreign")
}

model hpz_paciente_nota_medica {
  id                                                         BigInt                      @id @default(autoincrement()) @db.UnsignedBigInt
  grupo                                                      String                      @db.VarChar(100)
  tipo                                                       String                      @db.VarChar(100)
  observaciones                                              String?                     @db.Text
  plan                                                       String?                     @db.Text
  clasificacion                                              String?                     @db.VarChar(50)
  motivo_cancelacion                                         String?                     @db.Text
  ref_urgencia                                               Boolean?
  ref_motivo                                                 String?                     @db.VarChar(250)
  id_referencia                                              Int?                        @db.UnsignedInt
  id_paciente                                                Int?                        @db.UnsignedInt
  id_ingreso                                                 Int?                        @db.UnsignedInt
  id_ubicacion                                               Int?                        @db.UnsignedInt
  id_user                                                    Int                         @db.UnsignedInt
  id_user_confirmacion                                       Int                         @db.UnsignedInt
  id_cancelo                                                 Int?                        @db.UnsignedInt
  id_signos                                                  BigInt?                     @db.UnsignedBigInt
  id_evaloracion                                             Int?
  created_at                                                 DateTime?                   @db.Timestamp(0)
  updated_at                                                 DateTime?                   @db.Timestamp(0)
  deleted_at                                                 DateTime?                   @db.Timestamp(0)
  clasificacion_medico                                       String?
  clasificacion_sistema                                      String?
  clasificacion_triage                                       String?                     @db.VarChar(35)
  hpz_nota_alta_medica                                       hpz_nota_alta_medica[]
  hpz_notas_diagnosticos                                     hpz_notas_diagnosticos[]
  users_hpz_paciente_nota_medica_id_canceloTousers           users?                      @relation("hpz_paciente_nota_medica_id_canceloTousers", fields: [id_cancelo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_nota_medica_id_cancelo_foreign")
  hpz_ingreso_hospitalario                                   hpz_ingreso_hospitalario?   @relation(fields: [id_ingreso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_nota_medica_id_ingreso_foreign")
  hpz_paciente                                               hpz_paciente?               @relation(fields: [id_paciente], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_nota_medica_id_paciente_foreign")
  hpz_ingreso_signos_vitales                                 hpz_ingreso_signos_vitales? @relation(fields: [id_signos], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_nota_medica_id_signos_foreign")
  hpz_cama_historial                                         hpz_cama_historial?         @relation(fields: [id_ubicacion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_nota_medica_id_ubicacion_foreign")
  users_hpz_paciente_nota_medica_id_user_confirmacionTousers users                       @relation("hpz_paciente_nota_medica_id_user_confirmacionTousers", fields: [id_user_confirmacion], references: [id], onUpdate: Restrict, map: "hpz_paciente_nota_medica_id_user_confirmacion_foreign")
  users_hpz_paciente_nota_medica_id_userTousers              users                       @relation("hpz_paciente_nota_medica_id_userTousers", fields: [id_user], references: [id], onUpdate: Restrict, map: "hpz_paciente_nota_medica_id_user_foreign")

  @@index([id_cancelo], map: "hpz_paciente_nota_medica_id_cancelo_foreign")
  @@index([id_ingreso], map: "hpz_paciente_nota_medica_id_ingreso_foreign")
  @@index([id_paciente], map: "hpz_paciente_nota_medica_id_paciente_foreign")
  @@index([id_signos], map: "hpz_paciente_nota_medica_id_signos_foreign")
  @@index([id_ubicacion], map: "hpz_paciente_nota_medica_id_ubicacion_foreign")
  @@index([id_user_confirmacion], map: "hpz_paciente_nota_medica_id_user_confirmacion_foreign")
  @@index([id_user], map: "hpz_paciente_nota_medica_id_user_foreign")
}

model hpz_paciente_nota_trabajo_social {
  id                       BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  observaciones            String?                   @db.Text
  id_paciente              Int?                      @db.UnsignedInt
  id_ingreso               Int?                      @db.UnsignedInt
  id_user                  Int                       @db.UnsignedInt
  created_at               DateTime?                 @db.Timestamp(0)
  updated_at               DateTime?                 @db.Timestamp(0)
  deleted_at               DateTime?                 @db.Timestamp(0)
  hpz_ingreso_hospitalario hpz_ingreso_hospitalario? @relation(fields: [id_ingreso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_nota_trabajo_social_id_ingreso_foreign")
  hpz_paciente             hpz_paciente?             @relation(fields: [id_paciente], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_paciente_nota_trabajo_social_id_paciente_foreign")
  users                    users                     @relation(fields: [id_user], references: [id], onUpdate: Restrict, map: "hpz_paciente_nota_trabajo_social_id_user_foreign")

  @@index([id_ingreso], map: "hpz_paciente_nota_trabajo_social_id_ingreso_foreign")
  @@index([id_paciente], map: "hpz_paciente_nota_trabajo_social_id_paciente_foreign")
  @@index([id_user], map: "hpz_paciente_nota_trabajo_social_id_user_foreign")
}

model hpz_patologia_estudios {
  id                           BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  consecutivo                  Int
  anio                         String                        @db.VarChar(4)
  macroscopica                 String?                       @db.Text
  microscopica                 String?                       @db.Text
  cortes_sobrantes             String?                       @db.Text
  dx_informal                  String?                       @db.Text
  observaciones                String?                       @db.Text
  estatus                      String?                       @db.Text
  revision                     Boolean                       @default(false)
  id_tipo                      Int                           @db.UnsignedInt
  id_procedimiento             Int?                          @db.UnsignedInt
  id_diagnostico               Int?                          @db.UnsignedInt
  id_patologo                  Int?                          @db.UnsignedInt
  id_persona                   Int                           @db.UnsignedInt
  id_paciente                  Int?                          @db.UnsignedInt
  id_ingreso                   Int?                          @db.UnsignedInt
  created_at                   DateTime?                     @db.Timestamp(0)
  updated_at                   DateTime?                     @db.Timestamp(0)
  deleted_at                   DateTime?                     @db.Timestamp(0)
  cat_cie10                    cat_cie10?                    @relation(fields: [id_diagnostico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_patologia_estudios_id_diagnostico_foreign")
  hpz_ingreso_hospitalario     hpz_ingreso_hospitalario?     @relation(fields: [id_ingreso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_patologia_estudios_id_ingreso_foreign")
  hpz_paciente                 hpz_paciente?                 @relation(fields: [id_paciente], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_patologia_estudios_id_paciente_foreign")
  rch_empleados                rch_empleados?                @relation(fields: [id_patologo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_patologia_estudios_id_patologo_foreign")
  cmp_persona                  cmp_persona                   @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "hpz_patologia_estudios_id_persona_foreign")
  cat_patologia_procedimientos cat_patologia_procedimientos? @relation(fields: [id_procedimiento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "hpz_patologia_estudios_id_procedimiento_foreign")
  cat_patologia_tipo_estudio   cat_patologia_tipo_estudio    @relation(fields: [id_tipo], references: [id], onUpdate: Restrict, map: "hpz_patologia_estudios_id_tipo_foreign")

  @@index([id_diagnostico], map: "hpz_patologia_estudios_id_diagnostico_foreign")
  @@index([id_ingreso], map: "hpz_patologia_estudios_id_ingreso_foreign")
  @@index([id_paciente], map: "hpz_patologia_estudios_id_paciente_foreign")
  @@index([id_patologo], map: "hpz_patologia_estudios_id_patologo_foreign")
  @@index([id_persona], map: "hpz_patologia_estudios_id_persona_foreign")
  @@index([id_procedimiento], map: "hpz_patologia_estudios_id_procedimiento_foreign")
  @@index([id_tipo], map: "hpz_patologia_estudios_id_tipo_foreign")
}

model inc_eventos_adversos {
  id                 BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  folio              String       @db.VarChar(10)
  persona_notifica   String       @default("NO ESPECIFICADO") @db.VarChar(100)
  persona_reporta    String       @default("NO ESPECIFICADO") @db.VarChar(100)
  fecha_evento       DateTime     @db.DateTime(0)
  pregunta1          String       @default("NO")
  pregunta2          String
  pregunta3          String
  pregunta4          String
  pregunta5          String
  descripcion_evento String       @db.Text
  pregunta7_otro     String
  pregunta8          String       @default("NO")
  pregunta9          String
  pregunta10         String
  id_paciente        Int          @db.UnsignedInt
  created_at         DateTime?    @db.Timestamp(0)
  updated_at         DateTime?    @db.Timestamp(0)
  hpz_paciente       hpz_paciente @relation(fields: [id_paciente], references: [id], onUpdate: Restrict, map: "inc_eventos_adversos_id_paciente_foreign")

  @@index([id_paciente], map: "inc_eventos_adversos_id_paciente_foreign")
}

model int_menu {
  id_menu    Int       @id @default(autoincrement()) @db.UnsignedInt
  nombre     String
  icono      String
  slug       String    @unique(map: "int_menu_slug_unique") @db.VarChar(150)
  parent     Int       @default(0) @db.UnsignedInt
  order      Int?      @db.SmallInt
  enabled    Boolean   @default(true)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  id_page    Int?      @db.UnsignedInt
  int_page   int_page? @relation(fields: [id_page], references: [id_page], onDelete: Restrict, onUpdate: Restrict, map: "int_menu_id_page_foreign")

  @@index([id_page], map: "int_menu_id_page_foreign")
}

model int_page {
  id_page    Int              @id @default(autoincrement()) @db.UnsignedInt
  titulo     String
  contenido  String           @db.Text
  imagen     String?
  slug       String           @unique(map: "int_page_slug_unique")
  estatus    int_page_estatus @default(PUBLICADO)
  created_at DateTime?        @db.Timestamp(0)
  updated_at DateTime?        @db.Timestamp(0)
  deleted_at DateTime?        @db.Timestamp(0)
  int_menu   int_menu[]
}

model inv_adquisiciones {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  tipo_adquisicion String
  created_at       DateTime?          @db.Timestamp(0)
  updated_at       DateTime?          @db.Timestamp(0)
  deleted_at       DateTime?          @db.Timestamp(0)
  inv_bienes       inv_bienes[]
  inv_bienes_corte inv_bienes_corte[]
}

model inv_bienes {
  id                    BigInt                  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  clave_cae             String                  @unique(map: "clave_cae")
  num_bien              String
  id_sesver             String?                 @db.VarChar(50)
  fecha_entrega         DateTime?               @db.Date
  fecha_oficio_baja     DateTime?               @db.Date
  oficio_baja           String?
  motivo_baja           String?                 @db.Text
  inventariado          DateTime?               @db.Date
  status_bien           String                  @db.VarChar(30)
  doc_fecha             DateTime?               @db.Date
  doc_num               String?
  doc_precio            Float?
  doc_folio             String?                 @db.VarChar(30)
  doc_proveedor         String?                 @db.VarChar(200)
  des_marca             String?                 @db.VarChar(50)
  des_modelo            String?                 @db.VarChar(50)
  des_num_serie         String?                 @db.VarChar(50)
  des_num_catalogo      String?                 @db.VarChar(15)
  des_medidas           String?                 @db.VarChar(20)
  des_estructura        String?
  des_color             String?                 @db.VarChar(30)
  des_nombre            String?
  des_num_charola       String?                 @db.VarChar(50)
  des_observaciones     String?                 @db.Text
  id_tipo_mueble        BigInt?                 @db.UnsignedBigInt
  id_ubicacion          BigInt?                 @db.UnsignedBigInt
  id_doc_tipo           BigInt?                 @db.UnsignedBigInt
  id_doc_adquisicion    BigInt?                 @db.UnsignedBigInt
  id_doc_valuacion      BigInt?                 @db.UnsignedBigInt
  id_doc_programa       Int?                    @db.UnsignedInt
  id_des_especialidad   BigInt?                 @db.UnsignedBigInt
  id_capitulo           BigInt?                 @db.UnsignedBigInt
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  deleted_at            DateTime?               @db.Timestamp(0)
  activo_fijo           Int?
  inv_cat_mueble        inv_cat_mueble?         @relation(fields: [id_tipo_mueble], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_1")
  inv_cat_ubicaciones   inv_cat_ubicaciones?    @relation(fields: [id_ubicacion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_2")
  inv_tipo_documento    inv_tipo_documento?     @relation(fields: [id_doc_tipo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_3")
  inv_adquisiciones     inv_adquisiciones?      @relation(fields: [id_doc_adquisicion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_4")
  inv_valuaciones       inv_valuaciones?        @relation(fields: [id_doc_valuacion], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_5")
  cat_programas         cat_programas?          @relation(fields: [id_doc_programa], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_6")
  inv_cat_especialidad  inv_cat_especialidad?   @relation(fields: [id_des_especialidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_7")
  inv_capitulos         inv_capitulos?          @relation(fields: [id_capitulo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_ibfk_8")
  inv_bienes_corte      inv_bienes_corte[]
  inv_bienes_resguardos inv_bienes_resguardos[]
  inv_elementos_bienes  inv_elementos_bienes[]
  rcf_bienes            rcf_bienes[]

  @@index([id_des_especialidad], map: "id_des_especialidad")
  @@index([id_doc_adquisicion], map: "id_doc_adquisicion")
  @@index([id_doc_programa], map: "id_doc_programa")
  @@index([id_doc_tipo], map: "id_doc_tipo")
  @@index([id_doc_valuacion], map: "id_doc_valuacion")
  @@index([id_tipo_mueble], map: "id_tipo_mueble")
  @@index([id_ubicacion], map: "id_ubicacion")
  @@index([id_capitulo], map: "inv_bienes_ibfk_8")
}

model inv_bienes_corte {
  id                   BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  clave_cae            String
  num_bien             String
  id_sesver            String?
  fecha_entrega        DateTime?            @db.Date
  fecha_oficio_baja    DateTime?            @db.Date
  oficio_baja          String?
  motivo_baja          String?              @db.Text
  status_bien          String
  inventariado         DateTime?            @db.Date
  doc_fecha            DateTime?            @db.Date
  doc_num              String?
  doc_precio           Float?
  doc_folio            String?
  doc_proveedor        String?
  des_marca            String?
  des_modelo           String?
  des_num_serie        String?
  des_num_catalogo     String?
  des_medidas          String?
  des_estructura       String?
  des_color            String?
  des_nombre           String?              @db.VarChar(255)
  des_num_charola      String?
  des_observaciones    String?              @db.Text
  id_tipo_mueble       BigInt               @db.UnsignedBigInt
  id_ubicacion         BigInt               @db.UnsignedBigInt
  id_doc_tipo          BigInt               @db.UnsignedBigInt
  id_doc_adquisicion   BigInt               @db.UnsignedBigInt
  id_doc_valuacion     BigInt               @db.UnsignedBigInt
  id_doc_programa      Int?                 @db.UnsignedInt
  id_des_especialidad  BigInt               @db.UnsignedBigInt
  id_capitulo          BigInt?              @db.UnsignedBigInt
  id_bien              BigInt               @db.UnsignedBigInt
  id_corte             BigInt               @db.UnsignedBigInt
  created_at           DateTime?            @db.Timestamp(0)
  updated_at           DateTime?            @db.Timestamp(0)
  deleted_at           DateTime?            @db.Timestamp(0)
  inv_bienes           inv_bienes           @relation(fields: [id_bien], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_bien_foreign")
  inv_capitulos        inv_capitulos?       @relation(fields: [id_capitulo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_corte_id_capitulo_foreign")
  inv_cat_corte        inv_cat_corte        @relation(fields: [id_corte], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_corte_foreign")
  inv_cat_especialidad inv_cat_especialidad @relation(fields: [id_des_especialidad], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_des_especialidad_foreign")
  inv_adquisiciones    inv_adquisiciones    @relation(fields: [id_doc_adquisicion], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_doc_adquisicion_foreign")
  cat_programas        cat_programas?       @relation(fields: [id_doc_programa], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_corte_id_doc_programa_foreign")
  inv_tipo_documento   inv_tipo_documento   @relation(fields: [id_doc_tipo], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_doc_tipo_foreign")
  inv_valuaciones      inv_valuaciones      @relation(fields: [id_doc_valuacion], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_doc_valuacion_foreign")
  inv_cat_mueble       inv_cat_mueble       @relation(fields: [id_tipo_mueble], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_tipo_mueble_foreign")
  inv_cat_ubicaciones  inv_cat_ubicaciones  @relation(fields: [id_ubicacion], references: [id], onUpdate: Restrict, map: "inv_bienes_corte_id_ubicacion_foreign")

  @@index([id_bien], map: "inv_bienes_corte_id_bien_foreign")
  @@index([id_capitulo], map: "inv_bienes_corte_id_capitulo_foreign")
  @@index([id_corte], map: "inv_bienes_corte_id_corte_foreign")
  @@index([id_des_especialidad], map: "inv_bienes_corte_id_des_especialidad_foreign")
  @@index([id_doc_adquisicion], map: "inv_bienes_corte_id_doc_adquisicion_foreign")
  @@index([id_doc_programa], map: "inv_bienes_corte_id_doc_programa_foreign")
  @@index([id_doc_tipo], map: "inv_bienes_corte_id_doc_tipo_foreign")
  @@index([id_doc_valuacion], map: "inv_bienes_corte_id_doc_valuacion_foreign")
  @@index([id_tipo_mueble], map: "inv_bienes_corte_id_tipo_mueble_foreign")
  @@index([id_ubicacion], map: "inv_bienes_corte_id_ubicacion_foreign")
}

model inv_bienes_resguardos {
  id            BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  id_bien       BigInt         @db.UnsignedBigInt
  id_empleado   Int?           @db.UnsignedInt
  created_at    DateTime?      @db.Timestamp(0)
  updated_at    DateTime?      @db.Timestamp(0)
  deleted_at    DateTime?      @db.Timestamp(0)
  inv_bienes    inv_bienes     @relation(fields: [id_bien], references: [id], onUpdate: Restrict, map: "inv_bienes_resguardos_id_bien_foreign")
  rch_empleados rch_empleados? @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_bienes_resguardos_id_empleado_foreign")

  @@index([id_bien], map: "inv_bienes_resguardos_id_bien_foreign")
  @@index([id_empleado], map: "inv_bienes_resguardos_id_empleado_foreign")
}

model inv_capitulos {
  id                   BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  clave_capitulo       String
  nueva_clave_capitulo String
  capitulo             String             @db.Text
  created_at           DateTime?          @db.Timestamp(0)
  updated_at           DateTime?          @db.Timestamp(0)
  deleted_at           DateTime?          @db.Timestamp(0)
  inv_bienes           inv_bienes[]
  inv_bienes_corte     inv_bienes_corte[]
}

model inv_cat_corte {
  id                 BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  created_at         DateTime?            @db.Timestamp(0)
  updated_at         DateTime?            @db.Timestamp(0)
  deleted_at         DateTime?            @db.Timestamp(0)
  inv_bienes_corte   inv_bienes_corte[]
  inv_corte_empleado inv_corte_empleado[]
}

model inv_cat_departamentos {
  id                        BigInt                      @id @default(autoincrement()) @db.UnsignedBigInt
  nombre                    String
  created_at                DateTime?                   @db.Timestamp(0)
  updated_at                DateTime?                   @db.Timestamp(0)
  deleted_at                DateTime?                   @db.Timestamp(0)
  inv_cat_ubicaciones       inv_cat_ubicaciones[]
  inv_departamento_empleado inv_departamento_empleado[]
}

model inv_cat_especialidad {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  especialidad     String
  created_at       DateTime?          @db.Timestamp(0)
  updated_at       DateTime?          @db.Timestamp(0)
  deleted_at       DateTime?          @db.Timestamp(0)
  inv_bienes       inv_bienes[]
  inv_bienes_corte inv_bienes_corte[]
}

model inv_cat_mueble {
  id                   BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  clave                String
  nombre_mueble        String?
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  deleted_at           DateTime?              @db.Timestamp(0)
  inv_bienes           inv_bienes[]
  inv_bienes_corte     inv_bienes_corte[]
  inv_elementos_bienes inv_elementos_bienes[]
}

model inv_cat_ubicaciones {
  id                    BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  clave                 Int?
  nombre                String
  num_resguardo         Int?
  id_empleado           Int?                   @db.UnsignedInt
  id_departamento       BigInt?                @db.UnsignedBigInt
  created_at            DateTime?              @db.Timestamp(0)
  updated_at            DateTime?              @db.Timestamp(0)
  deleted_at            DateTime?              @db.Timestamp(0)
  puesto                String?                @db.VarChar(255)
  inv_bienes            inv_bienes[]
  inv_bienes_corte      inv_bienes_corte[]
  inv_cat_departamentos inv_cat_departamentos? @relation(fields: [id_departamento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_cat_ubicaciones_id_departamento_foreign")
  rch_empleados         rch_empleados?         @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_cat_ubicaciones_id_empleado_foreign")

  @@index([id_departamento], map: "inv_cat_ubicaciones_id_departamento_foreign")
  @@index([id_empleado], map: "inv_cat_ubicaciones_id_empleado_foreign")
}

model inv_corte_empleado {
  id            BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  id_corte      BigInt         @db.UnsignedBigInt
  id_empleado   Int?           @db.UnsignedInt
  id_puesto     Int            @db.UnsignedInt
  created_at    DateTime?      @db.Timestamp(0)
  updated_at    DateTime?      @db.Timestamp(0)
  deleted_at    DateTime?      @db.Timestamp(0)
  inv_cat_corte inv_cat_corte  @relation(fields: [id_corte], references: [id], onUpdate: Restrict, map: "inv_corte_empleado_id_corte_foreign")
  rch_empleados rch_empleados? @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_corte_empleado_id_empleado_foreign")
  cat_puestos   cat_puestos    @relation(fields: [id_puesto], references: [id], onUpdate: Restrict, map: "inv_corte_empleado_id_puesto_foreign")

  @@index([id_corte], map: "inv_corte_empleado_id_corte_foreign")
  @@index([id_empleado], map: "inv_corte_empleado_id_empleado_foreign")
  @@index([id_puesto], map: "inv_corte_empleado_id_puesto_foreign")
}

model inv_departamento_empleado {
  id                    BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  id_empleado           Int                   @db.UnsignedInt
  id_departamento       BigInt                @db.UnsignedBigInt
  created_at            DateTime?             @db.Timestamp(0)
  updated_at            DateTime?             @db.Timestamp(0)
  deleted_at            DateTime?             @db.Timestamp(0)
  inv_cat_departamentos inv_cat_departamentos @relation(fields: [id_departamento], references: [id], onUpdate: Restrict, map: "inv_departamento_empleado_id_departamento_foreign")
  rch_empleados         rch_empleados         @relation(fields: [id_empleado], references: [id], onUpdate: Restrict, map: "inv_departamento_empleado_id_empleado_foreign")

  @@index([id_departamento], map: "inv_departamento_empleado_id_departamento_foreign")
  @@index([id_empleado], map: "inv_departamento_empleado_id_empleado_foreign")
}

model inv_elementos_bienes {
  id               BigInt           @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  clave_cae        String?          @unique(map: "clave_cae")
  num_elemento     String?          @db.VarChar(30)
  status_bien      String?          @db.VarChar(30)
  des_marca        String?          @db.VarChar(50)
  des_modelo       String?          @db.VarChar(30)
  des_num_serie    String?          @db.VarChar(50)
  des_num_catalogo String?          @db.VarChar(30)
  des_medidas      String?          @db.VarChar(20)
  des_estructura   String?
  des_color        String?          @db.VarChar(30)
  des_nombre       String?
  id_ubicacion     Int?             @db.UnsignedInt
  id_tipo_mueble   BigInt?          @db.UnsignedBigInt
  id_bien          BigInt?          @db.UnsignedBigInt
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  deleted_at       DateTime?        @db.Timestamp(0)
  cat_ubicaciones  cat_ubicaciones? @relation(fields: [id_ubicacion], references: [id_ubicacion], onDelete: Restrict, onUpdate: Restrict, map: "inv_elementos_bienes_ibfk_1")
  inv_cat_mueble   inv_cat_mueble?  @relation(fields: [id_tipo_mueble], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_elementos_bienes_ibfk_2")
  inv_bienes       inv_bienes?      @relation(fields: [id_bien], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "inv_elementos_bienes_ibfk_3")

  @@index([id_bien], map: "id_bien")
  @@index([id_tipo_mueble], map: "id_tipo_mueble")
  @@index([id_ubicacion], map: "id_ubicacion")
}

model inv_tipo_documento {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  tipoDocumento    String
  created_at       DateTime?          @db.Timestamp(0)
  updated_at       DateTime?          @db.Timestamp(0)
  deleted_at       DateTime?          @db.Timestamp(0)
  inv_bienes       inv_bienes[]
  inv_bienes_corte inv_bienes_corte[]
}

model inv_valuaciones {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  tipo_valuacion   String
  created_at       DateTime?          @db.Timestamp(0)
  updated_at       DateTime?          @db.Timestamp(0)
  deleted_at       DateTime?          @db.Timestamp(0)
  inv_bienes       inv_bienes[]
  inv_bienes_corte inv_bienes_corte[]
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String
  batch     Int
}

model model_has_permissions {
  permission_id Int         @db.UnsignedInt
  model_type    String
  model_id      BigInt      @db.UnsignedBigInt
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "model_has_permissions_permission_id_foreign")

  @@id([permission_id, model_id, model_type])
  @@index([model_type, model_id], map: "model_has_permissions_model_type_model_id_index")
}

model model_has_roles {
  role_id    Int    @db.UnsignedInt
  model_type String
  model_id   BigInt @db.UnsignedBigInt
  roles      roles  @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "model_has_roles_role_id_foreign")

  @@id([role_id, model_id, model_type])
  @@index([model_type, model_id], map: "model_has_roles_model_type_model_id_index")
}

model nut_cat_horarios_comedor {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  id_horario     Int
  nombre         String    @db.VarChar(50)
  hora_inicio    DateTime  @db.DateTime(0)
  hora_fin       DateTime  @db.DateTime(0)
  hora_extendida DateTime? @db.DateTime(0)
  status         Int
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  deleted_at     DateTime? @db.Timestamp(0)
}

model nut_cat_motivos {
  id         Int       @id @default(autoincrement())
  nombre     String?   @db.VarChar(50)
  created_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model nut_pase_comedor {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  id_tipoPersona BigInt?
  tipo_personal  String?   @db.VarChar(50)
  id_empleado    BigInt?
  id_horario     BigInt?
  fecha          DateTime  @db.DateTime(0)
  registro       String?   @db.VarChar(10)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  deleted_at     DateTime? @db.Timestamp(0)
}

model nut_reg_autorizacion {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  id_empleado   BigInt?
  id_horario    BigInt?
  fecha_inicio  DateTime  @db.DateTime(0)
  fecha_fin     DateTime  @db.DateTime(0)
  id_motivo     BigInt    @default(0)
  id_autorizo   BigInt    @default(0)
  observaciones String    @db.Text
  username      String?   @db.VarChar(50)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)
}

model oauth_access_tokens {
  id         String    @id @db.VarChar(100)
  user_id    BigInt?   @db.UnsignedBigInt
  client_id  BigInt    @db.UnsignedBigInt
  name       String?
  scopes     String?   @db.Text
  revoked    Boolean
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  expires_at DateTime? @db.DateTime(0)

  @@index([user_id], map: "oauth_access_tokens_user_id_index")
}

model oauth_auth_codes {
  id         String    @id @db.VarChar(100)
  user_id    BigInt    @db.UnsignedBigInt
  client_id  BigInt    @db.UnsignedBigInt
  scopes     String?   @db.Text
  revoked    Boolean
  expires_at DateTime? @db.DateTime(0)

  @@index([user_id], map: "oauth_auth_codes_user_id_index")
}

model oauth_clients {
  id                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                BigInt?   @db.UnsignedBigInt
  name                   String
  secret                 String?   @db.VarChar(100)
  provider               String?
  redirect               String    @db.Text
  personal_access_client Boolean
  password_client        Boolean
  revoked                Boolean
  created_at             DateTime? @db.Timestamp(0)
  updated_at             DateTime? @db.Timestamp(0)

  @@index([user_id], map: "oauth_clients_user_id_index")
}

model oauth_personal_access_clients {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  client_id  BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model oauth_refresh_tokens {
  id              String    @id @db.VarChar(100)
  access_token_id String    @db.VarChar(100)
  revoked         Boolean
  expires_at      DateTime? @db.DateTime(0)

  @@index([access_token_id], map: "oauth_refresh_tokens_access_token_id_index")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model password_resets {
  email      String
  token      String
  created_at DateTime? @db.Timestamp(0)

  @@index([email], map: "password_resets_email_index")
  @@ignore
}

model permissions {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  name                  String
  guard_name            String
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  model_has_permissions model_has_permissions[]
  role_has_permissions  role_has_permissions[]
}

model rcf_bienes {
  id                  BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  condicion_equipo    String
  estado_situacional  String
  instructivo_trabajo String?           @db.Text
  observaciones       String?           @db.Text
  id_bien             BigInt            @db.UnsignedBigInt
  id_ubicacion        Int?              @db.UnsignedInt
  status              String?           @db.VarChar(10)
  id_lista            BigInt?           @db.UnsignedBigInt
  created_at          DateTime?         @db.Timestamp(0)
  updated_at          DateTime?         @db.Timestamp(0)
  deleted_at          DateTime?         @db.Timestamp(0)
  inv_bienes          inv_bienes        @relation(fields: [id_bien], references: [id], onUpdate: Restrict, map: "rcf_bienes_id_bien_foreign")
  rcf_listas          rcf_listas?       @relation(fields: [id_lista], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_bienes_id_lista_foreign")
  cat_ubicaciones     cat_ubicaciones?  @relation(fields: [id_ubicacion], references: [id_ubicacion], onDelete: Restrict, onUpdate: Restrict, map: "rcf_bienes_id_ubicacion_foreign")
  rcf_incidencias     rcf_incidencias[]

  @@index([id_bien], map: "rcf_bienes_id_bien_foreign")
  @@index([id_lista], map: "rcf_bienes_id_lista_foreign")
  @@index([id_ubicacion], map: "rcf_bienes_id_ubicacion_foreign")
}

model rcf_empleado_incidencia {
  id              BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  id_empleado     Int?            @db.UnsignedInt
  id_incidencia   BigInt          @db.UnsignedBigInt
  deleted_at      DateTime?       @db.Timestamp(0)
  created_at      DateTime?       @db.Timestamp(0)
  updated_at      DateTime?       @db.Timestamp(0)
  rch_empleados   rch_empleados?  @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_empleado_incidencia_id_empleado_foreign")
  rcf_incidencias rcf_incidencias @relation(fields: [id_incidencia], references: [id], onUpdate: Restrict, map: "rcf_empleado_incidencia_id_incidencia_foreign")

  @@index([id_empleado], map: "rcf_empleado_incidencia_id_empleado_foreign")
  @@index([id_incidencia], map: "rcf_empleado_incidencia_id_incidencia_foreign")
}

model rcf_empleado_kardex {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  id_kardex     Int?           @db.UnsignedInt
  id_empleado   Int?           @db.UnsignedInt
  created_at    DateTime?      @db.Timestamp(0)
  updated_at    DateTime?      @db.Timestamp(0)
  rch_empleados rch_empleados? @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_empleado_kardex_id_empleado_foreign")
  rcf_kardex    rcf_kardex?    @relation(fields: [id_kardex], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_empleado_kardex_id_kardex_foreign")

  @@index([id_empleado], map: "rcf_empleado_kardex_id_empleado_foreign")
  @@index([id_kardex], map: "rcf_empleado_kardex_id_kardex_foreign")
}

model rcf_incidencias {
  id                      BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  fecha_inicio            DateTime?                 @db.Date
  fecha_fin               DateTime?                 @db.Date
  fecha_preventivo        DateTime?                 @db.Date
  orden_servicio          String?
  no_vale                 String?
  servicio                rcf_incidencias_servicio?
  descripcion_actividad   String?                   @db.LongText
  mano_obra               Float?
  refacciones             Float?
  total                   Float?
  id_lista                BigInt?                   @db.UnsignedBigInt
  id_registro             BigInt                    @db.UnsignedBigInt
  id_proveedor            Int?
  id_turno                Int?                      @db.UnsignedInt
  created_at              DateTime?                 @db.Timestamp(0)
  updated_at              DateTime?                 @db.Timestamp(0)
  deleted_at              DateTime?                 @db.Timestamp(0)
  rcf_empleado_incidencia rcf_empleado_incidencia[]
  rcf_listas              rcf_listas?               @relation(fields: [id_lista], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_incidencias_id_lista_foreign")
  rcf_bienes              rcf_bienes                @relation(fields: [id_registro], references: [id], onUpdate: Restrict, map: "rcf_incidencias_id_registro_foreign")
  cat_turnos              cat_turnos?               @relation(fields: [id_turno], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_incidencias_id_turno_foreign")

  @@index([id_lista], map: "rcf_incidencias_id_lista_foreign")
  @@index([id_registro], map: "rcf_incidencias_id_registro_foreign")
  @@index([id_turno], map: "rcf_incidencias_id_turno_foreign")
}

model rcf_kardex {
  id                    Int                      @id @default(autoincrement()) @db.UnsignedInt
  fecha_inicio          DateTime?                @db.DateTime(0)
  fecha_fin             DateTime?                @db.DateTime(0)
  fecha_preventivo      DateTime?                @db.DateTime(0)
  orden_servicio        String?
  no_vale               String?
  servicio              rcf_kardex_servicio
  descripcion_actividad String?                  @db.Text
  mano_obra             Decimal?                 @db.Decimal(10, 2)
  refacciones           Decimal?                 @db.Decimal(10, 2)
  total                 Decimal?                 @db.Decimal(10, 2)
  tipo_servicio         rcf_kardex_tipo_servicio
  id_proveedor          Int?                     @db.UnsignedInt
  id_equipo             Int?                     @db.UnsignedInt
  id_turno              Int?                     @db.UnsignedInt
  created_at            DateTime?                @db.Timestamp(0)
  updated_at            DateTime?                @db.Timestamp(0)
  deleted_at            DateTime?                @db.Timestamp(0)
  rcf_empleado_kardex   rcf_empleado_kardex[]
  cat_equipos           cat_equipos?             @relation(fields: [id_equipo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_kardex_id_equipo_foreign")
  cat_proveedores       cat_proveedores?         @relation(fields: [id_proveedor], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_kardex_id_proveedor_foreign")
  cat_turnos            cat_turnos?              @relation(fields: [id_turno], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_kardex_id_turno_foreign")

  @@index([id_equipo], map: "rcf_kardex_id_equipo_foreign")
  @@index([id_proveedor], map: "rcf_kardex_id_proveedor_foreign")
  @@index([id_turno], map: "rcf_kardex_id_turno_foreign")
}

model rcf_listas {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  nombre          String
  tipo            String
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  rcf_bienes      rcf_bienes[]
  rcf_incidencias rcf_incidencias[]
}

model rcf_resguardo {
  id              Int                @id @default(autoincrement()) @db.UnsignedInt
  tipo            rcf_resguardo_tipo
  fecha_resguardo DateTime?          @db.DateTime(0)
  observaciones   String?            @db.Text
  id_equipo       Int?               @db.UnsignedInt
  id_empleado     Int?               @db.UnsignedInt
  created_at      DateTime?          @db.Timestamp(0)
  updated_at      DateTime?          @db.Timestamp(0)
  rch_empleados   rch_empleados?     @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_resguardo_id_empleado_foreign")
  cat_equipos     cat_equipos?       @relation(fields: [id_equipo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rcf_resguardo_id_equipo_foreign")

  @@index([id_empleado], map: "rcf_resguardo_id_empleado_foreign")
  @@index([id_equipo], map: "rcf_resguardo_id_equipo_foreign")
}

model rch_checadas {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  qna        String    @db.Char(4)
  matricula  String    @db.Char(4)
  fecha      String    @db.Char(10)
  incidencia String    @db.Char(3)
  hora       String    @db.Char(5)
  estado     String    @db.Char(1)
  horaper    Decimal   @db.Decimal(4, 2)
  checo      String    @db.Char(1)
  origen     String    @db.Char(1)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model rch_checadas_biometrico {
  id                    Int      @id @default(autoincrement()) @db.UnsignedInt
  EmpleadoAsistenciaId  BigInt
  EmpleadoId            Int      @db.UnsignedInt
  TerminalId            Int      @db.UnsignedInt
  FechaReg              DateTime @db.Date
  HoraReg               DateTime @db.Time(0)
  Anio                  Int      @db.UnsignedInt
  Mes                   Int      @db.TinyInt
  Dia                   Int      @db.TinyInt
  Hora                  Int      @db.TinyInt
  Minuto                Int      @db.TinyInt
  Segundo               Int      @db.TinyInt
  reg                   Bytes    @db.Blob
  FechaAlta             DateTime @db.DateTime(0)
  FechaUltActualizacion DateTime @db.DateTime(0)
  JornadaId             Int
  ToleranciaTipoID      Int      @db.TinyInt
  IncidenciaTipo        Int      @db.TinyInt
}

model rch_empleado_especialidad {
  id                 BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  id_medico          Int?                @db.UnsignedInt
  id_especialidad    Int?                @db.UnsignedInt
  cedula_profesional String?
  created_at         DateTime?           @db.Timestamp(0)
  updated_at         DateTime?           @db.Timestamp(0)
  deleted_at         DateTime?           @db.Timestamp(0)
  cat_especialidades cat_especialidades? @relation(fields: [id_especialidad], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rch_empleado_especialidad_id_especialidad_foreign")
  rch_empleados      rch_empleados?      @relation(fields: [id_medico], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rch_empleado_especialidad_id_medico_foreign")

  @@index([id_especialidad], map: "rch_empleado_especialidad_id_especialidad_foreign")
  @@index([id_medico], map: "rch_empleado_especialidad_id_medico_foreign")
}

model rch_empleado_vacaciones {
  id            BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  id_empleado   Int?           @db.UnsignedInt
  tipo          String         @db.VarChar(20)
  rol           String         @db.VarChar(20)
  fecha_inicio  DateTime       @db.Date
  fecha_fin     DateTime       @db.Date
  created_at    DateTime?      @db.Timestamp(0)
  updated_at    DateTime?      @db.Timestamp(0)
  deleted_at    DateTime?      @db.Timestamp(0)
  rch_empleados rch_empleados? @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rch_empleado_vacaciones_id_empleado_foreign")

  @@index([id_empleado], map: "rch_empleado_vacaciones_id_empleado_foreign")
}

model rch_empleados {
  id                                                                                       Int                               @id @default(autoincrement()) @db.UnsignedInt
  matricula                                                                                Int?
  madre                                                                                    rch_empleados_madre
  hora_entrada                                                                             DateTime                          @db.Time(0)
  hora_salida                                                                              DateTime                          @db.Time(0)
  pago_riesgo                                                                              rch_empleados_pago_riesgo
  cedula_profesional                                                                       String?                           @db.Char(10)
  checa                                                                                    rch_empleados_checa
  cuenta_bancaria                                                                          String?
  activo                                                                                   Boolean                           @default(true)
  fecha_alta                                                                               DateTime?                         @db.DateTime(0)
  fecha_base                                                                               DateTime?                         @db.DateTime(0)
  fecha_baja                                                                               DateTime?                         @db.DateTime(0)
  observaciones                                                                            String                            @db.Text
  motivo_baja                                                                              String?                           @db.Text
  medico                                                                                   String?                           @db.Char(1)
  guardias                                                                                 String?
  nombramiento                                                                             rch_empleados_nombramiento        @default(NO)
  atencion_medica                                                                          String?
  numero_afiliacion                                                                        String?
  foto                                                                                     String?                           @db.VarChar(500)
  id_persona                                                                               Int                               @db.UnsignedInt
  id_tipoempleado                                                                          Int                               @db.UnsignedInt
  id_plaza                                                                                 Int                               @db.UnsignedInt
  id_pension                                                                               Int                               @db.UnsignedInt
  id_tiporecurso                                                                           Int                               @db.UnsignedInt
  id_puesto                                                                                Int                               @db.UnsignedInt
  id_departamento                                                                          Int                               @db.UnsignedInt
  id_turno                                                                                 Int                               @db.UnsignedInt
  id_categoria                                                                             Int                               @db.UnsignedInt
  id_sindicato                                                                             Int                               @db.UnsignedInt
  id_banco                                                                                 Int?                              @db.UnsignedInt
  id_financiamiento                                                                        Int                               @db.UnsignedInt
  id_motivo_baja                                                                           Int                               @db.UnsignedInt
  idUser                                                                                   Int?
  created_at                                                                               DateTime?                         @db.Timestamp(0)
  updated_at                                                                               DateTime?                         @db.Timestamp(0)
  deleted_at                                                                               DateTime?                         @db.Timestamp(0)
  cat_consulta_horarios                                                                    cat_consulta_horarios[]
  cat_departamento_empleado                                                                cat_departamento_empleado[]
  hpz_cama_historial                                                                       hpz_cama_historial[]
  hpz_cateter_instalacion_hpz_cateter_instalacion_id_instaloTorch_empleados                hpz_cateter_instalacion[]         @relation("hpz_cateter_instalacion_id_instaloTorch_empleados")
  hpz_cateter_instalacion_hpz_cateter_instalacion_id_retiroTorch_empleados                 hpz_cateter_instalacion[]         @relation("hpz_cateter_instalacion_id_retiroTorch_empleados")
  hpz_citas_historial                                                                      hpz_citas_historial[]             @ignore
  hpz_dx_historial                                                                         hpz_dx_historial[]
  hpz_indicaciones_medicas_hpz_indicaciones_medicas_id_adscritoTorch_empleados             hpz_indicaciones_medicas[]        @relation("hpz_indicaciones_medicas_id_adscritoTorch_empleados")
  hpz_indicaciones_medicas_hpz_indicaciones_medicas_id_residenteTorch_empleados            hpz_indicaciones_medicas[]        @relation("hpz_indicaciones_medicas_id_residenteTorch_empleados")
  hpz_ingreso_consulta                                                                     hpz_ingreso_consulta[]
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_medico_contrarefiereTorch_empleados hpz_ingreso_hospitalario[]        @relation("hpz_ingreso_hospitalario_id_medico_contrarefiereTorch_empleados")
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_medicoTorch_empleados               hpz_ingreso_hospitalario[]        @relation("hpz_ingreso_hospitalario_id_medicoTorch_empleados")
  hpz_paciente_est_socioeconomico                                                          hpz_paciente_est_socioeconomico[]
  hpz_patologia_estudios                                                                   hpz_patologia_estudios[]
  inv_bienes_resguardos                                                                    inv_bienes_resguardos[]
  inv_cat_ubicaciones                                                                      inv_cat_ubicaciones[]
  inv_corte_empleado                                                                       inv_corte_empleado[]
  inv_departamento_empleado                                                                inv_departamento_empleado[]
  rcf_empleado_incidencia                                                                  rcf_empleado_incidencia[]
  rcf_empleado_kardex                                                                      rcf_empleado_kardex[]
  rcf_resguardo                                                                            rcf_resguardo[]
  rch_empleado_especialidad                                                                rch_empleado_especialidad[]
  rch_empleado_vacaciones                                                                  rch_empleado_vacaciones[]
  cat_bancos                                                                               cat_bancos?                       @relation(fields: [id_banco], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rch_empleados_id_banco_foreign")
  cat_categorias                                                                           cat_categorias                    @relation(fields: [id_categoria], references: [id], onUpdate: Restrict, map: "rch_empleados_id_categoria_foreign")
  cat_departamentos                                                                        cat_departamentos                 @relation(fields: [id_departamento], references: [id], onUpdate: Restrict, map: "rch_empleados_id_departamento_foreign")
  cat_fuentes_financiamiento                                                               cat_fuentes_financiamiento        @relation(fields: [id_financiamiento], references: [id], onUpdate: Restrict, map: "rch_empleados_id_financiamiento_foreign")
  cat_motivos_baja                                                                         cat_motivos_baja                  @relation(fields: [id_motivo_baja], references: [id], onUpdate: Restrict, map: "rch_empleados_id_motivo_baja_foreign")
  cat_pensiones                                                                            cat_pensiones                     @relation(fields: [id_pension], references: [id], onUpdate: Restrict, map: "rch_empleados_id_pension_foreign")
  cmp_persona                                                                              cmp_persona                       @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "rch_empleados_id_persona_foreign")
  cat_plazas                                                                               cat_plazas                        @relation(fields: [id_plaza], references: [id], onUpdate: Restrict, map: "rch_empleados_id_plaza_foreign")
  cat_puestos                                                                              cat_puestos                       @relation(fields: [id_puesto], references: [id], onUpdate: Restrict, map: "rch_empleados_id_puesto_foreign")
  cat_sindicatos                                                                           cat_sindicatos                    @relation(fields: [id_sindicato], references: [id], onUpdate: Restrict, map: "rch_empleados_id_sindicato_foreign")
  cat_tipos_empleado                                                                       cat_tipos_empleado                @relation(fields: [id_tipoempleado], references: [id], onUpdate: Restrict, map: "rch_empleados_id_tipoempleado_foreign")
  cat_tipos_recurso                                                                        cat_tipos_recurso                 @relation(fields: [id_tiporecurso], references: [id], onUpdate: Restrict, map: "rch_empleados_id_tiporecurso_foreign")
  cat_turnos                                                                               cat_turnos                        @relation(fields: [id_turno], references: [id], onUpdate: Restrict, map: "rch_empleados_id_turno_foreign")
  rch_empleados_asignaciones                                                               rch_empleados_asignaciones[]
  rch_empleados_historial_estatus                                                          rch_empleados_historial_estatus[]
  rch_permisos                                                                             rch_permisos[]
  sgl_tarjeton                                                                             sgl_tarjeton[]

  @@index([id_banco], map: "rch_empleados_id_banco_foreign")
  @@index([id_categoria], map: "rch_empleados_id_categoria_foreign")
  @@index([id_departamento], map: "rch_empleados_id_departamento_foreign")
  @@index([id_financiamiento], map: "rch_empleados_id_financiamiento_foreign")
  @@index([id_motivo_baja], map: "rch_empleados_id_motivo_baja_foreign")
  @@index([id_pension], map: "rch_empleados_id_pension_foreign")
  @@index([id_persona], map: "rch_empleados_id_persona_foreign")
  @@index([id_plaza], map: "rch_empleados_id_plaza_foreign")
  @@index([id_puesto], map: "rch_empleados_id_puesto_foreign")
  @@index([id_sindicato], map: "rch_empleados_id_sindicato_foreign")
  @@index([id_tipoempleado], map: "rch_empleados_id_tipoempleado_foreign")
  @@index([id_tiporecurso], map: "rch_empleados_id_tiporecurso_foreign")
  @@index([id_turno], map: "rch_empleados_id_turno_foreign")
}

model rch_empleados_asignaciones {
  id               Int              @id @default(autoincrement()) @db.UnsignedInt
  id_empleado      Int              @db.UnsignedInt
  id_asignacion    Int              @db.UnsignedInt
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  cat_asignaciones cat_asignaciones @relation(fields: [id_asignacion], references: [id], onUpdate: Restrict, map: "rch_empleados_asignaciones_id_asignacion_foreign")
  rch_empleados    rch_empleados    @relation(fields: [id_empleado], references: [id], onUpdate: Restrict, map: "rch_empleados_asignaciones_id_empleado_foreign")

  @@index([id_asignacion], map: "rch_empleados_asignaciones_id_asignacion_foreign")
  @@index([id_empleado], map: "rch_empleados_asignaciones_id_empleado_foreign")
}

model rch_empleados_externos {
  id                    Int               @id @default(autoincrement()) @db.UnsignedInt
  tipo_empleado         String?
  no_personal           String?           @db.Char(7)
  medios_comunicacion   String?
  institucion_educativa String?
  carrera               String?
  fecha_inicio          DateTime?         @db.Date
  fecha_fin             DateTime?         @db.Date
  observaciones         String?           @db.Text
  id_persona            Int               @db.UnsignedInt
  id_departamento       Int               @db.UnsignedInt
  created_at            DateTime?         @db.Timestamp(0)
  updated_at            DateTime?         @db.Timestamp(0)
  deleted_at            DateTime?         @db.Timestamp(0)
  cat_departamentos     cat_departamentos @relation(fields: [id_departamento], references: [id], onUpdate: Restrict, map: "rch_empleados_externos_id_departamento_foreign")
  cmp_persona           cmp_persona       @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "rch_empleados_externos_id_persona_foreign")

  @@index([id_departamento], map: "rch_empleados_externos_id_departamento_foreign")
  @@index([id_persona], map: "rch_empleados_externos_id_persona_foreign")
}

model rch_empleados_historial_cambios {
  id                    Int       @id @default(autoincrement()) @db.UnsignedInt
  primer_apellido       String?
  segundo_apellido      String?
  nombres               String?
  curp                  String?
  rfc                   String?
  fecha_nacimiento      String?
  estado_nacimiento     String?
  sexo                  String?
  id_estadocivil        String?
  matricula             String?
  medios_comunicacion   String?
  madre                 String?
  hora_entrada          DateTime? @db.Time(0)
  hora_salida           DateTime? @db.Time(0)
  pago_riesgo           String?
  cedula_profesional    String?   @db.Char(10)
  checa                 String?
  email                 String?
  email_institucional   String?
  cuenta_bancaria       String?
  activo                Boolean   @default(true)
  fecha_alta            DateTime? @db.DateTime(0)
  fecha_base            DateTime? @db.DateTime(0)
  fecha_baja            DateTime? @db.DateTime(0)
  observaciones         String?   @db.Text
  motivo_baja           String?   @db.Text
  medico                String?   @db.Char(1)
  guardias              String?
  nombramiento          String?
  id_persona            Int?
  id_empleado           Int?
  id_tipoempleado       Int?
  id_plaza              Int?
  id_pension            Int?
  id_tiporecurso        Int?
  id_puesto             Int?
  id_departamento       Int?
  id_turno              Int?
  id_categoria          Int?
  id_sindicato          Int?
  id_banco              Int?
  id_financiamiento     Int?
  id_unidad_medica      Int?
  calle                 String?
  num_interior          String?
  num_exterior          String?
  telefono              String?
  cp                    String?
  id_asentamiento       String?
  entre_calle           String?
  y_calle               String?
  calle_posterior       String?
  descripcion_ubicacion String?
  username              String?
  equipo                String?   @db.Text
  created_at            DateTime? @db.Timestamp(0)
  updated_at            DateTime? @db.Timestamp(0)
}

model rch_empleados_historial_estatus {
  id             BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  activo         Boolean?
  id_empleado    Int           @db.UnsignedInt
  id_motivo_baja Int?
  motivo_baja    String?       @db.Text
  fecha_inicio   DateTime?     @db.Date
  fecha_fin      DateTime?     @db.Date
  idUsuario      Int?
  nick           String?
  created_at     DateTime?     @db.Timestamp(0)
  updated_at     DateTime?     @db.Timestamp(0)
  rch_empleados  rch_empleados @relation(fields: [id_empleado], references: [id], onUpdate: Restrict, map: "rch_empleados_historial_estatus_id_empleado_foreign")

  @@index([id_empleado], map: "rch_empleados_historial_estatus_id_empleado_foreign")
}

model rch_empleados_historial_horarios {
  id            Int       @id @default(autoincrement())
  id_empleado   Int?
  id_turno      Int?
  fecha_inicio  DateTime? @db.Date
  hora_entrada  DateTime? @db.Time(0)
  hora_salida   DateTime? @db.Time(0)
  guardias      String?
  observaciones String?   @db.Text
  idUser        Int?
  nick          String?   @db.VarChar(50)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)
}

model rch_permisos {
  id              Int              @id @default(autoincrement()) @db.UnsignedInt
  folio           Int
  fecha_inicio    DateTime         @db.DateTime(0)
  fecha_fin       DateTime         @db.DateTime(0)
  observaciones   String?          @db.Text
  autorizado      Boolean          @default(false)
  id_empleado     Int?             @db.UnsignedInt
  id_permiso      Int?             @db.UnsignedInt
  id_extension    Int?             @db.UnsignedInt
  created_at      DateTime?        @db.Timestamp(0)
  updated_at      DateTime?        @db.Timestamp(0)
  deleted_at      DateTime?        @db.DateTime(0)
  rch_empleados   rch_empleados?   @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rch_permisos_id_empleado_foreign")
  cat_extensiones cat_extensiones? @relation(fields: [id_extension], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rch_permisos_id_extension_foreign")
  cat_permisos    cat_permisos?    @relation(fields: [id_permiso], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rch_permisos_id_permiso_foreign")

  @@index([id_empleado], map: "rch_permisos_id_empleado_foreign")
  @@index([id_extension], map: "rch_permisos_id_extension_foreign")
  @@index([id_permiso], map: "rch_permisos_id_permiso_foreign")
}

model rch_tipo_empleado_permisos {
  id                 Int                @id @default(autoincrement()) @db.UnsignedInt
  id_tipo_empleado   Int                @db.UnsignedInt
  id_permiso         Int                @db.UnsignedInt
  created_at         DateTime?          @db.Timestamp(0)
  updated_at         DateTime?          @db.Timestamp(0)
  cat_permisos       cat_permisos       @relation(fields: [id_permiso], references: [id], onUpdate: Restrict, map: "rch_tipo_empleado_permisos_id_permiso_foreign")
  cat_tipos_empleado cat_tipos_empleado @relation(fields: [id_tipo_empleado], references: [id], onUpdate: Restrict, map: "rch_tipo_empleado_permisos_id_tipo_empleado_foreign")

  @@index([id_permiso], map: "rch_tipo_empleado_permisos_id_permiso_foreign")
  @@index([id_tipo_empleado], map: "rch_tipo_empleado_permisos_id_tipo_empleado_foreign")
}

model rfn_convenios {
  id                 Int            @id @default(autoincrement()) @db.UnsignedInt
  numero_personal    String
  numero_dependiente String?
  primer_apellido    String
  segundo_apellido   String
  nombres            String
  rfc                String?        @db.Char(50)
  vigencia           DateTime?      @db.Date
  zona               String?
  id_subrogado       Int            @db.UnsignedInt
  created_at         DateTime?      @db.Timestamp(0)
  updated_at         DateTime?      @db.Timestamp(0)
  deleted_at         DateTime?      @db.Timestamp(0)
  cat_subrogados     cat_subrogados @relation(fields: [id_subrogado], references: [id], onUpdate: Restrict, map: "rfn_convenios_id_subrogado_foreign")

  @@index([id_subrogado], map: "rfn_convenios_id_subrogado_foreign")
}

model role_has_permissions {
  permission_id Int         @db.UnsignedInt
  role_id       Int         @db.UnsignedInt
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "role_has_permissions_permission_id_foreign")
  roles         roles       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "role_has_permissions_role_id_foreign")

  @@id([permission_id, role_id])
  @@index([role_id], map: "role_has_permissions_role_id_foreign")
}

model roles {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  name                 String
  guard_name           String
  created_at           DateTime?              @db.Timestamp(0)
  updated_at           DateTime?              @db.Timestamp(0)
  adm_tutoriales_roles adm_tutoriales_roles[]
  model_has_roles      model_has_roles[]
  role_has_permissions role_has_permissions[]
}

model sgl_control_vehicular {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model sgl_tarjeton {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  folio_tarjeton        Int
  id_empleado           Int?                    @db.UnsignedInt
  id_extension          Int?                    @db.UnsignedInt
  telefono              String                  @db.VarChar(10)
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  deleted_at            DateTime?               @db.Timestamp(0)
  rch_empleados         rch_empleados?          @relation(fields: [id_empleado], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sgl_tarjeton_id_empleado_foreign")
  cat_extensiones       cat_extensiones?        @relation(fields: [id_extension], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sgl_tarjeton_id_extension_foreign")
  sgl_tarjeton_vehiculo sgl_tarjeton_vehiculo[]

  @@index([id_empleado], map: "sgl_tarjeton_id_empleado_foreign")
  @@index([id_extension], map: "sgl_tarjeton_id_extension_foreign")
}

model sgl_tarjeton_vehiculo {
  id                    BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  modelo                String?                @db.VarChar(4)
  placas_vehiculo       String
  color                 String
  impreso               String
  observaciones         String?                @db.VarChar(250)
  linea                 String?                @db.VarChar(250)
  id_tarjeton           BigInt?                @db.UnsignedBigInt
  id_marca              BigInt?                @db.UnsignedBigInt
  id_submarca           BigInt?                @db.UnsignedBigInt
  created_at            DateTime?              @db.Timestamp(0)
  updated_at            DateTime?              @db.Timestamp(0)
  deleted_at            DateTime?              @db.Timestamp(0)
  cat_vehiculo_marca    cat_vehiculo_marca?    @relation(fields: [id_marca], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sgl_tarjeton_vehiculo_id_marca_foreign")
  cat_vehiculo_submarca cat_vehiculo_submarca? @relation(fields: [id_submarca], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sgl_tarjeton_vehiculo_id_submarca_foreign")
  sgl_tarjeton          sgl_tarjeton?          @relation(fields: [id_tarjeton], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sgl_tarjeton_vehiculo_id_tarjeton_foreign")

  @@index([id_marca], map: "sgl_tarjeton_vehiculo_id_marca_foreign")
  @@index([id_submarca], map: "sgl_tarjeton_vehiculo_id_submarca_foreign")
  @@index([id_tarjeton], map: "sgl_tarjeton_vehiculo_id_tarjeton_foreign")
}

model sgl_vehiculo {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  id_marca      BigInt?   @db.UnsignedBigInt
  id_tipo       BigInt?   @db.UnsignedBigInt
  id_modelo     BigInt?   @db.UnsignedBigInt
  no_placas     String    @db.VarChar(50)
  no_economico  String    @db.VarChar(50)
  no_inventario String    @db.VarChar(50)
  color         String    @db.VarChar(50)
  km_inicial    Int       @db.UnsignedInt
  observaciones String?   @db.Text
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)
}

model table_cat_horarios_comedor {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model table_nut_pases_comedor {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model table_nut_registros_comedor {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model tic_equipos_computo {
  id                Int          @id @default(autoincrement()) @db.UnsignedInt
  procesador        String
  memoria_ram       String
  disco_duro        String
  sistema_operativo String
  nombre_equipo     String
  sesiones          String
  dominio           String
  ip                String
  tipo_instalacion  String
  propietario       String
  observaciones     String       @db.Text
  id_equipo         Int?         @db.UnsignedInt
  created_at        DateTime?    @db.Timestamp(0)
  updated_at        DateTime?    @db.Timestamp(0)
  deleted_at        DateTime?    @db.Timestamp(0)
  cat_equipos       cat_equipos? @relation(fields: [id_equipo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tic_equipos_computo_id_equipo_foreign")

  @@index([id_equipo], map: "tic_equipos_computo_id_equipo_foreign")
}

model users {
  id                                                                                                  Int                                    @id @default(autoincrement()) @db.UnsignedInt
  name                                                                                                String
  username                                                                                            String                                 @unique(map: "users_username_unique")
  email                                                                                               String                                 @unique(map: "users_email_unique")
  password                                                                                            String
  remember_token                                                                                      String?                                @db.VarChar(100)
  created_at                                                                                          DateTime?                              @db.Timestamp(0)
  updated_at                                                                                          DateTime?                              @db.Timestamp(0)
  deleted_at                                                                                          DateTime?                              @db.Timestamp(0)
  id_tipopersona                                                                                      Int                                    @db.UnsignedInt
  id_persona                                                                                          Int                                    @db.UnsignedInt
  id_empleado                                                                                         Int                                    @db.UnsignedInt
  enf_escala_valoracion_enf_escala_valoracion_id_autorizoTousers                                      enf_escala_valoracion[]                @relation("enf_escala_valoracion_id_autorizoTousers")
  enf_escala_valoracion_enf_escala_valoracion_id_canceloTousers                                       enf_escala_valoracion[]                @relation("enf_escala_valoracion_id_canceloTousers")
  enf_escala_valoracion_enf_escala_valoracion_id_userTousers                                          enf_escala_valoracion[]                @relation("enf_escala_valoracion_id_userTousers")
  enf_medidas_antropometricas_enf_medidas_antropometricas_id_autorizoTousers                          enf_medidas_antropometricas[]          @relation("enf_medidas_antropometricas_id_autorizoTousers")
  enf_medidas_antropometricas_enf_medidas_antropometricas_id_canceloTousers                           enf_medidas_antropometricas[]          @relation("enf_medidas_antropometricas_id_canceloTousers")
  enf_medidas_antropometricas_enf_medidas_antropometricas_id_userTousers                              enf_medidas_antropometricas[]          @relation("enf_medidas_antropometricas_id_userTousers")
  enf_oxigenoterapia_enf_oxigenoterapia_id_autorizoTousers                                            enf_oxigenoterapia[]                   @relation("enf_oxigenoterapia_id_autorizoTousers")
  enf_oxigenoterapia_enf_oxigenoterapia_id_canceloTousers                                             enf_oxigenoterapia[]                   @relation("enf_oxigenoterapia_id_canceloTousers")
  enf_oxigenoterapia_enf_oxigenoterapia_id_userTousers                                                enf_oxigenoterapia[]                   @relation("enf_oxigenoterapia_id_userTousers")
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_autorizoTousers                        enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_autorizoTousers")
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_canceloTousers                         enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_canceloTousers")
  enf_procedimientos_invasivos_enf_procedimientos_invasivos_id_userTousers                            enf_procedimientos_invasivos[]         @relation("enf_procedimientos_invasivos_id_userTousers")
  enf_procedimientos_invasivos_detalle_enf_procedimientos_invasivos_detalle_id_autorizoTousers        enf_procedimientos_invasivos_detalle[] @relation("enf_procedimientos_invasivos_detalle_id_autorizoTousers")
  enf_procedimientos_invasivos_detalle_enf_procedimientos_invasivos_detalle_id_canceloTousers         enf_procedimientos_invasivos_detalle[] @relation("enf_procedimientos_invasivos_detalle_id_canceloTousers")
  enf_procedimientos_invasivos_detalle_enf_procedimientos_invasivos_detalle_id_userTousers            enf_procedimientos_invasivos_detalle[] @relation("enf_procedimientos_invasivos_detalle_id_userTousers")
  enf_ulceras_presion_enf_ulceras_presion_id_autorizoTousers                                          enf_ulceras_presion[]                  @relation("enf_ulceras_presion_id_autorizoTousers")
  enf_ulceras_presion_enf_ulceras_presion_id_canceloTousers                                           enf_ulceras_presion[]                  @relation("enf_ulceras_presion_id_canceloTousers")
  enf_ulceras_presion_enf_ulceras_presion_id_userTousers                                              enf_ulceras_presion[]                  @relation("enf_ulceras_presion_id_userTousers")
  hcl_historia_clinica_hcl_historia_clinica_id_autorizoTousers                                        hcl_historia_clinica[]                 @relation("hcl_historia_clinica_id_autorizoTousers")
  hcl_historia_clinica_hcl_historia_clinica_id_userTousers                                            hcl_historia_clinica[]                 @relation("hcl_historia_clinica_id_userTousers")
  hpz_auxiliares_dx_comentarios_hpz_auxiliares_dx_comentarios_id_autorizoTousers                      hpz_auxiliares_dx_comentarios[]        @relation("hpz_auxiliares_dx_comentarios_id_autorizoTousers")
  hpz_auxiliares_dx_comentarios_hpz_auxiliares_dx_comentarios_id_userTousers                          hpz_auxiliares_dx_comentarios[]        @relation("hpz_auxiliares_dx_comentarios_id_userTousers")
  hpz_enf_intervenciones_hpz_enf_intervenciones_id_autorizoTousers                                    hpz_enf_intervenciones[]               @relation("hpz_enf_intervenciones_id_autorizoTousers")
  hpz_enf_intervenciones_hpz_enf_intervenciones_id_canceloTousers                                     hpz_enf_intervenciones[]               @relation("hpz_enf_intervenciones_id_canceloTousers")
  hpz_enf_intervenciones_hpz_enf_intervenciones_id_userTousers                                        hpz_enf_intervenciones[]               @relation("hpz_enf_intervenciones_id_userTousers")
  hpz_indicacion_medicamentos_hpz_indicacion_medicamentos_id_autorizoTousers                          hpz_indicacion_medicamentos[]          @relation("hpz_indicacion_medicamentos_id_autorizoTousers")
  hpz_indicacion_medicamentos_hpz_indicacion_medicamentos_id_suspendioTousers                         hpz_indicacion_medicamentos[]          @relation("hpz_indicacion_medicamentos_id_suspendioTousers")
  hpz_indicacion_medicamentos_hpz_indicacion_medicamentos_id_userTousers                              hpz_indicacion_medicamentos[]          @relation("hpz_indicacion_medicamentos_id_userTousers")
  hpz_indicaciones_medicas_hpz_indicaciones_medicas_id_autorizoTousers                                hpz_indicaciones_medicas[]             @relation("hpz_indicaciones_medicas_id_autorizoTousers")
  hpz_indicaciones_medicas_hpz_indicaciones_medicas_id_canceloTousers                                 hpz_indicaciones_medicas[]             @relation("hpz_indicaciones_medicas_id_canceloTousers")
  hpz_indicaciones_medicas_hpz_indicaciones_medicas_id_userTousers                                    hpz_indicaciones_medicas[]             @relation("hpz_indicaciones_medicas_id_userTousers")
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_user_confirmacionTousers                       hpz_ingreso_hospitalario[]             @relation("hpz_ingreso_hospitalario_id_user_confirmacionTousers")
  hpz_ingreso_hospitalario_hpz_ingreso_hospitalario_id_userTousers                                    hpz_ingreso_hospitalario[]             @relation("hpz_ingreso_hospitalario_id_userTousers")
  hpz_ingreso_signos_vitales_hpz_ingreso_signos_vitales_id_autorizoTousers                            hpz_ingreso_signos_vitales[]           @relation("hpz_ingreso_signos_vitales_id_autorizoTousers")
  hpz_ingreso_signos_vitales_hpz_ingreso_signos_vitales_id_canceloTousers                             hpz_ingreso_signos_vitales[]           @relation("hpz_ingreso_signos_vitales_id_canceloTousers")
  hpz_ingreso_signos_vitales_hpz_ingreso_signos_vitales_id_userTousers                                hpz_ingreso_signos_vitales[]           @relation("hpz_ingreso_signos_vitales_id_userTousers")
  hpz_medicamento_ministracion_hpz_medicamento_ministracion_id_autorizoTousers                        hpz_medicamento_ministracion[]         @relation("hpz_medicamento_ministracion_id_autorizoTousers")
  hpz_medicamento_ministracion_hpz_medicamento_ministracion_id_canceloTousers                         hpz_medicamento_ministracion[]         @relation("hpz_medicamento_ministracion_id_canceloTousers")
  hpz_medicamento_ministracion_hpz_medicamento_ministracion_id_userTousers                            hpz_medicamento_ministracion[]         @relation("hpz_medicamento_ministracion_id_userTousers")
  hpz_paciente_auxiliares_diagnostico_hpz_paciente_auxiliares_diagnostico_id_user_confirmacionTousers hpz_paciente_auxiliares_diagnostico[]  @relation("hpz_paciente_auxiliares_diagnostico_id_user_confirmacionTousers")
  hpz_paciente_auxiliares_diagnostico_hpz_paciente_auxiliares_diagnostico_id_userTousers              hpz_paciente_auxiliares_diagnostico[]  @relation("hpz_paciente_auxiliares_diagnostico_id_userTousers")
  hpz_paciente_nota_medica_hpz_paciente_nota_medica_id_canceloTousers                                 hpz_paciente_nota_medica[]             @relation("hpz_paciente_nota_medica_id_canceloTousers")
  hpz_paciente_nota_medica_hpz_paciente_nota_medica_id_user_confirmacionTousers                       hpz_paciente_nota_medica[]             @relation("hpz_paciente_nota_medica_id_user_confirmacionTousers")
  hpz_paciente_nota_medica_hpz_paciente_nota_medica_id_userTousers                                    hpz_paciente_nota_medica[]             @relation("hpz_paciente_nota_medica_id_userTousers")
  hpz_paciente_nota_trabajo_social                                                                    hpz_paciente_nota_trabajo_social[]
  cmp_persona                                                                                         cmp_persona                            @relation(fields: [id_persona], references: [id], onUpdate: Restrict, map: "users_id_persona_foreign")
  cat_tipos_persona                                                                                   cat_tipos_persona                      @relation(fields: [id_tipopersona], references: [id], onUpdate: Restrict, map: "users_id_tipopersona_foreign")

  @@index([id_persona], map: "users_id_persona_foreign")
  @@index([id_tipopersona], map: "users_id_tipopersona_foreign")
}

enum rcf_resguardo_tipo {
  ASIGNACION
  PRESTAMO
}

enum rch_empleados_madre {
  SI
  NO
}

enum cat_equipos_clasificacion_equipo {
  EM
  MAQ
  COMPUTO
}

enum hpz_ingreso_hospitalario_estado_salud {
  NO_ESPECIFICADO @map("NO ESPECIFICADO")
  VIVO
  CONSIENTE
  INCONSIENTE
  MUERTO
}

enum int_page_estatus {
  PUBLICADO
  INACTIVO
}

enum rch_empleados_pago_riesgo {
  NO_APLICA @map("NO APLICA")
  ALTO
  MEDIANO
  BAJO
}

enum cat_servicios_tipoAgenda {
  C
  E
  R
}

enum rcf_incidencias_servicio {
  INTERNO
  EXTERNO
}

enum hpz_ingreso_hospitalario_estado_ingreso {
  NO_ESPECIFICADO @map("NO ESPECIFICADO")
  GRAVE
  DELICADO
  MEJORIA
}

enum rcf_kardex_servicio {
  INTERNO
  EXTERNO
}

enum cmp_persona_sexo {
  HOMBRE
  MUJER
}

enum rch_empleados_checa {
  SI
  NO
}

enum hpz_paciente_atencion_prioritaria {
  NINGUNA
  DISCAPACIDAD_F_SICA      @map("DISCAPACIDAD FÍSICA")
  DISCAPACIDAD_INTELECTUAL @map("DISCAPACIDAD INTELECTUAL")
  ADULTO_MAYOR             @map("ADULTO MAYOR")
  IND_GENA                 @map("INDÍGENA")
}

enum rcf_kardex_tipo_servicio {
  CORRECTIVO
  INSTALACION
  PREVENTIVO
  RUTINA
  PREVENTIVO_MENOR @map("PREVENTIVO MENOR")
}

enum cat_equipos_estatus {
  ACTIVO
  INACTIVO
}

enum rch_empleados_nombramiento {
  SI
  NO
}

enum cat_proveedores_estatus {
  Activo
  Inactivo
}
